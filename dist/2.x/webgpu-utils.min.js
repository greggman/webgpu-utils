!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).webgpuUtils={})}(this,function(e){"use strict";const t=(e,t)=>((e+t-1)/t|0)*t;const n=e=>null!==e&&"function"==typeof e[Symbol.iterator];function r(e){if(!e)return[0,0,0];if(n(e)){const[t,n=0,r=0]=[...e];return[t,n,r]}const{x:t=0,y:r=0,z:s=0}=e;return[t,r,s]}function s(e,t){const n=r(e),s=r(t);return n.map((e,t)=>e+s[t])}const a=e=>e&&"number"==typeof e.length&&e.buffer instanceof ArrayBuffer&&"number"==typeof e.byteLength,i={i32:{numElements:1,align:4,size:4,type:"i32",View:Int32Array},u32:{numElements:1,align:4,size:4,type:"u32",View:Uint32Array},f32:{numElements:1,align:4,size:4,type:"f32",View:Float32Array},f16:{numElements:1,align:2,size:2,type:"u16",View:Uint16Array},vec2f:{numElements:2,align:8,size:8,type:"f32",View:Float32Array},vec2i:{numElements:2,align:8,size:8,type:"i32",View:Int32Array},vec2u:{numElements:2,align:8,size:8,type:"u32",View:Uint32Array},vec2h:{numElements:2,align:4,size:4,type:"u16",View:Uint16Array},vec3i:{numElements:3,align:16,size:12,type:"i32",View:Int32Array},vec3u:{numElements:3,align:16,size:12,type:"u32",View:Uint32Array},vec3f:{numElements:3,align:16,size:12,type:"f32",View:Float32Array},vec3h:{numElements:3,align:8,size:6,type:"u16",View:Uint16Array},vec4i:{numElements:4,align:16,size:16,type:"i32",View:Int32Array},vec4u:{numElements:4,align:16,size:16,type:"u32",View:Uint32Array},vec4f:{numElements:4,align:16,size:16,type:"f32",View:Float32Array},vec4h:{numElements:4,align:8,size:8,type:"u16",View:Uint16Array},mat2x2f:{numElements:4,align:8,size:16,type:"f32",View:Float32Array},mat2x2h:{numElements:4,align:4,size:8,type:"u16",View:Uint16Array},mat3x2f:{numElements:6,align:8,size:24,type:"f32",View:Float32Array},mat3x2h:{numElements:6,align:4,size:12,type:"u16",View:Uint16Array},mat4x2f:{numElements:8,align:8,size:32,type:"f32",View:Float32Array},mat4x2h:{numElements:8,align:4,size:16,type:"u16",View:Uint16Array},mat2x3f:{numElements:8,align:16,size:32,pad:[3,1],type:"f32",View:Float32Array},mat2x3h:{numElements:8,align:8,size:16,pad:[3,1],type:"u16",View:Uint16Array},mat3x3f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x3h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x3f:{numElements:16,align:16,size:64,pad:[3,1],type:"f32",View:Float32Array},mat4x3h:{numElements:16,align:8,size:32,pad:[3,1],type:"u16",View:Uint16Array},mat2x4f:{numElements:8,align:16,size:32,type:"f32",View:Float32Array},mat2x4h:{numElements:8,align:8,size:16,type:"u16",View:Uint16Array},mat3x4f:{numElements:12,align:16,size:48,pad:[3,1],type:"f32",View:Float32Array},mat3x4h:{numElements:12,align:8,size:24,pad:[3,1],type:"u16",View:Uint16Array},mat4x4f:{numElements:16,align:16,size:64,type:"f32",View:Float32Array},mat4x4h:{numElements:16,align:8,size:32,type:"u16",View:Uint16Array},bool:{numElements:0,align:1,size:0,type:"bool",View:Uint32Array}},o={...i,"atomic<i32>":i.i32,"atomic<u32>":i.u32,"vec2<i32>":i.vec2i,"vec2<u32>":i.vec2u,"vec2<f32>":i.vec2f,"vec2<f16>":i.vec2h,"vec3<i32>":i.vec3i,"vec3<u32>":i.vec3u,"vec3<f32>":i.vec3f,"vec3<f16>":i.vec3h,"vec4<i32>":i.vec4i,"vec4<u32>":i.vec4u,"vec4<f32>":i.vec4f,"vec4<f16>":i.vec4h,"mat2x2<f32>":i.mat2x2f,"mat2x2<f16>":i.mat2x2h,"mat3x2<f32>":i.mat3x2f,"mat3x2<f16>":i.mat3x2h,"mat4x2<f32>":i.mat4x2f,"mat4x2<f16>":i.mat4x2h,"mat2x3<f32>":i.mat2x3f,"mat2x3<f16>":i.mat2x3h,"mat3x3<f32>":i.mat3x3f,"mat3x3<f16>":i.mat3x3h,"mat4x3<f32>":i.mat4x3f,"mat4x3<f16>":i.mat4x3h,"mat2x4<f32>":i.mat2x4f,"mat2x4<f16>":i.mat2x4h,"mat3x4<f32>":i.mat3x4f,"mat3x4<f16>":i.mat3x4h,"mat4x4<f32>":i.mat4x4f,"mat4x4<f16>":i.mat4x4h},u=(c=o,Object.keys(c));var c;function l(e=[],t){const n=new Set;for(const r of u){const s=o[r];n.has(s)||(n.add(s),s.flatten=e.includes(r)?t:!t)}}function f(e,n,r,s){const{size:a,type:i}=e;try{const{View:e,align:u,size:c}=o[i],l=void 0!==s,f=l?t(a,u):c,h=f/e.BYTES_PER_ELEMENT;return new e(n,r,h*(l?0===s?(n.byteLength-r)/f:s:1))}catch{throw new Error(`unknown type: ${i}`)}}function h(e){return!e.fields&&!e.elementType}function p(e,n,r){const s=r||0,a=n||new ArrayBuffer(function(e){const n=e;if(n.elementType)return n.size;{const r=e,s=n.numElements||1;if(r.fields)return e.size*s;{const n=e,{align:r}=o[n.type];return s>1?t(e.size,r)*s:e.size}}}(e)),i=(e,t)=>{const n=e,r=n.elementType;if(r){if(h(r)&&o[r.type].flatten)return f(r,a,t,n.numElements);{const{size:o}=b(e),u=0===n.numElements?(a.byteLength-t)/o:n.numElements;return s=e=>i(r,t+o*e),new Array(u).fill(0).map((e,t)=>s(t))}}if("string"==typeof e)throw Error("unreachable");{const n=e.fields;if(n){const e={};for(const[r,{type:s,offset:a}]of Object.entries(n))e[r]=i(s,t+a);return e}return f(e,a,t)}var s};return{views:i(e,s),arrayBuffer:a}}function m(e,t){if(void 0!==e)if(a(t)){const n=t;if(1===n.length&&"number"==typeof e)n[0]=e;else if(Array.isArray(e[0])||a(e[0])){const t=e[0].length,r=3===t?4:t;for(let t=0;t<e.length;++t){const s=t*r;n.set(e[t],s)}}else n.set(e)}else if(Array.isArray(t)){const n=t;e.forEach((e,t)=>{m(e,n[t])})}else{const n=t;for(const[t,r]of Object.entries(e)){const e=n[t];e&&m(r,e)}}}l();const d=new WeakMap;function y(e,t){const n=function(e){let t=d.get(e);return t||(t=new Map,d.set(e,t)),t}(e);let r=n.get(t);return r||(r=new t(e),n.set(t,r)),r}function g(e,t,n,r){const s=y(n,o[e.type].View),a=r/s.BYTES_PER_ELEMENT;"number"==typeof t?s[a]=t:s.set(t,a)}function x(e,t,n,r=0){const s=e.elementType;if(s){if(h(s)){const e=s;if(function(e){return a(e)||Array.isArray(e)&&"number"==typeof e[0]}(t))return void g(e,t,n,r)}return void t.forEach((e,t)=>{x(s,e,n,r+s.size*t)})}const i=e.fields;if(i)for(const[e,s]of Object.entries(t)){const t=i[e];t&&x(t.type,s,n,r+t.offset)}else g(e,t,n,r)}function _(e){const t=e.elementType;if(t)return _(t);const n=e.fields;if(n)return Object.values(n).reduce((e,{type:t})=>Math.max(e,_(t)),0);const{type:r}=e,{align:s}=o[r];return s}function b(e){const n=e.elementType;if(n){const e=n.size,r=_(n);return{unalignedSize:e,align:r,size:t(e,r)}}const r=e.fields;if(r){const e=Object.values(r).pop();if(0===e.type.size)return b(e.type)}return{size:0,unalignedSize:0,align:1}}class v{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}get isPointer(){return!1}getTypeName(){return this.name}}class w{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class k extends v{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class I extends v{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}getTypeName(){return`array<${this.format.getTypeName()}, ${this.count}>`}}class T extends v{constructor(e,t,n){super(e,n),this.format=t}get isPointer(){return!0}getTypeName(){return`&${this.format.getTypeName()}`}}class A extends v{constructor(e,t,n,r){super(e,n),this.format=t,this.access=r}get isTemplate(){return!0}getTypeName(){let e=this.name;if(null!==this.format){if("vec2"===e||"vec3"===e||"vec4"===e||"mat2x2"===e||"mat2x3"===e||"mat2x4"===e||"mat3x2"===e||"mat3x3"===e||"mat3x4"===e||"mat4x2"===e||"mat4x3"===e||"mat4x4"===e){if("f32"===this.format.name)return e+="f",e;if("i32"===this.format.name)return e+="i",e;if("u32"===this.format.name)return e+="u",e;if("bool"===this.format.name)return e+="b",e;if("f16"===this.format.name)return e+="h",e}e+=`<${this.format.name}>`}else if("vec2"===e||"vec3"===e||"vec4"===e)return e;return e}}var S;(e=>{e[e.Uniform=0]="Uniform",e[e.Storage=1]="Storage",e[e.Texture=2]="Texture",e[e.Sampler=3]="Sampler",e[e.StorageTexture=4]="StorageTexture"})(S||(S={}));class E{constructor(e,t,n,r,s,a,i){this.name=e,this.type=t,this.group=n,this.binding=r,this.attributes=s,this.resourceType=a,this.access=i}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class L{constructor(e,t){this.name=e,this.type=t}}class ${constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r,this.interpolation=null}}class V{constructor(e,t,n,r){this.name=e,this.type=t,this.locationType=n,this.location=r}}class O{constructor(e,t,n,r){this.name=e,this.type=t,this.attributes=n,this.id=r}}class D{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class B{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class C{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}const F=new Float32Array(1),U=new Int32Array(F.buffer),N=new Uint16Array(1);function M(e){F[0]=e;const t=U[0],n=t>>31&1;let r=t>>23&255,s=8388607&t;if(255===r)return N[0]=n<<15|31744|(0!==s?512:0),N[0];if(0===r){if(0===s)return N[0]=n<<15,N[0];s|=8388608;let e=113;for(;!(8388608&s);)s<<=1,e--;return r=127-e,s&=8388607,r>0?(s=(s>>126-r)+(s>>127-r&1),N[0]=n<<15|r<<10|s>>13,N[0]):(N[0]=n<<15,N[0])}return r=r-127+15,r>=31?(N[0]=n<<15|31744,N[0]):r<=0?r<-10?(N[0]=n<<15,N[0]):(s=(8388608|s)>>1-r,N[0]=n<<15|s>>13,N[0]):(s>>=13,N[0]=n<<15|r<<10|s,N[0])}const P=new Uint32Array(1),z=new Float32Array(P.buffer,0,1);function W(e){const t=112+(e>>6&31)<<23|(63&e)<<17;return P[0]=t,z[0]}function q(e,t,n,r){const s=[0,0,0,0];for(let c=0;c<r;++c)switch(n){case"8unorm":s[c]=e[t]/255,t++;break;case"8snorm":s[c]=e[t]/255*2-1,t++;break;case"8uint":s[c]=e[t],t++;break;case"8sint":s[c]=e[t]-127,t++;break;case"16uint":s[c]=e[t]|e[t+1]<<8,t+=2;break;case"16sint":s[c]=(e[t]|e[t+1]<<8)-32768,t+=2;break;case"16float":s[c]=(void 0,void 0,void 0,i=(32768&(a=e[t]|e[t+1]<<8))>>15,u=1023&a,0==(o=(31744&a)>>10)?(i?-1:1)*Math.pow(2,-14)*(u/Math.pow(2,10)):31==o?u?NaN:1/0*(i?-1:1):(i?-1:1)*Math.pow(2,o-15)*(1+u/Math.pow(2,10))),t+=2;break;case"32uint":case"32sint":s[c]=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24,t+=4;break;case"32float":s[c]=new Float32Array(e.buffer,t,1)[0],t+=4}var a,i,o,u;return s}function H(e,t,n,r,s){for(let a=0;a<r;++a)switch(n){case"8unorm":e[t]=255*s[a],t++;break;case"8snorm":e[t]=.5*(s[a]+1)*255,t++;break;case"8uint":e[t]=s[a],t++;break;case"8sint":e[t]=s[a]+127,t++;break;case"16uint":new Uint16Array(e.buffer,t,1)[0]=s[a],t+=2;break;case"16sint":new Int16Array(e.buffer,t,1)[0]=s[a],t+=2;break;case"16float":{const n=M(s[a]);new Uint16Array(e.buffer,t,1)[0]=n,t+=2;break}case"32uint":new Uint32Array(e.buffer,t,1)[0]=s[a],t+=4;break;case"32sint":new Int32Array(e.buffer,t,1)[0]=s[a],t+=4;break;case"32float":new Float32Array(e.buffer,t,1)[0]=s[a],t+=4}return s}const R={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"rgba8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bgra8unorm-srgb":{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,channels:2},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0,channels:1},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:"depth32float",channels:1},"depth24plus-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:"depth32float",channels:1},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,channels:1},"depth32float-stencil8":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:"depth32float",channels:1},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,channels:4},"bc1-rgba-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc1-rgba-unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc2-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc3-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc4-r-unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc4-r-snorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:1},"bc5-rg-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc5-rg-snorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:2},"bc6h-rgb-ufloat":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc6h-rgb-float":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"bc7-rgba-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgb8a1unorm-srgb":{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"etc2-rgba8unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"eac-r11unorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-r11snorm":{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0,channels:1},"eac-rg11unorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"eac-rg11snorm":{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0,channels:2},"astc-4x4-unorm":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-4x4-unorm-srgb":{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x4-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0,channels:4},"astc-5x5-unorm":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-5x5-unorm-srgb":{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x5-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0,channels:4},"astc-6x6-unorm":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-6x6-unorm-srgb":{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0,channels:4},"astc-8x5-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x5-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0,channels:4},"astc-8x6-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x6-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0,channels:4},"astc-8x8-unorm":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-8x8-unorm-srgb":{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0,channels:4},"astc-10x5-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x5-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0,channels:4},"astc-10x6-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x6-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0,channels:4},"astc-10x8-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x8-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0,channels:4},"astc-10x10-unorm":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-10x10-unorm-srgb":{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x10-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0,channels:4},"astc-12x12-unorm":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4},"astc-12x12-unorm-srgb":{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0,channels:4}};class G{constructor(){this.id=G._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return""}search(e){e(this)}searchBlock(e,t){if(e){t(j.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(X.instance)}}constEvaluate(e,t){throw new Error("Cannot evaluate node")}constEvaluateString(e){return this.constEvaluate(e).toString()}}G._id=0;class j extends G{}j.instance=new j;class X extends G{}X.instance=new X;const Y=new Set(["all","all","any","select","arrayLength","abs","acos","acosh","asin","asinh","atan","atanh","atan2","ceil","clamp","cos","cosh","countLeadingZeros","countOneBits","countTrailingZeros","cross","degrees","determinant","distance","dot","dot4U8Packed","dot4I8Packed","exp","exp2","extractBits","faceForward","firstLeadingBit","firstTrailingBit","floor","fma","fract","frexp","insertBits","inverseSqrt","ldexp","length","log","log2","max","min","mix","modf","normalize","pow","quantizeToF16","radians","reflect","refract","reverseBits","round","saturate","sign","sin","sinh","smoothStep","sqrt","step","tan","tanh","transpose","trunc","dpdx","dpdxCoarse","dpdxFine","dpdy","dpdyCoarse","dpdyFine","fwidth","fwidthCoarse","fwidthFine","textureDimensions","textureGather","textureGatherCompare","textureLoad","textureNumLayers","textureNumLevels","textureNumSamples","textureSample","textureSampleBias","textureSampleCompare","textureSampleCompareLevel","textureSampleGrad","textureSampleLevel","textureSampleBaseClampToEdge","textureStore","atomicLoad","atomicStore","atomicAdd","atomicSub","atomicMax","atomicMin","atomicAnd","atomicOr","atomicXor","atomicExchange","atomicCompareExchangeWeak","pack4x8snorm","pack4x8unorm","pack4xI8","pack4xU8","pack4x8Clamp","pack4xU8Clamp","pack2x16snorm","pack2x16unorm","pack2x16float","unpack4x8snorm","unpack4x8unorm","unpack4xI8","unpack4xU8","unpack2x16snorm","unpack2x16unorm","unpack2x16float","storageBarrier","textureBarrier","workgroupBarrier","workgroupUniformLoad","subgroupAdd","subgroupExclusiveAdd","subgroupInclusiveAdd","subgroupAll","subgroupAnd","subgroupAny","subgroupBallot","subgroupBroadcast","subgroupBroadcastFirst","subgroupElect","subgroupMax","subgroupMin","subgroupMul","subgroupExclusiveMul","subgroupInclusiveMul","subgroupOr","subgroupShuffle","subgroupShuffleDown","subgroupShuffleUp","subgroupShuffleXor","subgroupXor","quadBroadcast","quadSwapDiagonal","quadSwapX","quadSwapY"]);class Z extends G{constructor(){super()}}class Q extends Z{constructor(e,t,n,r,s,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=r,this.startLine=s,this.endLine=a}get astNodeType(){return"function"}search(e){if(this.attributes)for(const t of this.attributes)e(t);e(this);for(const t of this.args)e(t);this.searchBlock(this.body,e)}}class K extends Z{constructor(e){super(),this.expression=e}get astNodeType(){return"staticAssert"}search(e){this.expression.search(e)}}class J extends Z{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"while"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class ee extends Z{constructor(e,t){super(),this.body=e,this.loopId=t}get astNodeType(){return"continuing"}search(e){this.searchBlock(this.body,e)}}class te extends Z{constructor(e,t,n,r){super(),this.init=e,this.condition=t,this.increment=n,this.body=r}get astNodeType(){return"for"}search(e){var t,n,r;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(r=this.increment)||void 0===r||r.search(e),this.searchBlock(this.body,e)}}class ne extends Z{constructor(e,t,n,r,s){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"var"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class re extends Z{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return"override"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class se extends Z{constructor(e,t,n,r,s){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"let"}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class ae extends Z{constructor(e,t,n,r,s){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=r,this.value=s}get astNodeType(){return"const"}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}var ie,oe,ue,ce;(e=>{e.increment="++",e.decrement="--"})(ie||(ie={})),(e=>{e.parse=function(t){const n=t;if("parse"==n)throw new Error("Invalid value for IncrementOperator");return e[n]}})(ie||(ie={}));class le extends Z{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return"increment"}search(e){this.variable.search(e)}}(e=>{e.assign="=",e.addAssign="+=",e.subtractAssin="-=",e.multiplyAssign="*=",e.divideAssign="/=",e.moduloAssign="%=",e.andAssign="&=",e.orAssign="|=",e.xorAssign="^=",e.shiftLeftAssign="<<=",e.shiftRightAssign=">>="})(oe||(oe={})),(e=>{e.parse=function(e){const t=e;if("parse"==t)throw new Error("Invalid value for AssignOperator");return t}})(oe||(oe={}));class fe extends Z{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return"assign"}search(e){this.variable.search(e),this.value.search(e)}}class he extends Z{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return"call"}isBuiltin(){return Y.has(this.name)}search(e){for(const t of this.args)t.search(e);e(this)}}class pe extends Z{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return"loop"}}class me extends Z{constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return"switch"}}class de extends Z{constructor(e,t,n,r){super(),this.condition=e,this.body=t,this.elseif=n,this.else=r}get astNodeType(){return"if"}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class ye extends Z{constructor(e){super(),this.value=e}get astNodeType(){return"return"}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class ge extends Z{constructor(e){super(),this.name=e}get astNodeType(){return"enable"}}class xe extends Z{constructor(e){super(),this.extensions=e}get astNodeType(){return"requires"}}class _e extends Z{constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return"diagnostic"}}class be extends Z{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return"alias"}}class ve extends Z{constructor(){super()}get astNodeType(){return"discard"}}class we extends Z{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return"break"}}class ke extends Z{constructor(){super(),this.loopId=-1}get astNodeType(){return"continue"}}class Ie extends Z{constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return"type"}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if("f32"===t.name)return t;for(let n=1;n<e.length;++n){const r=Ie._priority.get(t.name);Ie._priority.get(e[n].name)<r&&(t=e[n])}return"x32"===t.name?Ie.i32:t}getTypeName(){return this.name}}Ie.x32=new Ie("x32"),Ie.f32=new Ie("f32"),Ie.i32=new Ie("i32"),Ie.u32=new Ie("u32"),Ie.f16=new Ie("f16"),Ie.bool=new Ie("bool"),Ie.void=new Ie("void"),Ie._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class Te extends Ie{constructor(e){super(e)}}class Ae extends Ie{constructor(e,t,n,r){super(e),this.members=t,this.startLine=n,this.endLine=r}get astNodeType(){return"struct"}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}search(e){for(const t of this.members)e(t)}}class Se extends Ie{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"template"}getTypeName(){let e=this.name;if(null!==this.format){if("vec2"===e||"vec3"===e||"vec4"===e||"mat2x2"===e||"mat2x3"===e||"mat2x4"===e||"mat3x2"===e||"mat3x3"===e||"mat3x4"===e||"mat4x2"===e||"mat4x3"===e||"mat4x4"===e){if("f32"===this.format.name)return e+="f",e;if("i32"===this.format.name)return e+="i",e;if("u32"===this.format.name)return e+="u",e;if("bool"===this.format.name)return e+="b",e;if("f16"===this.format.name)return e+="h",e}e+=`<${this.format.name}>`}else if("vec2"===e||"vec3"===e||"vec4"===e)return e;return e}}Se.vec2f=new Se("vec2",Ie.f32,null),Se.vec3f=new Se("vec3",Ie.f32,null),Se.vec4f=new Se("vec4",Ie.f32,null),Se.vec2i=new Se("vec2",Ie.i32,null),Se.vec3i=new Se("vec3",Ie.i32,null),Se.vec4i=new Se("vec4",Ie.i32,null),Se.vec2u=new Se("vec2",Ie.u32,null),Se.vec3u=new Se("vec3",Ie.u32,null),Se.vec4u=new Se("vec4",Ie.u32,null),Se.vec2h=new Se("vec2",Ie.f16,null),Se.vec3h=new Se("vec3",Ie.f16,null),Se.vec4h=new Se("vec4",Ie.f16,null),Se.vec2b=new Se("vec2",Ie.bool,null),Se.vec3b=new Se("vec3",Ie.bool,null),Se.vec4b=new Se("vec4",Ie.bool,null),Se.mat2x2f=new Se("mat2x2",Ie.f32,null),Se.mat2x3f=new Se("mat2x3",Ie.f32,null),Se.mat2x4f=new Se("mat2x4",Ie.f32,null),Se.mat3x2f=new Se("mat3x2",Ie.f32,null),Se.mat3x3f=new Se("mat3x3",Ie.f32,null),Se.mat3x4f=new Se("mat3x4",Ie.f32,null),Se.mat4x2f=new Se("mat4x2",Ie.f32,null),Se.mat4x3f=new Se("mat4x3",Ie.f32,null),Se.mat4x4f=new Se("mat4x4",Ie.f32,null),Se.mat2x2h=new Se("mat2x2",Ie.f16,null),Se.mat2x3h=new Se("mat2x3",Ie.f16,null),Se.mat2x4h=new Se("mat2x4",Ie.f16,null),Se.mat3x2h=new Se("mat3x2",Ie.f16,null),Se.mat3x3h=new Se("mat3x3",Ie.f16,null),Se.mat3x4h=new Se("mat3x4",Ie.f16,null),Se.mat4x2h=new Se("mat4x2",Ie.f16,null),Se.mat4x3h=new Se("mat4x3",Ie.f16,null),Se.mat4x4h=new Se("mat4x4",Ie.f16,null),Se.mat2x2i=new Se("mat2x2",Ie.i32,null),Se.mat2x3i=new Se("mat2x3",Ie.i32,null),Se.mat2x4i=new Se("mat2x4",Ie.i32,null),Se.mat3x2i=new Se("mat3x2",Ie.i32,null),Se.mat3x3i=new Se("mat3x3",Ie.i32,null),Se.mat3x4i=new Se("mat3x4",Ie.i32,null),Se.mat4x2i=new Se("mat4x2",Ie.i32,null),Se.mat4x3i=new Se("mat4x3",Ie.i32,null),Se.mat4x4i=new Se("mat4x4",Ie.i32,null),Se.mat2x2u=new Se("mat2x2",Ie.u32,null),Se.mat2x3u=new Se("mat2x3",Ie.u32,null),Se.mat2x4u=new Se("mat2x4",Ie.u32,null),Se.mat3x2u=new Se("mat3x2",Ie.u32,null),Se.mat3x3u=new Se("mat3x3",Ie.u32,null),Se.mat3x4u=new Se("mat3x4",Ie.u32,null),Se.mat4x2u=new Se("mat4x2",Ie.u32,null),Se.mat4x3u=new Se("mat4x3",Ie.u32,null),Se.mat4x4u=new Se("mat4x4",Ie.u32,null);class Ee extends Ie{constructor(e,t,n,r){super(e),this.storage=t,this.type=n,this.access=r}get astNodeType(){return"pointer"}}class Le extends Ie{constructor(e,t,n,r){super(e),this.attributes=t,this.format=n,this.count=r}get astNodeType(){return"array"}get isArray(){return!0}}class $e extends Ie{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return"sampler"}}class Ve extends G{constructor(){super(),this.postfix=null}}class Oe extends Ve{constructor(e){super(),this.value=e}get astNodeType(){return"stringExpr"}toString(){return this.value}constEvaluateString(){return this.value}}class De extends Ve{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return"createExpr"}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class Be extends Ve{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return"callExpr"}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return Y.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}class Ce extends Ve{constructor(e){super(),this.name=e}get astNodeType(){return"varExpr"}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class Fe extends Ve{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return"constExpr"}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getSubData(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e)}}class Ue extends Ve{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return"literalExpr"}constEvaluate(e,t){return void 0!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof et}get isVector(){return this.value instanceof nt||this.value instanceof rt}get scalarValue(){return this.value instanceof et?this.value.value:(console.error("Value is not scalar."),0)}get vectorValue(){return this.value instanceof nt||this.value instanceof rt?this.value.data:(console.error("Value is not a vector or matrix."),new Float32Array(0))}}class Ne extends Ve{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return"bitcastExpr"}search(e){this.value.search(e)}}class Me extends Ve{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class Pe extends Ve{constructor(){super()}}class ze extends Pe{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return"unaryOp"}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class We extends Pe{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return"binaryOp"}_getPromotedType(e,t){return e.name===t.name?e:"f32"===e.name||"f32"===t.name?Ie.f32:"u32"===e.name||"u32"===t.name?Ie.u32:Ie.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class qe extends G{constructor(e){super(),this.body=e}}class He extends Ve{constructor(){super()}get astNodeType(){return"default"}}class Re extends qe{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return"case"}search(e){this.searchBlock(this.body,e)}}class Ge extends qe{constructor(e){super(e)}get astNodeType(){return"default"}search(e){this.searchBlock(this.body,e)}}class je extends G{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"argument"}}class Xe extends G{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return"elseif"}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class Ye extends G{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return"member"}}class Ze extends G{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return"attribute"}}class Qe{constructor(e,t){this.parent=null,this.typeInfo=e,this.parent=t,this.id=Qe._id++}clone(){throw`Clone: Not implemented for ${this.constructor.name}`}setDataValue(e,t,n,r){console.error(`SetDataValue: Not implemented for ${this.constructor.name}`)}getSubData(e,t,n){return console.error(`GetDataValue: Not implemented for ${this.constructor.name}`),null}toString(){return`<${this.typeInfo.getTypeName()}>`}}Qe._id=0;class Ke extends Qe{constructor(){super(new v("void",null),null)}toString(){return"void"}}Ke.void=new Ke;class Je extends Qe{constructor(e){super(new T("pointer",e.typeInfo,null),null),this.reference=e}clone(){return this}setDataValue(e,t,n,r){this.reference.setDataValue(e,t,n,r)}getSubData(e,t,n){return t?this.reference.getSubData(e,t,n):this}toString(){return`&${this.reference.toString()}`}}class et extends Qe{constructor(e,t,n=null){super(t,n),e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array?this.data=e:"x32"===this.typeInfo.name?e-Math.floor(e)!=0?this.data=new Float32Array([e]):this.data=e>=0?new Uint32Array([e]):new Int32Array([e]):"i32"===this.typeInfo.name||"bool"===this.typeInfo.name?this.data=new Int32Array([e]):"u32"===this.typeInfo.name?this.data=new Uint32Array([e]):"f32"===this.typeInfo.name||"f16"===this.typeInfo.name?this.data=new Float32Array([e]):console.error("ScalarData2: Invalid type",t)}clone(){if(this.data instanceof Float32Array)return new et(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new et(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new et(new Uint32Array(this.data),this.typeInfo,null);throw"ScalarData: Invalid data type"}get value(){return this.data[0]}set value(e){this.data[0]=e}setDataValue(e,t,n,r){if(n)return void console.error("SetDataValue: Scalar data does not support postfix",n);if(!(t instanceof et))return void console.error("SetDataValue: Invalid value",t);let s=t.data[0];"i32"===this.typeInfo.name||"u32"===this.typeInfo.name?s=Math.floor(s):"bool"===this.typeInfo.name&&(s=s?1:0),this.data[0]=s}getSubData(e,t,n){return t?(console.error("getSubData: Scalar data does not support postfix",t),null):this}toString(){return`${this.value}`}}function tt(e,t,n){const r=t.length;return 2===r?"f32"===n?new nt(new Float32Array(t),e.getTypeInfo("vec2f")):"i32"===n||"bool"===n?new nt(new Int32Array(t),e.getTypeInfo("vec2i")):"u32"===n?new nt(new Uint32Array(t),e.getTypeInfo("vec2u")):"f16"===n?new nt(new Float32Array(t),e.getTypeInfo("vec2h")):(console.error(`getSubData: Unknown format ${n}`),null):3===r?"f32"===n?new nt(new Float32Array(t),e.getTypeInfo("vec3f")):"i32"===n||"bool"===n?new nt(new Int32Array(t),e.getTypeInfo("vec3i")):"u32"===n?new nt(new Uint32Array(t),e.getTypeInfo("vec3u")):"f16"===n?new nt(new Float32Array(t),e.getTypeInfo("vec3h")):(console.error(`getSubData: Unknown format ${n}`),null):4===r?"f32"===n?new nt(new Float32Array(t),e.getTypeInfo("vec4f")):"i32"===n||"bool"===n?new nt(new Int32Array(t),e.getTypeInfo("vec4i")):"u32"===n?new nt(new Uint32Array(t),e.getTypeInfo("vec4u")):"f16"===n?new nt(new Float32Array(t),e.getTypeInfo("vec4h")):(console.error(`getSubData: Unknown format ${n}`),null):(console.error(`getSubData: Invalid vector size ${t.length}`),null)}class nt extends Qe{constructor(e,t,n=null){if(super(t,n),e instanceof Float32Array||e instanceof Uint32Array||e instanceof Int32Array)this.data=e;else{const t=this.typeInfo.name;"vec2f"===t||"vec3f"===t||"vec4f"===t?this.data=new Float32Array(e):"vec2i"===t||"vec3i"===t||"vec4i"===t?this.data=new Int32Array(e):"vec2u"===t||"vec3u"===t||"vec4u"===t?this.data=new Uint32Array(e):"vec2h"===t||"vec3h"===t||"vec4h"===t?this.data=new Float32Array(e):"vec2b"===t||"vec3b"===t||"vec4b"===t?this.data=new Int32Array(e):"vec2"===t||"vec3"===t||"vec4"===t?this.data=new Float32Array(e):console.error(`VectorData: Invalid type ${t}`)}}clone(){if(this.data instanceof Float32Array)return new nt(new Float32Array(this.data),this.typeInfo,null);if(this.data instanceof Int32Array)return new nt(new Int32Array(this.data),this.typeInfo,null);if(this.data instanceof Uint32Array)return new nt(new Uint32Array(this.data),this.typeInfo,null);throw"VectorData: Invalid data type"}setDataValue(e,t,n,r){n instanceof Oe?console.error("TODO: Set vector postfix"):t instanceof nt?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(null===t)return this;let r=e.getTypeInfo("f32");if(this.typeInfo instanceof A)r=this.typeInfo.format||r;else{const t=this.typeInfo.name;"vec2f"===t||"vec3f"===t||"vec4f"===t?r=e.getTypeInfo("f32"):"vec2i"===t||"vec3i"===t||"vec4i"===t?r=e.getTypeInfo("i32"):"vec2b"===t||"vec3b"===t||"vec4b"===t?r=e.getTypeInfo("bool"):"vec2u"===t||"vec3u"===t||"vec4u"===t?r=e.getTypeInfo("u32"):"vec2h"===t||"vec3h"===t||"vec4h"===t?r=e.getTypeInfo("f16"):console.error(`GetSubData: Unknown type ${t}`)}let s=this;for(;null!==t&&null!==s;){if(t instanceof Me){const a=t.index;let i=-1;if(a instanceof Ue){if(!(a.value instanceof et))return console.error(`GetSubData: Invalid array index ${a.value}`),null;i=a.value.value}else{const t=e.evalExpression(a,n);if(!(t instanceof et))return console.error("GetSubData: Unknown index type",a),null;i=t.value}if(i<0||i>=s.data.length)return console.error("GetSubData: Index out of range",i),null;if(s.data instanceof Float32Array){const e=new Float32Array(s.data.buffer,s.data.byteOffset+4*i,1);return new et(e,r)}if(s.data instanceof Int32Array){const e=new Int32Array(s.data.buffer,s.data.byteOffset+4*i,1);return new et(e,r)}if(s.data instanceof Uint32Array){const e=new Uint32Array(s.data.buffer,s.data.byteOffset+4*i,1);return new et(e,r)}throw"GetSubData: Invalid data type"}if(!(t instanceof Oe))return console.error("GetSubData: Unknown postfix",t),null;{const n=t.value.toLowerCase();if(1===n.length){let e=0;if("x"===n||"r"===n)e=0;else if("y"===n||"g"===n)e=1;else if("z"===n||"b"===n)e=2;else{if("w"!==n&&"a"!==n)return console.error(`GetSubData: Unknown member ${n}`),null;e=3}if(this.data instanceof Float32Array){let t=new Float32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new et(t,r,this)}if(this.data instanceof Int32Array){let t=new Int32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new et(t,r,this)}if(this.data instanceof Uint32Array){let t=new Uint32Array(this.data.buffer,this.data.byteOffset+4*e,1);return new et(t,r,this)}}const a=[];for(const e of n)"x"===e||"r"===e?a.push(this.data[0]):"y"===e||"g"===e?a.push(this.data[1]):"z"===e||"b"===e?a.push(this.data[2]):"w"===e||"a"===e?a.push(this.data[3]):console.error(`GetDataValue: Unknown member ${e}`);s=tt(e,a,r.name)}t=t.postfix}return s}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class rt extends Qe{constructor(e,t,n=null){super(t,n),e instanceof Float32Array?this.data=e:this.data=new Float32Array(e)}clone(){return new rt(new Float32Array(this.data),this.typeInfo,null)}setDataValue(e,t,n,r){n instanceof Oe?console.error("TODO: Set matrix postfix"):t instanceof rt?this.data=t.data:console.error("SetDataValue: Invalid value",t)}getSubData(e,t,n){if(null===t)return this;const r=this.typeInfo.name;if(e.getTypeInfo("f32"),this.typeInfo instanceof A)this.typeInfo.format;else if(r.endsWith("f"))e.getTypeInfo("f32");else if(r.endsWith("i"))e.getTypeInfo("i32");else if(r.endsWith("u"))e.getTypeInfo("u32");else{if(!r.endsWith("h"))return console.error(`GetDataValue: Unknown type ${r}`),null;e.getTypeInfo("f16")}if(t instanceof Me){const s=t.index;let a=-1;if(s instanceof Ue){if(!(s.value instanceof et))return console.error(`GetDataValue: Invalid array index ${s.value}`),null;a=s.value.value}else{const t=e.evalExpression(s,n);if(!(t instanceof et))return console.error("GetDataValue: Unknown index type",s),null;a=t.value}if(a<0||a>=this.data.length)return console.error("GetDataValue: Index out of range",a),null;const i=r.endsWith("h")?"h":"f";let o;if("mat2x2"===r||"mat2x2f"===r||"mat2x2h"===r||"mat3x2"===r||"mat3x2f"===r||"mat3x2h"===r||"mat4x2"===r||"mat4x2f"===r||"mat4x2h"===r)o=new nt(new Float32Array(this.data.buffer,this.data.byteOffset+2*a*4,2),e.getTypeInfo(`vec2${i}`));else if("mat2x3"===r||"mat2x3f"===r||"mat2x3h"===r||"mat3x3"===r||"mat3x3f"===r||"mat3x3h"===r||"mat4x3"===r||"mat4x3f"===r||"mat4x3h"===r)o=new nt(new Float32Array(this.data.buffer,this.data.byteOffset+3*a*4,3),e.getTypeInfo(`vec3${i}`));else{if("mat2x4"!==r&&"mat2x4f"!==r&&"mat2x4h"!==r&&"mat3x4"!==r&&"mat3x4f"!==r&&"mat3x4h"!==r&&"mat4x4"!==r&&"mat4x4f"!==r&&"mat4x4h"!==r)return console.error(`GetDataValue: Unknown type ${r}`),null;o=new nt(new Float32Array(this.data.buffer,this.data.byteOffset+4*a*4,4),e.getTypeInfo(`vec4${i}`))}return t.postfix?o.getSubData(e,t.postfix,n):o}return console.error("GetDataValue: Invalid postfix",t),null}toString(){let e=`${this.data[0]}`;for(let t=1;t<this.data.length;++t)e+=`, ${this.data[t]}`;return e}}class st extends Qe{constructor(e,t,n=0,r=null){super(t,r),this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n}clone(){const e=new Uint8Array(new Uint8Array(this.buffer,this.offset,this.typeInfo.size));return new st(e.buffer,this.typeInfo,0,null)}setDataValue(e,t,n,r){if(null===t)return void console.log("setDataValue: NULL data.");let s=this.offset,a=this.typeInfo;for(;n;){if(n instanceof Me)if(a instanceof I){const t=n.index;if(t instanceof Ue){if(!(t.value instanceof et))return void console.error(`SetDataValue: Invalid index type ${t.value}`);s+=t.value.value*a.stride}else{const n=e.evalExpression(t,r);if(!(n instanceof et))return void console.error("SetDataValue: Unknown index type",t);s+=n.value*a.stride}a=a.format}else console.error(`SetDataValue: Type ${a.getTypeName()} is not an array`);else{if(!(n instanceof Oe))return void console.error("SetDataValue: Unknown postfix type",n);{const e=n.value;if(a instanceof k){let t=!1;for(const n of a.members)if(n.name===e){s+=n.offset,a=n.type,t=!0;break}if(!t)return void console.error(`SetDataValue: Member ${e} not found`)}else if(a instanceof v){const n=a.getTypeName();let r=0;if("x"===e||"r"===e)r=0;else if("y"===e||"g"===e)r=1;else if("z"===e||"b"===e)r=2;else{if("w"!==e&&"a"!==e)return void console.error(`SetDataValue: Unknown member ${e}`);r=3}if(!(t instanceof et))return void console.error("SetDataValue: Invalid value",t);const i=t.value;return"vec2f"===n?void(new Float32Array(this.buffer,s,2)[r]=i):"vec3f"===n?void(new Float32Array(this.buffer,s,3)[r]=i):"vec4f"===n?void(new Float32Array(this.buffer,s,4)[r]=i):"vec2i"===n?void(new Int32Array(this.buffer,s,2)[r]=i):"vec3i"===n?void(new Int32Array(this.buffer,s,3)[r]=i):"vec4i"===n?void(new Int32Array(this.buffer,s,4)[r]=i):"vec2u"===n?void(new Uint32Array(this.buffer,s,2)[r]=i):"vec3u"===n?void(new Uint32Array(this.buffer,s,3)[r]=i):"vec4u"===n?void(new Uint32Array(this.buffer,s,4)[r]=i):void console.error(`SetDataValue: Type ${n} is not a struct`)}}}n=n.postfix}this.setData(e,t,a,s,r)}setData(e,t,n,r,s){const a=n.getTypeName();if("f32"!==a&&"f16"!==a)if("i32"!==a&&"atomic<i32>"!==a&&"x32"!==a)if("u32"!==a&&"atomic<u32>"!==a)if("bool"!==a)if("vec2f"!==a&&"vec2h"!==a)if("vec3f"!==a&&"vec3h"!==a)if("vec4f"!==a&&"vec4h"!==a)if("vec2i"!==a)if("vec3i"!==a)if("vec4i"!==a)if("vec2u"!==a)if("vec3u"!==a)if("vec4u"!==a)if("vec2b"!==a)if("vec3b"!==a)if("vec4b"!==a)if("mat2x2f"!==a&&"mat2x2h"!==a)if("mat2x3f"!==a&&"mat2x3h"!==a)if("mat2x4f"!==a&&"mat2x4h"!==a)if("mat3x2f"!==a&&"mat3x2h"!==a)if("mat3x3f"!==a&&"mat3x3h"!==a)if("mat3x4f"!==a&&"mat3x4h"!==a)if("mat4x2f"!==a&&"mat4x2h"!==a)if("mat4x3f"!==a&&"mat4x3h"!==a)if("mat4x4f"!==a&&"mat4x4h"!==a)if(t instanceof st){if(n===t.typeInfo)return void new Uint8Array(this.buffer,r,t.buffer.byteLength).set(new Uint8Array(t.buffer));console.error("SetDataValue: Type mismatch",a,t.typeInfo.getTypeName())}else console.error(`SetData: Unknown type ${a}`);else{const e=new Float32Array(this.buffer,r,16);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11],e[12]=t.data[12],e[13]=t.data[13],e[14]=t.data[14],e[15]=t.data[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15])}else{const e=new Float32Array(this.buffer,r,12);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,r,8);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,r,12);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8],e[9]=t.data[9],e[10]=t.data[10],e[11]=t.data[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,r,9);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7],e[8]=t.data[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8])}else{const e=new Float32Array(this.buffer,r,6);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,r,8);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5],e[6]=t.data[6],e[7]=t.data[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,r,6);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3],e[4]=t.data[4],e[5]=t.data[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,r,4);t instanceof rt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,r,4);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,r,3);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,r,2);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Uint32Array(this.buffer,r,4);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,r,3);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,r,2);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Int32Array(this.buffer,r,4);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Int32Array(this.buffer,r,3);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Int32Array(this.buffer,r,2);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Float32Array(this.buffer,r,4);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2],e[3]=t.data[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Float32Array(this.buffer,r,3);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1],e[2]=t.data[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Float32Array(this.buffer,r,2);t instanceof nt?(e[0]=t.data[0],e[1]=t.data[1]):(e[0]=t[0],e[1]=t[1])}else t instanceof et&&(new Int32Array(this.buffer,r,1)[0]=t.value);else t instanceof et&&(new Uint32Array(this.buffer,r,1)[0]=t.value);else t instanceof et&&(new Int32Array(this.buffer,r,1)[0]=t.value);else t instanceof et&&(new Float32Array(this.buffer,r,1)[0]=t.value)}getSubData(e,t,n){var r,s,a;if(null===t)return this;let i=this.offset,o=this.typeInfo;for(;t;){if(t instanceof Me){const r=t.index,s=r instanceof Ve?e.evalExpression(r,n):r;let a=0;if(s instanceof et?a=s.value:"number"==typeof s?a=s:console.error("GetDataValue: Invalid index type",r),o instanceof I)i+=a*o.stride,o=o.format;else{const t=o.getTypeName();"mat4x4"===t||"mat4x4f"===t||"mat4x4h"===t?(i+=16*a,o=e.getTypeInfo("vec4f")):console.error(`getDataValue: Type ${o.getTypeName()} is not an array`)}}else{if(!(t instanceof Oe))return console.error("GetDataValue: Unknown postfix type",t),null;{const n=t.value;if(o instanceof k){let e=!1;for(const t of o.members)if(t.name===n){i+=t.offset,o=t.type,e=!0;break}if(!e)return console.error(`GetDataValue: Member ${n} not found`),null}else if(o instanceof v){const t=o.getTypeName();if("vec2f"===t||"vec3f"===t||"vec4f"===t||"vec2i"===t||"vec3i"===t||"vec4i"===t||"vec2u"===t||"vec3u"===t||"vec4u"===t||"vec2b"===t||"vec3b"===t||"vec4b"===t||"vec2h"===t||"vec3h"===t||"vec4h"===t||"vec2"===t||"vec3"===t||"vec4"===t){if(n.length>0&&n.length<5){let r="f";const s=[];for(let a=0;a<n.length;++a){const o=n[a].toLowerCase();let u=0;if("x"===o||"r"===o)u=0;else if("y"===o||"g"===o)u=1;else if("z"===o||"b"===o)u=2;else{if("w"!==o&&"a"!==o)return console.error(`Unknown member ${n}`),null;u=3}if(1===n.length){if(t.endsWith("f"))return this.buffer.byteLength<i+4*u+4?(console.log("Insufficient buffer data"),null):new et(new Float32Array(this.buffer,i+4*u,1),e.getTypeInfo("f32"),this);if(t.endsWith("h"))return new et(new Float32Array(this.buffer,i+4*u,1),e.getTypeInfo("f16"),this);if(t.endsWith("i"))return new et(new Int32Array(this.buffer,i+4*u,1),e.getTypeInfo("i32"),this);if(t.endsWith("b"))return new et(new Int32Array(this.buffer,i+4*u,1),e.getTypeInfo("bool"),this);if(t.endsWith("u"))return new et(new Uint32Array(this.buffer,i+4*u,1),e.getTypeInfo("i32"),this)}if("vec2f"===t)s.push(new Float32Array(this.buffer,i,2)[u]);else if("vec3f"===t){if(i+12>=this.buffer.byteLength)return console.log("Insufficient buffer data"),null;const e=new Float32Array(this.buffer,i,3);s.push(e[u])}else if("vec4f"===t)s.push(new Float32Array(this.buffer,i,4)[u]);else if("vec2i"===t)r="i",s.push(new Int32Array(this.buffer,i,2)[u]);else if("vec3i"===t)r="i",s.push(new Int32Array(this.buffer,i,3)[u]);else if("vec4i"===t)r="i",s.push(new Int32Array(this.buffer,i,4)[u]);else if("vec2u"===t){r="u";const e=new Uint32Array(this.buffer,i,2);s.push(e[u])}else"vec3u"===t?(r="u",s.push(new Uint32Array(this.buffer,i,3)[u])):"vec4u"===t&&(r="u",s.push(new Uint32Array(this.buffer,i,4)[u]))}return 2===s.length?o=e.getTypeInfo(`vec2${r}`):3===s.length?o=e.getTypeInfo(`vec3${r}`):4===s.length?o=e.getTypeInfo(`vec4${r}`):console.error(`GetDataValue: Invalid vector length ${s.length}`),new nt(s,o,null)}return console.error(`GetDataValue: Unknown member ${n}`),null}return console.error(`GetDataValue: Type ${t} is not a struct`),null}}}t=t.postfix}const u=o.getTypeName();return"f32"===u?new et(new Float32Array(this.buffer,i,1),o,this):"i32"===u?new et(new Int32Array(this.buffer,i,1),o,this):"u32"===u?new et(new Uint32Array(this.buffer,i,1),o,this):"vec2f"===u?new nt(new Float32Array(this.buffer,i,2),o,this):"vec3f"===u?new nt(new Float32Array(this.buffer,i,3),o,this):"vec4f"===u?new nt(new Float32Array(this.buffer,i,4),o,this):"vec2i"===u?new nt(new Int32Array(this.buffer,i,2),o,this):"vec3i"===u?new nt(new Int32Array(this.buffer,i,3),o,this):"vec4i"===u?new nt(new Int32Array(this.buffer,i,4),o,this):"vec2u"===u?new nt(new Uint32Array(this.buffer,i,2),o,this):"vec3u"===u?new nt(new Uint32Array(this.buffer,i,3),o,this):"vec4u"===u?new nt(new Uint32Array(this.buffer,i,4),o,this):o instanceof A&&"atomic"===o.name?"u32"===(null===(r=o.format)||void 0===r?void 0:r.name)?new et(new Uint32Array(this.buffer,i,1)[0],o.format,this):"i32"===(null===(s=o.format)||void 0===s?void 0:s.name)?new et(new Int32Array(this.buffer,i,1)[0],o.format,this):(console.error(`GetDataValue: Invalid atomic format ${null===(a=o.format)||void 0===a?void 0:a.name}`),null):new st(this.buffer,o,i,this)}toString(){let e="";if(this.typeInfo instanceof I)if("f32"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("i32"===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("u32"===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if("vec2f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if("vec3f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if("vec4f"===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e="[...]";else this.typeInfo instanceof k?e+="{...}":e="[...]";return e}}class at extends Qe{constructor(e,t,n,r){super(t,null),this.data=e,this.descriptor=n,this.view=r}clone(){return new at(this.data,this.typeInfo,this.descriptor,this.view)}get width(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>0?null!==(e=n[0])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.width)&&void 0!==t?t:0}get height(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>1?null!==(e=n[1])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.height)&&void 0!==t?t:0}get depthOrArrayLayers(){var e,t;const n=this.descriptor.size;return n instanceof Array&&n.length>2?null!==(e=n[2])&&void 0!==e?e:0:n instanceof Object&&null!==(t=n.depthOrArrayLayers)&&void 0!==t?t:0}get format(){var e;return this.descriptor&&null!==(e=this.descriptor.format)&&void 0!==e?e:"rgba8unorm"}get sampleCount(){var e;return this.descriptor&&null!==(e=this.descriptor.sampleCount)&&void 0!==e?e:1}get mipLevelCount(){var e;return this.descriptor&&null!==(e=this.descriptor.mipLevelCount)&&void 0!==e?e:1}get dimension(){var e;return this.descriptor&&null!==(e=this.descriptor.dimension)&&void 0!==e?e:"2d"}getMipLevelSize(e){if(e>=this.mipLevelCount)return[0,0,0];const t=[this.width,this.height,this.depthOrArrayLayers];for(let n=0;n<t.length;++n)t[n]=Math.max(1,t[n]>>e);return t}get texelByteSize(){const e=this.format,t=R[e];return t?t.isDepthStencil?4:t.bytesPerBlock:0}get bytesPerRow(){return this.width*this.texelByteSize}get isDepthStencil(){const e=this.format,t=R[e];return!!t&&t.isDepthStencil}getGpuSize(){const e=this.format,t=R[e],n=this.width;if(!e||n<=0||!t)return-1;const r=this.height,s=this.depthOrArrayLayers,a=this.dimension;return n/t.blockWidth*("1d"===a?1:r/t.blockHeight)*t.bytesPerBlock*s}getPixel(e,t,n=0,r=0){const s=this.texelByteSize,a=this.bytesPerRow,i=this.height,o=this.data[r];return function(e,t,n,r,s,a,i,o,u){const c=r*(i>>=s)*(a>>=s)+n*i+t*o;switch(u){case"r8unorm":return[q(e,c,"8unorm",1)[0]];case"r8snorm":return[q(e,c,"8snorm",1)[0]];case"r8uint":return[q(e,c,"8uint",1)[0]];case"r8sint":return[q(e,c,"8sint",1)[0]];case"rg8unorm":{const t=q(e,c,"8unorm",2);return[t[0],t[1]]}case"rg8snorm":{const t=q(e,c,"8snorm",2);return[t[0],t[1]]}case"rg8uint":{const t=q(e,c,"8uint",2);return[t[0],t[1]]}case"rg8sint":{const t=q(e,c,"8sint",2);return[t[0],t[1]]}case"rgba8unorm-srgb":case"rgba8unorm":{const t=q(e,c,"8unorm",4);return[t[0],t[1],t[2],t[3]]}case"rgba8snorm":{const t=q(e,c,"8snorm",4);return[t[0],t[1],t[2],t[3]]}case"rgba8uint":{const t=q(e,c,"8uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba8sint":{const t=q(e,c,"8sint",4);return[t[0],t[1],t[2],t[3]]}case"bgra8unorm-srgb":case"bgra8unorm":{const t=q(e,c,"8unorm",4);return[t[2],t[1],t[0],t[3]]}case"r16uint":return[q(e,c,"16uint",1)[0]];case"r16sint":return[q(e,c,"16sint",1)[0]];case"r16float":return[q(e,c,"16float",1)[0]];case"rg16uint":{const t=q(e,c,"16uint",2);return[t[0],t[1]]}case"rg16sint":{const t=q(e,c,"16sint",2);return[t[0],t[1]]}case"rg16float":{const t=q(e,c,"16float",2);return[t[0],t[1]]}case"rgba16uint":{const t=q(e,c,"16uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba16sint":{const t=q(e,c,"16sint",4);return[t[0],t[1],t[2],t[3]]}case"rgba16float":{const t=q(e,c,"16float",4);return[t[0],t[1],t[2],t[3]]}case"r32uint":return[q(e,c,"32uint",1)[0]];case"r32sint":return[q(e,c,"32sint",1)[0]];case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return[q(e,c,"32float",1)[0]];case"rg32uint":{const t=q(e,c,"32uint",2);return[t[0],t[1]]}case"rg32sint":{const t=q(e,c,"32sint",2);return[t[0],t[1]]}case"rg32float":{const t=q(e,c,"32float",2);return[t[0],t[1]]}case"rgba32uint":{const t=q(e,c,"32uint",4);return[t[0],t[1],t[2],t[3]]}case"rgba32sint":{const t=q(e,c,"32sint",4);return[t[0],t[1],t[2],t[3]]}case"rgba32float":{const t=q(e,c,"32float",4);return[t[0],t[1],t[2],t[3]]}case"rg11b10ufloat":{const t=new Uint32Array(e.buffer,c,1)[0],n=(4192256&t)>>11,r=(4290772992&t)>>22;return[W(2047&t),W(n),function(e){const t=112+(e>>5&31)<<23|(31&e)<<18;return P[0]=t,z[0]}(r),1]}}return null}(new Uint8Array(o),e,t,n,r,i,a,s,this.format)}setPixel(e,t,n,r,s){const a=this.texelByteSize,i=this.bytesPerRow,o=this.height,u=this.data[r];!function(e,t,n,r,s,a,i,o,u,c){const l=r*(i>>=s)*(a>>=s)+n*i+t*o;switch(u){case"r8unorm":return void H(e,l,"8unorm",1,c);case"r8snorm":return void H(e,l,"8snorm",1,c);case"r8uint":return void H(e,l,"8uint",1,c);case"r8sint":return void H(e,l,"8sint",1,c);case"rg8unorm":return void H(e,l,"8unorm",2,c);case"rg8snorm":return void H(e,l,"8snorm",2,c);case"rg8uint":return void H(e,l,"8uint",2,c);case"rg8sint":return void H(e,l,"8sint",2,c);case"rgba8unorm-srgb":case"rgba8unorm":case"bgra8unorm-srgb":case"bgra8unorm":return void H(e,l,"8unorm",4,c);case"rgba8snorm":return void H(e,l,"8snorm",4,c);case"rgba8uint":return void H(e,l,"8uint",4,c);case"rgba8sint":return void H(e,l,"8sint",4,c);case"r16uint":return void H(e,l,"16uint",1,c);case"r16sint":return void H(e,l,"16sint",1,c);case"r16float":return void H(e,l,"16float",1,c);case"rg16uint":return void H(e,l,"16uint",2,c);case"rg16sint":return void H(e,l,"16sint",2,c);case"rg16float":return void H(e,l,"16float",2,c);case"rgba16uint":return void H(e,l,"16uint",4,c);case"rgba16sint":return void H(e,l,"16sint",4,c);case"rgba16float":return void H(e,l,"16float",4,c);case"r32uint":return void H(e,l,"32uint",1,c);case"r32sint":return void H(e,l,"32sint",1,c);case"depth16unorm":case"depth24plus":case"depth24plus-stencil8":case"depth32float":case"depth32float-stencil8":case"r32float":return void H(e,l,"32float",1,c);case"rg32uint":return void H(e,l,"32uint",2,c);case"rg32sint":return void H(e,l,"32sint",2,c);case"rg32float":return void H(e,l,"32float",2,c);case"rgba32uint":return void H(e,l,"32uint",4,c);case"rgba32sint":return void H(e,l,"32sint",4,c);case"rgba32float":return void H(e,l,"32float",4,c);case"rg11b10ufloat":console.error("TODO: rg11b10ufloat not supported for writing")}}(new Uint8Array(u),e,t,n,r,o,i,a,this.format,s)}}(e=>{e[e.token=0]="token",e[e.keyword=1]="keyword",e[e.reserved=2]="reserved"})(ce||(ce={}));class it{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class ot{}ue=ot,ot.none=new it("",ce.reserved,""),ot.eof=new it("EOF",ce.token,""),ot.reserved={asm:new it("asm",ce.reserved,"asm"),bf16:new it("bf16",ce.reserved,"bf16"),do:new it("do",ce.reserved,"do"),enum:new it("enum",ce.reserved,"enum"),f16:new it("f16",ce.reserved,"f16"),f64:new it("f64",ce.reserved,"f64"),handle:new it("handle",ce.reserved,"handle"),i8:new it("i8",ce.reserved,"i8"),i16:new it("i16",ce.reserved,"i16"),i64:new it("i64",ce.reserved,"i64"),mat:new it("mat",ce.reserved,"mat"),premerge:new it("premerge",ce.reserved,"premerge"),regardless:new it("regardless",ce.reserved,"regardless"),typedef:new it("typedef",ce.reserved,"typedef"),u8:new it("u8",ce.reserved,"u8"),u16:new it("u16",ce.reserved,"u16"),u64:new it("u64",ce.reserved,"u64"),unless:new it("unless",ce.reserved,"unless"),using:new it("using",ce.reserved,"using"),vec:new it("vec",ce.reserved,"vec"),void:new it("void",ce.reserved,"void")},ot.keywords={array:new it("array",ce.keyword,"array"),atomic:new it("atomic",ce.keyword,"atomic"),bool:new it("bool",ce.keyword,"bool"),f32:new it("f32",ce.keyword,"f32"),i32:new it("i32",ce.keyword,"i32"),mat2x2:new it("mat2x2",ce.keyword,"mat2x2"),mat2x3:new it("mat2x3",ce.keyword,"mat2x3"),mat2x4:new it("mat2x4",ce.keyword,"mat2x4"),mat3x2:new it("mat3x2",ce.keyword,"mat3x2"),mat3x3:new it("mat3x3",ce.keyword,"mat3x3"),mat3x4:new it("mat3x4",ce.keyword,"mat3x4"),mat4x2:new it("mat4x2",ce.keyword,"mat4x2"),mat4x3:new it("mat4x3",ce.keyword,"mat4x3"),mat4x4:new it("mat4x4",ce.keyword,"mat4x4"),ptr:new it("ptr",ce.keyword,"ptr"),sampler:new it("sampler",ce.keyword,"sampler"),sampler_comparison:new it("sampler_comparison",ce.keyword,"sampler_comparison"),struct:new it("struct",ce.keyword,"struct"),texture_1d:new it("texture_1d",ce.keyword,"texture_1d"),texture_2d:new it("texture_2d",ce.keyword,"texture_2d"),texture_2d_array:new it("texture_2d_array",ce.keyword,"texture_2d_array"),texture_3d:new it("texture_3d",ce.keyword,"texture_3d"),texture_cube:new it("texture_cube",ce.keyword,"texture_cube"),texture_cube_array:new it("texture_cube_array",ce.keyword,"texture_cube_array"),texture_multisampled_2d:new it("texture_multisampled_2d",ce.keyword,"texture_multisampled_2d"),texture_storage_1d:new it("texture_storage_1d",ce.keyword,"texture_storage_1d"),texture_storage_2d:new it("texture_storage_2d",ce.keyword,"texture_storage_2d"),texture_storage_2d_array:new it("texture_storage_2d_array",ce.keyword,"texture_storage_2d_array"),texture_storage_3d:new it("texture_storage_3d",ce.keyword,"texture_storage_3d"),texture_depth_2d:new it("texture_depth_2d",ce.keyword,"texture_depth_2d"),texture_depth_2d_array:new it("texture_depth_2d_array",ce.keyword,"texture_depth_2d_array"),texture_depth_cube:new it("texture_depth_cube",ce.keyword,"texture_depth_cube"),texture_depth_cube_array:new it("texture_depth_cube_array",ce.keyword,"texture_depth_cube_array"),texture_depth_multisampled_2d:new it("texture_depth_multisampled_2d",ce.keyword,"texture_depth_multisampled_2d"),texture_external:new it("texture_external",ce.keyword,"texture_external"),u32:new it("u32",ce.keyword,"u32"),vec2:new it("vec2",ce.keyword,"vec2"),vec3:new it("vec3",ce.keyword,"vec3"),vec4:new it("vec4",ce.keyword,"vec4"),bitcast:new it("bitcast",ce.keyword,"bitcast"),block:new it("block",ce.keyword,"block"),break:new it("break",ce.keyword,"break"),case:new it("case",ce.keyword,"case"),continue:new it("continue",ce.keyword,"continue"),continuing:new it("continuing",ce.keyword,"continuing"),default:new it("default",ce.keyword,"default"),diagnostic:new it("diagnostic",ce.keyword,"diagnostic"),discard:new it("discard",ce.keyword,"discard"),else:new it("else",ce.keyword,"else"),enable:new it("enable",ce.keyword,"enable"),fallthrough:new it("fallthrough",ce.keyword,"fallthrough"),false:new it("false",ce.keyword,"false"),fn:new it("fn",ce.keyword,"fn"),for:new it("for",ce.keyword,"for"),function:new it("function",ce.keyword,"function"),if:new it("if",ce.keyword,"if"),let:new it("let",ce.keyword,"let"),const:new it("const",ce.keyword,"const"),loop:new it("loop",ce.keyword,"loop"),while:new it("while",ce.keyword,"while"),private:new it("private",ce.keyword,"private"),read:new it("read",ce.keyword,"read"),read_write:new it("read_write",ce.keyword,"read_write"),return:new it("return",ce.keyword,"return"),requires:new it("requires",ce.keyword,"requires"),storage:new it("storage",ce.keyword,"storage"),switch:new it("switch",ce.keyword,"switch"),true:new it("true",ce.keyword,"true"),alias:new it("alias",ce.keyword,"alias"),type:new it("type",ce.keyword,"type"),uniform:new it("uniform",ce.keyword,"uniform"),var:new it("var",ce.keyword,"var"),override:new it("override",ce.keyword,"override"),workgroup:new it("workgroup",ce.keyword,"workgroup"),write:new it("write",ce.keyword,"write"),r8unorm:new it("r8unorm",ce.keyword,"r8unorm"),r8snorm:new it("r8snorm",ce.keyword,"r8snorm"),r8uint:new it("r8uint",ce.keyword,"r8uint"),r8sint:new it("r8sint",ce.keyword,"r8sint"),r16uint:new it("r16uint",ce.keyword,"r16uint"),r16sint:new it("r16sint",ce.keyword,"r16sint"),r16float:new it("r16float",ce.keyword,"r16float"),rg8unorm:new it("rg8unorm",ce.keyword,"rg8unorm"),rg8snorm:new it("rg8snorm",ce.keyword,"rg8snorm"),rg8uint:new it("rg8uint",ce.keyword,"rg8uint"),rg8sint:new it("rg8sint",ce.keyword,"rg8sint"),r32uint:new it("r32uint",ce.keyword,"r32uint"),r32sint:new it("r32sint",ce.keyword,"r32sint"),r32float:new it("r32float",ce.keyword,"r32float"),rg16uint:new it("rg16uint",ce.keyword,"rg16uint"),rg16sint:new it("rg16sint",ce.keyword,"rg16sint"),rg16float:new it("rg16float",ce.keyword,"rg16float"),rgba8unorm:new it("rgba8unorm",ce.keyword,"rgba8unorm"),rgba8unorm_srgb:new it("rgba8unorm_srgb",ce.keyword,"rgba8unorm_srgb"),rgba8snorm:new it("rgba8snorm",ce.keyword,"rgba8snorm"),rgba8uint:new it("rgba8uint",ce.keyword,"rgba8uint"),rgba8sint:new it("rgba8sint",ce.keyword,"rgba8sint"),bgra8unorm:new it("bgra8unorm",ce.keyword,"bgra8unorm"),bgra8unorm_srgb:new it("bgra8unorm_srgb",ce.keyword,"bgra8unorm_srgb"),rgb10a2unorm:new it("rgb10a2unorm",ce.keyword,"rgb10a2unorm"),rg11b10float:new it("rg11b10float",ce.keyword,"rg11b10float"),rg32uint:new it("rg32uint",ce.keyword,"rg32uint"),rg32sint:new it("rg32sint",ce.keyword,"rg32sint"),rg32float:new it("rg32float",ce.keyword,"rg32float"),rgba16uint:new it("rgba16uint",ce.keyword,"rgba16uint"),rgba16sint:new it("rgba16sint",ce.keyword,"rgba16sint"),rgba16float:new it("rgba16float",ce.keyword,"rgba16float"),rgba32uint:new it("rgba32uint",ce.keyword,"rgba32uint"),rgba32sint:new it("rgba32sint",ce.keyword,"rgba32sint"),rgba32float:new it("rgba32float",ce.keyword,"rgba32float"),static_assert:new it("static_assert",ce.keyword,"static_assert")},ot.tokens={decimal_float_literal:new it("decimal_float_literal",ce.token,/((-?[0-9]*\.[0-9]+|-?[0-9]+\.[0-9]*)((e|E)(\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new it("hex_float_literal",ce.token,/-?0x((([0-9a-fA-F]*\.[0-9a-fA-F]+|[0-9a-fA-F]+\.[0-9a-fA-F]*)((p|P)(\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\+|-)?[0-9]+[fh]?))/),int_literal:new it("int_literal",ce.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new it("uint_literal",ce.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new it("name",ce.token,/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/u),ident:new it("ident",ce.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new it("and",ce.token,"&"),and_and:new it("and_and",ce.token,"&&"),arrow:new it("arrow ",ce.token,"->"),attr:new it("attr",ce.token,"@"),forward_slash:new it("forward_slash",ce.token,"/"),bang:new it("bang",ce.token,"!"),bracket_left:new it("bracket_left",ce.token,"["),bracket_right:new it("bracket_right",ce.token,"]"),brace_left:new it("brace_left",ce.token,"{"),brace_right:new it("brace_right",ce.token,"}"),colon:new it("colon",ce.token,":"),comma:new it("comma",ce.token,","),equal:new it("equal",ce.token,"="),equal_equal:new it("equal_equal",ce.token,"=="),not_equal:new it("not_equal",ce.token,"!="),greater_than:new it("greater_than",ce.token,">"),greater_than_equal:new it("greater_than_equal",ce.token,">="),shift_right:new it("shift_right",ce.token,">>"),less_than:new it("less_than",ce.token,"<"),less_than_equal:new it("less_than_equal",ce.token,"<="),shift_left:new it("shift_left",ce.token,"<<"),modulo:new it("modulo",ce.token,"%"),minus:new it("minus",ce.token,"-"),minus_minus:new it("minus_minus",ce.token,"--"),period:new it("period",ce.token,"."),plus:new it("plus",ce.token,"+"),plus_plus:new it("plus_plus",ce.token,"++"),or:new it("or",ce.token,"|"),or_or:new it("or_or",ce.token,"||"),paren_left:new it("paren_left",ce.token,"("),paren_right:new it("paren_right",ce.token,")"),semicolon:new it("semicolon",ce.token,";"),star:new it("star",ce.token,"*"),tilde:new it("tilde",ce.token,"~"),underscore:new it("underscore",ce.token,"_"),xor:new it("xor",ce.token,"^"),plus_equal:new it("plus_equal",ce.token,"+="),minus_equal:new it("minus_equal",ce.token,"-="),times_equal:new it("times_equal",ce.token,"*="),division_equal:new it("division_equal",ce.token,"/="),modulo_equal:new it("modulo_equal",ce.token,"%="),and_equal:new it("and_equal",ce.token,"&="),or_equal:new it("or_equal",ce.token,"|="),xor_equal:new it("xor_equal",ce.token,"^="),shift_right_equal:new it("shift_right_equal",ce.token,">>="),shift_left_equal:new it("shift_left_equal",ce.token,"<<=")},ot.simpleTokens={"@":ue.tokens.attr,"{":ue.tokens.brace_left,"}":ue.tokens.brace_right,":":ue.tokens.colon,",":ue.tokens.comma,"(":ue.tokens.paren_left,")":ue.tokens.paren_right,";":ue.tokens.semicolon},ot.literalTokens={"&":ue.tokens.and,"&&":ue.tokens.and_and,"->":ue.tokens.arrow,"/":ue.tokens.forward_slash,"!":ue.tokens.bang,"[":ue.tokens.bracket_left,"]":ue.tokens.bracket_right,"=":ue.tokens.equal,"==":ue.tokens.equal_equal,"!=":ue.tokens.not_equal,">":ue.tokens.greater_than,">=":ue.tokens.greater_than_equal,">>":ue.tokens.shift_right,"<":ue.tokens.less_than,"<=":ue.tokens.less_than_equal,"<<":ue.tokens.shift_left,"%":ue.tokens.modulo,"-":ue.tokens.minus,"--":ue.tokens.minus_minus,".":ue.tokens.period,"+":ue.tokens.plus,"++":ue.tokens.plus_plus,"|":ue.tokens.or,"||":ue.tokens.or_or,"*":ue.tokens.star,"~":ue.tokens.tilde,_:ue.tokens.underscore,"^":ue.tokens.xor,"+=":ue.tokens.plus_equal,"-=":ue.tokens.minus_equal,"*=":ue.tokens.times_equal,"/=":ue.tokens.division_equal,"%=":ue.tokens.modulo_equal,"&=":ue.tokens.and_equal,"|=":ue.tokens.or_equal,"^=":ue.tokens.xor_equal,">>=":ue.tokens.shift_right_equal,"<<=":ue.tokens.shift_left_equal},ot.regexTokens={decimal_float_literal:ue.tokens.decimal_float_literal,hex_float_literal:ue.tokens.hex_float_literal,int_literal:ue.tokens.int_literal,uint_literal:ue.tokens.uint_literal,ident:ue.tokens.ident},ot.storage_class=[ue.keywords.function,ue.keywords.private,ue.keywords.workgroup,ue.keywords.uniform,ue.keywords.storage],ot.access_mode=[ue.keywords.read,ue.keywords.write,ue.keywords.read_write],ot.sampler_type=[ue.keywords.sampler,ue.keywords.sampler_comparison],ot.sampled_texture_type=[ue.keywords.texture_1d,ue.keywords.texture_2d,ue.keywords.texture_2d_array,ue.keywords.texture_3d,ue.keywords.texture_cube,ue.keywords.texture_cube_array],ot.multisampled_texture_type=[ue.keywords.texture_multisampled_2d],ot.storage_texture_type=[ue.keywords.texture_storage_1d,ue.keywords.texture_storage_2d,ue.keywords.texture_storage_2d_array,ue.keywords.texture_storage_3d],ot.depth_texture_type=[ue.keywords.texture_depth_2d,ue.keywords.texture_depth_2d_array,ue.keywords.texture_depth_cube,ue.keywords.texture_depth_cube_array,ue.keywords.texture_depth_multisampled_2d],ot.texture_external_type=[ue.keywords.texture_external],ot.any_texture_type=[...ue.sampled_texture_type,...ue.multisampled_texture_type,...ue.storage_texture_type,...ue.depth_texture_type,...ue.texture_external_type],ot.texel_format=[ue.keywords.r8unorm,ue.keywords.r8snorm,ue.keywords.r8uint,ue.keywords.r8sint,ue.keywords.r16uint,ue.keywords.r16sint,ue.keywords.r16float,ue.keywords.rg8unorm,ue.keywords.rg8snorm,ue.keywords.rg8uint,ue.keywords.rg8sint,ue.keywords.r32uint,ue.keywords.r32sint,ue.keywords.r32float,ue.keywords.rg16uint,ue.keywords.rg16sint,ue.keywords.rg16float,ue.keywords.rgba8unorm,ue.keywords.rgba8unorm_srgb,ue.keywords.rgba8snorm,ue.keywords.rgba8uint,ue.keywords.rgba8sint,ue.keywords.bgra8unorm,ue.keywords.bgra8unorm_srgb,ue.keywords.rgb10a2unorm,ue.keywords.rg11b10float,ue.keywords.rg32uint,ue.keywords.rg32sint,ue.keywords.rg32float,ue.keywords.rgba16uint,ue.keywords.rgba16sint,ue.keywords.rgba16float,ue.keywords.rgba32uint,ue.keywords.rgba32sint,ue.keywords.rgba32float],ot.const_literal=[ue.tokens.int_literal,ue.tokens.uint_literal,ue.tokens.decimal_float_literal,ue.tokens.hex_float_literal,ue.keywords.true,ue.keywords.false],ot.literal_or_ident=[ue.tokens.ident,ue.tokens.int_literal,ue.tokens.uint_literal,ue.tokens.decimal_float_literal,ue.tokens.hex_float_literal,ue.tokens.name],ot.element_count_expression=[ue.tokens.int_literal,ue.tokens.uint_literal,ue.tokens.ident],ot.template_types=[ue.keywords.vec2,ue.keywords.vec3,ue.keywords.vec4,ue.keywords.mat2x2,ue.keywords.mat2x3,ue.keywords.mat2x4,ue.keywords.mat3x2,ue.keywords.mat3x3,ue.keywords.mat3x4,ue.keywords.mat4x2,ue.keywords.mat4x3,ue.keywords.mat4x4,ue.keywords.atomic,ue.keywords.bitcast,...ue.any_texture_type],ot.attribute_name=[ue.tokens.ident,ue.keywords.block,ue.keywords.diagnostic],ot.assignment_operators=[ue.tokens.equal,ue.tokens.plus_equal,ue.tokens.minus_equal,ue.tokens.times_equal,ue.tokens.division_equal,ue.tokens.modulo_equal,ue.tokens.and_equal,ue.tokens.or_equal,ue.tokens.xor_equal,ue.tokens.shift_right_equal,ue.tokens.shift_left_equal],ot.increment_operators=[ue.tokens.plus_plus,ue.tokens.minus_minus];class ut{constructor(e,t,n,r,s){this.type=e,this.lexeme=t,this.line=n,this.start=r,this.end=s}toString(){return this.lexeme}isTemplateType(){return-1!=ot.template_types.indexOf(this.type)}isArrayType(){return this.type==ot.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class ct{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:""}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new ut(ot.eof,"",this._line,this._current,this._current)),this._tokens}scanToken(){let e=this._advance();if("\n"==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if("/"==e){if("/"==this._peekAhead()){for(;"\n"!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if("*"==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),"\n"==e)this._line++;else if("*"==e){if("/"==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else"/"==e&&"*"==this._peekAhead()&&(this._advance(),t++)}return!0}}const t=ot.simpleTokens[e];if(t)return this._addToken(t),!0;let n=ot.none;const r=this._isAlpha(e),s="_"===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead()}if(r){const t=ot.keywords[e];if(t)return this._addToken(t),!0}if(r||s)return this._addToken(ot.tokens.ident),!0;for(;;){let t=this._findType(e);const r=this._peekAhead();if("-"==e&&this._tokens.length>0){if("="==r)return this._current++,e+=r,this._addToken(ot.tokens.minus_equal),!0;if("-"==r)return this._current++,e+=r,this._addToken(ot.tokens.minus_minus),!0;const n=this._tokens.length-1;if((-1!=ot.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==ot.tokens.paren_right)&&">"!=r)return this._addToken(t),!0}if(">"==e&&(">"==r||"="==r)){let e=!1,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===ot.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===ot.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(t),!0}if(t===ot.none){let r=e,s=0;const a=2;for(let e=0;e<a;++e)if(r+=this._peekAhead(e),t=this._findType(r),t!==ot.none){s=e;break}if(t===ot.none)return n!==ot.none&&(this._current--,this._addToken(n),!0);e=r,this._current+=s+1}if(n=t,this._isAtEnd())break;e+=this._advance()}return n!==ot.none&&(this._addToken(n),!0)}_findType(e){for(const t in ot.regexTokens){const n=ot.regexTokens[t];if(this._match(e,n.rule))return n}return ot.literalTokens[e]||ot.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return!this._isNumeric(e)&&!this._isWhitespace(e)&&"_"!==e&&"."!==e&&"("!==e&&")"!==e&&"["!==e&&"]"!==e&&"{"!==e&&"}"!==e&&","!==e&&";"!==e&&":"!==e&&"="!==e&&"!"!==e&&"<"!==e&&">"!==e&&"+"!==e&&"-"!==e&&"*"!==e&&"/"!==e&&"%"!==e&&"&"!==e&&"|"!==e&&"^"!==e&&"~"!==e&&"@"!==e&&"#"!==e&&"?"!==e&&"'"!==e&&"`"!==e&&'"'!==e&&"\\"!==e&&"\n"!==e&&"\r"!==e&&"\t"!==e&&"\0"!==e}_isNumeric(e){return e>="0"&&e<="9"}_isAlphaNumeric(e){return this._isAlpha(e)||this._isNumeric(e)||"_"===e}_isWhitespace(e){return" "==e||"\t"==e||"\r"==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?"\0":this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new ut(e,t,this._line,this._start,this._current))}}function lt(e){return Array.isArray(e)||(null==e?void 0:e.buffer)instanceof ArrayBuffer}const ft=new Float32Array(1),ht=new Uint32Array(ft.buffer),pt=new Uint32Array(ft.buffer),mt=new Int32Array(1),dt=new Float32Array(mt.buffer),yt=new Uint32Array(mt.buffer),gt=new Uint32Array(1),xt=new Float32Array(gt.buffer),_t=new Int32Array(gt.buffer);function bt(e,t,n){if(t===n)return e;if("f32"===t){if("i32"===n||"x32"===n)return ft[0]=e,ht[0];if("u32"===n)return ft[0]=e,pt[0]}else if("i32"===t||"x32"===t){if("f32"===n)return mt[0]=e,dt[0];if("u32"===n)return mt[0]=e,yt[0]}else if("u32"===t){if("f32"===n)return gt[0]=e,xt[0];if("i32"===n||"x32"===n)return gt[0]=e,_t[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class vt{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class wt{constructor(e,t){this.align=e,this.size=t}}class kt{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new C,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return"texture_storage_1d"==e.name||"texture_storage_2d"==e.name||"texture_storage_2d_array"==e.name||"texture_storage_3d"==e.name}updateAST(e){for(const t of e)t instanceof Q&&this._functions.set(t.name,new vt(t));for(const t of e)if(t instanceof Ae){const e=this.getTypeInfo(t,null);e instanceof k&&this.structs.push(e)}for(const t of e)if(t instanceof be)this.aliases.push(this._getAliasInfo(t));else if(t instanceof re){const e=t,n=this._getAttributeNum(e.attributes,"id",0),r=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new O(e.name,r,e.attributes,n))}else if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),r=this._getAttributeNum(e.attributes,"binding",0),s=this.getTypeInfo(e.type,e.attributes),a=new E(e.name,s,n,r,e.attributes,S.Uniform,e.access);a.access||(a.access="read"),this.uniforms.push(a)}else if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),r=this._getAttributeNum(e.attributes,"binding",0),s=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(s),i=new E(e.name,s,n,r,e.attributes,a?S.StorageTexture:S.Storage,e.access);i.access||(i.access="read"),this.storage.push(i)}else if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),r=this._getAttributeNum(e.attributes,"binding",0),s=this.getTypeInfo(e.type,e.attributes),a=this._isStorageTexture(s),i=new E(e.name,s,n,r,e.attributes,a?S.StorageTexture:S.Texture,e.access);i.access||(i.access="read"),a?this.storage.push(i):this.textures.push(i)}else if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,"group",0),r=this._getAttributeNum(e.attributes,"binding",0),s=this.getTypeInfo(e.type,e.attributes),a=new E(e.name,s,n,r,e.attributes,S.Sampler,e.access);this.samplers.push(a)}for(const t of e)if(t instanceof Q){const e=this._getAttribute(t,"vertex"),n=this._getAttribute(t,"fragment"),r=this._getAttribute(t,"compute"),s=e||n||r,a=new B(t.name,null==s?void 0:s.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,s&&(this._functions.get(t.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(t,!!s),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[s.name].push(a)),a.arguments=t.args.map(e=>new D(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes)),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null}for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search(t=>{var n,r,s;if(t instanceof Ze){if(t.value)if(lt(t.value))for(const r of t.value)for(const t of this.overrides)r===t.name&&(null===(n=e.info)||void 0===n||n.overrides.push(t));else for(const n of this.overrides)t.value===n.name&&(null===(r=e.info)||void 0===r||r.overrides.push(n))}else if(t instanceof Ce)for(const n of this.overrides)t.name===n.name&&(null===(s=e.info)||void 0===s||s.overrides.push(n))});for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type)}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const r of e.calls){const e=null===(n=this._functions.get(r.name))||void 0===n?void 0:n.info;e&&t.add(e)}}findResource(e,t,n){if(n){for(const r of this.entry.compute)if(r.name===n)for(const n of r.resources)if(n.group==e&&n.binding==t)return n;for(const r of this.entry.vertex)if(r.name===n)for(const n of r.resources)if(n.group==e&&n.binding==t)return n;for(const r of this.entry.fragment)if(r.name===n)for(const n of r.resources)if(n.group==e&&n.binding==t)return n}for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],r=this,s=[];return e.search(a=>{if(a instanceof j)s.push({});else if(a instanceof X)s.pop();else if(a instanceof ne){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),s.length>0&&(s[s.length-1][e.name]=e)}else if(a instanceof De){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type)}else if(a instanceof se){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),s.length>0&&(s[s.length-1][e.name]=e)}else if(a instanceof Ce){const e=a;if(s.length>0&&s[s.length-1][e.name])return;const t=r._findResource(e.name);t&&n.push(t)}else if(a instanceof Be){const s=a,i=r._functions.get(s.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=r._findResources(i.node,t)),n.push(...i.resources))}else if(a instanceof he){const s=a,i=r._functions.get(s.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=r._findResources(i.node,t)),n.push(...i.resources))}}),[...new Map(n.map(e=>[e.name,e])).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.storage)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.textures)t(n.group,n.binding),e[n.group][n.binding]=n;for(const n of this.samplers)t(n.group,n.binding),e[n.group][n.binding]=n;return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof Ae)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Ae)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,"location")||this._getAttribute(n,"builtin");if(null!==e){const r=this.getTypeInfo(n.type,n.type.attributes),s=this._parseInt(e.value),a=new V(n.name,r,e.name,s);t.push(a)}}}_getOutputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this.getTypeInfo(e,e.attributes),r=this._parseInt(t.value);return new V("",n,t.name,r)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof Ae)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Ae)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,"location")||this._getAttribute(e,"builtin");if(null!==t){const n=this._getAttribute(e,"interpolation"),r=this.getTypeInfo(e.type,e.attributes),s=this._parseInt(t.value),a=new $(e.name,r,t.name,s);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new L(e.name,this.getTypeInfo(e.type,null))}getTypeInfoByName(e){for(const t of this.structs)if(t.name==e)return t;for(const t of this.aliases)if(t.name==e)return t.type;return null}getTypeInfo(e,t=null){if(this._types.has(e))return this._types.get(e);if(e instanceof Ee){const n=e.type?this.getTypeInfo(e.type,e.attributes):null,r=new T(e.name,n,t);return this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof Le){const n=e,r=n.format?this.getTypeInfo(n.format,n.attributes):null,s=new I(n.name,t);return s.format=r,s.count=n.count,this._types.set(e,s),this._updateTypeInfo(s),s}if(e instanceof Ae){const n=e,r=new k(n.name,t);r.startLine=n.startLine,r.endLine=n.endLine;for(const e of n.members){const t=this.getTypeInfo(e.type,e.attributes);r.members.push(new w(e.name,t,e.attributes))}return this._types.set(e,r),this._updateTypeInfo(r),r}if(e instanceof $e){const n=e,r=n.format instanceof Ie,s=n.format?r?this.getTypeInfo(n.format,null):new v(n.format,null):null,a=new A(n.name,s,t,n.access);return this._types.set(e,a),this._updateTypeInfo(a),a}if(e instanceof Se){const n=e,r=n.format?this.getTypeInfo(n.format,null):null,s=new A(n.name,r,t,n.access);return this._types.set(e,s),this._updateTypeInfo(s),s}const n=new v(e.name,t);return this._types.set(e,n),this._updateTypeInfo(n),n}_updateTypeInfo(e){var t,n,r;const s=this._getTypeSize(e);if(e.size=null!==(t=null==s?void 0:s.size)&&void 0!==t?t:0,e instanceof I&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(n=null==t?void 0:t.size)&&void 0!==n?n:0,null!==(r=null==t?void 0:t.align)&&void 0!==r?r:0),this._updateTypeInfo(e.format)}e instanceof T&&this._updateTypeInfo(e.format),e instanceof k&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,r=0,s=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],u=this._getTypeSize(o);if(!u)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const c=u.align,l=u.size;n=this._roundUp(c,n+r),r=l,s=n,a=Math.max(a,c),o.offset=n,o.size=l,this._updateTypeInfo(o.type)}e.size=this._roundUp(a,s+r),e.align=a}_getTypeSize(e){var t,n;if(null==e)return null;const r=this._getAttributeNum(e.attributes,"size",0),s=this._getAttributeNum(e.attributes,"align",0);if(e instanceof w&&(e=e.type),e instanceof v){const t=this._getAlias(e.name);null!==t&&(e=t)}{const n=kt._typeInfo[e.name];if(void 0!==n){const a="f16"===(null===(t=e.format)||void 0===t?void 0:t.name)?2:1;return new wt(Math.max(s,n.align/a),Math.max(r,n.size/a))}}{const t=kt._typeInfo[e.name.substring(0,e.name.length-1)];if(t){const n="h"===e.name[e.name.length-1]?2:1;return new wt(Math.max(s,t.align/n),Math.max(r,t.size/n))}}if(e instanceof I){let t=e,a=8,i=8;const o=this._getTypeSize(t.format);return null!==o&&(i=o.size,a=o.align),i=t.count*this._getAttributeNum(null!==(n=null==e?void 0:e.attributes)&&void 0!==n?n:null,"stride",this._roundUp(a,i)),r&&(i=r),new wt(Math.max(s,a),Math.max(r,i))}if(e instanceof k){let t=0,n=0,a=0,i=0,o=0;for(const n of e.members){const e=this._getTypeSize(n.type);null!==e&&(t=Math.max(e.align,t),a=this._roundUp(e.align,a+i),i=e.size,o=a)}return n=this._roundUp(t,o+i),new wt(Math.max(s,t),Math.max(r,n))}return null}_isUniformVar(e){return e instanceof ne&&"uniform"==e.storage}_isStorageVar(e){return e instanceof ne&&"storage"==e.storage}_isTextureVar(e){return e instanceof ne&&null!==e.type&&-1!=kt._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof ne&&null!==e.type&&-1!=kt._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const r=n.attributes;for(let e of r)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let r of e)if(r.name==t){let e=null!==r&&null!==r.value?r.value:n;return e instanceof Array&&(e=e[0]),"number"==typeof e?e:"string"==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}kt._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},kt._textureTypes=ot.any_texture_type.map(e=>e.name),kt._samplerTypes=ot.sampler_type.map(e=>e.name);let It=0;class Tt{constructor(e,t,n){this.id=It++,this.name=e,this.value=t,this.node=n}clone(){return new Tt(this.name,this.value,this.node)}}class At{constructor(e){this.id=It++,this.name=e.name,this.node=e}clone(){return new At(this.node)}}class St{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName="",this.id=It++,e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&void 0!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&void 0!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new Tt(e,t,null!=n?n:null))}setVariable(e,t,n){const r=this.getVariable(e);null!==r?r.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?void 0:n.value)&&void 0!==t?t:null}clone(){return new St(this)}}class Et{evalExpression(e,t){return null}getTypeInfo(e){return null}getVariableName(e,t){return""}}class Lt{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let r=!0;if(n instanceof nt)return n.data.forEach(e=>{e||(r=!1)}),new et(r?1:0,this.getTypeInfo("bool"));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt){const e=n.data.some(e=>e);return new et(e?1:0,this.getTypeInfo("bool"))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof et))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.evalExpression(n,t);if(r instanceof st&&0===r.typeInfo.size){const e=r.typeInfo,t=r.buffer.byteLength/e.stride;return new et(t,this.getTypeInfo("u32"))}return new et(r.typeInfo.size,this.getTypeInfo("u32"))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.abs(e)),n.typeInfo);const r=n;return new et(Math.abs(r.value),r.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.acos(e)),n.typeInfo);const r=n;return new et(Math.acos(r.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.acosh(e)),n.typeInfo);const r=n;return new et(Math.acosh(r.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.asin(e)),n.typeInfo);const r=n;return new et(Math.asin(r.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.asinh(e)),n.typeInfo);const r=n;return new et(Math.asinh(r.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.atan(e)),n.typeInfo);const r=n;return new et(Math.atan(r.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.atanh(e)),n.typeInfo);const r=n;return new et(Math.atanh(r.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>Math.atan2(e,r.data[t])),n.typeInfo);const s=n,a=r;return new et(Math.atan2(s.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.ceil(e)),n.typeInfo);const r=n;return new et(Math.ceil(r.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(n instanceof nt&&r instanceof nt&&s instanceof nt)return new nt(n.data.map((e,t)=>this._clamp(e,r.data[t],s.data[t])),n.typeInfo);const a=n,i=r,o=s;return new et(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.cos(e)),n.typeInfo);const r=n;return new et(Math.cos(r.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.cosh(e)),n.typeInfo);const r=n;return new et(Math.cos(r.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.clz32(e)),n.typeInfo);const r=n;return new et(Math.clz32(r.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>this._countOneBits(e)),n.typeInfo);const r=n;return new et(this._countOneBits(r.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>this._countTrailingZeros(e)),n.typeInfo);const r=n;return new et(this._countTrailingZeros(r.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt){if(3!==n.data.length||3!==r.data.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.data,s=r.data;return new nt([t[1]*s[2]-s[1]*t[2],t[2]*s[0]-s[2]*t[0],t[0]*s[1]-s[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),r=180/Math.PI;return n instanceof nt?new nt(n.data.map(e=>e*r),n.typeInfo):new et(n.value*r,this.getTypeInfo("f32"))}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof rt){const e=n.data,t=n.typeInfo.getTypeName(),r=t.endsWith("h")?this.getTypeInfo("f16"):this.getTypeInfo("f32");if("mat2x2"===t||"mat2x2f"===t||"mat2x2h"===t)return new et(e[0]*e[3]-e[1]*e[2],r);if("mat2x3"===t||"mat2x3f"===t||"mat2x3h"===t)return new et(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),r);if("mat2x4"===t||"mat2x4f"===t||"mat2x4h"===t)console.error(`TODO: Determinant for ${t}`);else if("mat3x2"===t||"mat3x2f"===t||"mat3x2h"===t)console.error(`TODO: Determinant for ${t}`);else{if("mat3x3"===t||"mat3x3f"===t||"mat3x3h"===t)return new et(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),r);"mat3x4"===t||"mat3x4f"===t||"mat3x4h"===t||"mat4x2"===t||"mat4x2f"===t||"mat4x2h"===t||"mat4x3"===t||"mat4x3f"===t||"mat4x3h"===t?console.error(`TODO: Determinant for ${t}`):"mat4x4"!==t&&"mat4x4f"!==t&&"mat4x4h"!==t||console.error(`TODO: Determinant for ${t}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt){let e=0;for(let t=0;t<n.data.length;++t)e+=(n.data[t]-r.data[t])*(n.data[t]-r.data[t]);return new et(Math.sqrt(e),this.getTypeInfo("f32"))}const s=n,a=r;return new et(Math.abs(s.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let r=0;r<e.length;++r)n+=t[r]*e[r];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);return n instanceof nt&&r instanceof nt?new et(this._dot(n.data,r.data),this.getTypeInfo("f32")):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.exp(e)),n.typeInfo);const r=n;return new et(Math.exp(r.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.pow(2,e)),n.typeInfo);const r=n;return new et(Math.pow(2,r.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if("u32"!==r.typeInfo.name&&"x32"!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if("u32"!==s.typeInfo.name&&"x32"!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=r.value,i=s.value;if(n instanceof nt)return new nt(n.data.map(e=>e>>a&(1<<i)-1),n.typeInfo);if("i32"!==n.typeInfo.name&&"x32"!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new et(o>>a&(1<<i)-1,this.getTypeInfo("i32"))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(n instanceof nt&&r instanceof nt&&s instanceof nt){const e=this._dot(r.data,s.data);return new nt(e<0?Array.from(n.data):n.data.map(e=>-e),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>this._firstLeadingBit(e)),n.typeInfo);const r=n;return new et(this._firstLeadingBit(r.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>this._firstTrailingBit(e)),n.typeInfo);const r=n;return new et(this._firstTrailingBit(r.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.floor(e)),n.typeInfo);const r=n;return new et(Math.floor(r.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(n instanceof nt&&r instanceof nt&&s instanceof nt)return n.data.length!==r.data.length||n.data.length!==s.data.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new nt(n.data.map((e,t)=>e*r.data[t]+s.data[t]),n.typeInfo);const a=n,i=r,o=s;return new et(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>e-Math.floor(e)),n.typeInfo);const r=n;return new et(r.value-Math.floor(r.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if("u32"!==s.typeInfo.name&&"x32"!==s.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=s.value,o=(1<<a.value)-1<<i,u=~o;if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>e&u|r.data[t]<<i&o),n.typeInfo);const c=n.value,l=r.value;return new et(c&u|l<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>1/Math.sqrt(e)),n.typeInfo);const r=n;return new et(1/Math.sqrt(r.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt){let e=0;return n.data.forEach(t=>{e+=t*t}),new et(Math.sqrt(e),this.getTypeInfo("f32"))}const r=n;return new et(Math.abs(r.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.log(e)),n.typeInfo);const r=n;return new et(Math.log(r.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.log2(e)),n.typeInfo);const r=n;return new et(Math.log2(r.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>Math.max(e,r.data[t])),n.typeInfo);const s=n,a=r;return new et(Math.max(s.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>Math.min(e,r.data[t])),n.typeInfo);const s=n,a=r;return new et(Math.min(s.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(n instanceof nt&&r instanceof nt&&s instanceof nt)return new nt(n.data.map((e,t)=>n.data[t]*(1-s.data[t])+r.data[t]*s.data[t]),n.typeInfo);const a=r,i=s;return new et(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>e%r.data[t]),n.typeInfo);const s=r;return new et(n.value%s.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt){const r=this.Length(e,t).value;return new nt(n.data.map(e=>e/r),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt)return new nt(n.data.map((e,t)=>Math.pow(e,r.data[t])),n.typeInfo);const s=n,a=r;return new et(Math.pow(s.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof nt?new nt(n.data.map(e=>e),n.typeInfo):new et(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);return n instanceof nt?new nt(n.data.map(e=>e*Math.PI/180),n.typeInfo):new et(n.value*Math.PI/180,this.getTypeInfo("f32"))}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(n instanceof nt&&r instanceof nt){const e=this._dot(n.data,r.data);return new nt(n.data.map((t,n)=>t-2*e*r.data[n]),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(n instanceof nt&&r instanceof nt&&s instanceof et){const e=this._dot(r.data,n.data);return new nt(n.data.map((t,n)=>{const a=1-s.value*s.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return s.value*t-(s.value*e+i)*r.data[n]}),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.round(e)),n.typeInfo);const r=n;return new et(Math.round(r.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.min(Math.max(e,0),1)),n.typeInfo);const r=n;return new et(Math.min(Math.max(r.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.sign(e)),n.typeInfo);const r=n;return new et(Math.sign(r.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.sin(e)),n.typeInfo);const r=n;return new et(Math.sin(r.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.sinh(e)),n.typeInfo);const r=n;return new et(Math.sinh(r.value),n.typeInfo)}_smoothstep(e,t,n){const r=Math.min(Math.max((n-e)/(t-e),0),1);return r*r*(3-2*r)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t),s=this.exec.evalExpression(e.args[2],t);if(s instanceof nt&&n instanceof nt&&r instanceof nt)return new nt(s.data.map((e,t)=>this._smoothstep(n.data[t],r.data[t],e)),s.typeInfo);const a=n,i=r,o=s;return new et(this._smoothstep(a.value,i.value,o.value),s.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.sqrt(e)),n.typeInfo);const r=n;return new et(Math.sqrt(r.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),r=this.exec.evalExpression(e.args[1],t);if(r instanceof nt&&n instanceof nt)return new nt(r.data.map((e,t)=>e<n.data[t]?0:1),r.typeInfo);const s=n;return new et(r.value<s.value?0:1,s.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.tan(e)),n.typeInfo);const r=n;return new et(Math.tan(r.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.tanh(e)),n.typeInfo);const r=n;return new et(Math.tanh(r.value),n.typeInfo)}_getTransposeType(e){const t=e.getTypeName();return"mat2x2f"===t||"mat2x2h"===t?e:"mat2x3f"===t?this.getTypeInfo("mat3x2f"):"mat2x3h"===t?this.getTypeInfo("mat3x2h"):"mat2x4f"===t?this.getTypeInfo("mat4x2f"):"mat2x4h"===t?this.getTypeInfo("mat4x2h"):"mat3x2f"===t?this.getTypeInfo("mat2x3f"):"mat3x2h"===t?this.getTypeInfo("mat2x3h"):"mat3x3f"===t||"mat3x3h"===t?e:"mat3x4f"===t?this.getTypeInfo("mat4x3f"):"mat3x4h"===t?this.getTypeInfo("mat4x3h"):"mat4x2f"===t?this.getTypeInfo("mat2x4f"):"mat4x2h"===t?this.getTypeInfo("mat2x4h"):"mat4x3f"===t?this.getTypeInfo("mat3x4f"):"mat4x3h"===t?this.getTypeInfo("mat3x4h"):("mat4x4f"===t||"mat4x4h"===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof rt))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const r=this._getTransposeType(n.typeInfo);if("mat2x2"===n.typeInfo.name||"mat2x2f"===n.typeInfo.name||"mat2x2h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[2],e[1],e[3]],r)}if("mat2x3"===n.typeInfo.name||"mat2x3f"===n.typeInfo.name||"mat2x3h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[3],e[6],e[1],e[4],e[7]],r)}if("mat2x4"===n.typeInfo.name||"mat2x4f"===n.typeInfo.name||"mat2x4h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],r)}if("mat3x2"===n.typeInfo.name||"mat3x2f"===n.typeInfo.name||"mat3x2h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[3],e[1],e[4],e[2],e[5]],r)}if("mat3x3"===n.typeInfo.name||"mat3x3f"===n.typeInfo.name||"mat3x3h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],r)}if("mat3x4"===n.typeInfo.name||"mat3x4f"===n.typeInfo.name||"mat3x4h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],r)}if("mat4x2"===n.typeInfo.name||"mat4x2f"===n.typeInfo.name||"mat4x2h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[4],e[1],e[5],e[2],e[6]],r)}if("mat4x3"===n.typeInfo.name||"mat4x3f"===n.typeInfo.name||"mat4x3h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],r)}if("mat4x4"===n.typeInfo.name||"mat4x4f"===n.typeInfo.name||"mat4x4h"===n.typeInfo.name){const e=n.data;return new rt([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],r)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof nt)return new nt(n.data.map(e=>Math.trunc(e)),n.typeInfo);const r=n;return new et(Math.trunc(r.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error("TODO: dpdxFine"),null}Dpdy(e,t){return console.error("TODO: dpdy"),null}DpdyCoarse(e,t){return console.error("TODO: dpdyCoarse"),null}DpdyFine(e,t){return console.error("TODO: dpdyFine"),null}Fwidth(e,t){return console.error("TODO: fwidth"),null}FwidthCoarse(e,t){return console.error("TODO: fwidthCoarse"),null}FwidthFine(e,t){return console.error("TODO: fwidthFine"),null}TextureDimensions(e,t){const n=e.args[0],r=e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0;if(n instanceof Ce){const s=n.name,a=t.getVariableValue(s);if(a instanceof at){if(r<0||r>=a.mipLevelCount)return console.error(`Invalid mip level for textureDimensions. Line ${e.line}`),null;const t=a.getMipLevelSize(r),n=a.dimension;return"1d"===n?new et(t[0],this.getTypeInfo("u32")):"3d"===n?new nt(t,this.getTypeInfo("vec3u")):"2d"===n?new nt(t.slice(0,2),this.getTypeInfo("vec2u")):(console.error(`Invalid texture dimension ${n} not found. Line ${e.line}`),null)}return console.error(`Texture ${s} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error("TODO: textureGather"),null}TextureGatherCompare(e,t){return console.error("TODO: textureGatherCompare"),null}TextureLoad(e,t){const n=e.args[0],r=this.exec.evalExpression(e.args[1],t),s=e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0;if(!(r instanceof nt)||2!==r.data.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof Ce){const a=n.name,i=t.getVariableValue(a);if(i instanceof at){const t=Math.floor(r.data[0]),n=Math.floor(r.data[1]);if(t<0||t>=i.width||n<0||n>=i.height)return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const o=i.getPixel(t,n,0,s);return null===o?(console.error(`Invalid texture format for textureLoad. Line ${e.line}`),null):new nt(o,this.getTypeInfo("vec4f"))}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){const n=e.args[0];if(n instanceof Ce){const r=n.name,s=t.getVariableValue(r);return s instanceof at?new et(s.depthOrArrayLayers,this.getTypeInfo("u32")):(console.error(`Texture ${r} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLayers. Line ${e.line}`),null}TextureNumLevels(e,t){const n=e.args[0];if(n instanceof Ce){const r=n.name,s=t.getVariableValue(r);return s instanceof at?new et(s.mipLevelCount,this.getTypeInfo("u32")):(console.error(`Texture ${r} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumLevels. Line ${e.line}`),null}TextureNumSamples(e,t){const n=e.args[0];if(n instanceof Ce){const r=n.name,s=t.getVariableValue(r);return s instanceof at?new et(s.sampleCount,this.getTypeInfo("u32")):(console.error(`Texture ${r} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureNumSamples. Line ${e.line}`),null}TextureSample(e,t){return console.error("TODO: textureSample"),null}TextureSampleBias(e,t){return console.error("TODO: textureSampleBias"),null}TextureSampleCompare(e,t){return console.error("TODO: textureSampleCompare"),null}TextureSampleCompareLevel(e,t){return console.error("TODO: textureSampleCompareLevel"),null}TextureSampleGrad(e,t){return console.error("TODO: textureSampleGrad"),null}TextureSampleLevel(e,t){return console.error("TODO: textureSampleLevel"),null}TextureSampleBaseClampToEdge(e,t){return console.error("TODO: textureSampleBaseClampToEdge"),null}TextureStore(e,t){const n=e.args[0],r=this.exec.evalExpression(e.args[1],t),s=4===e.args.length?this.exec.evalExpression(e.args[2],t).value:0,a=4===e.args.length?this.exec.evalExpression(e.args[3],t).data:this.exec.evalExpression(e.args[2],t).data;if(4!==a.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(r instanceof nt)||2!==r.data.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof Ce){const i=n.name,o=t.getVariableValue(i);if(o instanceof at){const t=o.getMipLevelSize(0),n=Math.floor(r.data[0]),u=Math.floor(r.data[1]);return n<0||n>=t[0]||u<0||u>=t[1]?(console.error(`Texture ${i} out of bounds. Line ${e.line}`),null):(o.setPixel(n,u,0,s,Array.from(a)),null)}return console.error(`Texture ${i} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t);return t.getVariable(r).value.getSubData(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t);return o instanceof et&&i instanceof et&&(o.value=i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value+=i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicSub(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value-=i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicMax(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=Math.max(o.value,i.value)),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicMin(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=Math.min(o.value,i.value)),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicAnd(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=o.value&i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicOr(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=o.value|i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicXor(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=o.value^i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicExchange(e,t){let n=e.args[0];n instanceof ze&&(n=n.right);const r=this.exec.getVariableName(n,t),s=t.getVariable(r);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=s.value.getSubData(this.exec,n.postfix,t),u=new et(o.value,o.typeInfo);return o instanceof et&&i instanceof et&&(o.value=i.value),s.value instanceof st&&s.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicCompareExchangeWeak(e,t){return console.error("TODO: atomicCompareExchangeWeak"),null}Pack4x8snorm(e,t){return console.error("TODO: pack4x8snorm"),null}Pack4x8unorm(e,t){return console.error("TODO: pack4x8unorm"),null}Pack4xI8(e,t){return console.error("TODO: pack4xI8"),null}Pack4xU8(e,t){return console.error("TODO: pack4xU8"),null}Pack4x8Clamp(e,t){return console.error("TODO: pack4x8Clamp"),null}Pack4xU8Clamp(e,t){return console.error("TODO: pack4xU8Clamp"),null}Pack2x16snorm(e,t){return console.error("TODO: pack2x16snorm"),null}Pack2x16unorm(e,t){return console.error("TODO: pack2x16unorm"),null}Pack2x16float(e,t){return console.error("TODO: pack2x16float"),null}Unpack4x8snorm(e,t){return console.error("TODO: unpack4x8snorm"),null}Unpack4x8unorm(e,t){return console.error("TODO: unpack4x8unorm"),null}Unpack4xI8(e,t){return console.error("TODO: unpack4xI8"),null}Unpack4xU8(e,t){return console.error("TODO: unpack4xU8"),null}Unpack2x16snorm(e,t){return console.error("TODO: unpack2x16snorm"),null}Unpack2x16unorm(e,t){return console.error("TODO: unpack2x16unorm"),null}Unpack2x16float(e,t){return console.error("TODO: unpack2x16float"),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error("TODO: subgroupAdd"),null}SubgroupExclusiveAdd(e,t){return console.error("TODO: subgroupExclusiveAdd"),null}SubgroupInclusiveAdd(e,t){return console.error("TODO: subgroupInclusiveAdd"),null}SubgroupAll(e,t){return console.error("TODO: subgroupAll"),null}SubgroupAnd(e,t){return console.error("TODO: subgroupAnd"),null}SubgroupAny(e,t){return console.error("TODO: subgroupAny"),null}SubgroupBallot(e,t){return console.error("TODO: subgroupBallot"),null}SubgroupBroadcast(e,t){return console.error("TODO: subgroupBroadcast"),null}SubgroupBroadcastFirst(e,t){return console.error("TODO: subgroupBroadcastFirst"),null}SubgroupElect(e,t){return console.error("TODO: subgroupElect"),null}SubgroupMax(e,t){return console.error("TODO: subgroupMax"),null}SubgroupMin(e,t){return console.error("TODO: subgroupMin"),null}SubgroupMul(e,t){return console.error("TODO: subgroupMul"),null}SubgroupExclusiveMul(e,t){return console.error("TODO: subgroupExclusiveMul"),null}SubgroupInclusiveMul(e,t){return console.error("TODO: subgroupInclusiveMul"),null}SubgroupOr(e,t){return console.error("TODO: subgroupOr"),null}SubgroupShuffle(e,t){return console.error("TODO: subgroupShuffle"),null}SubgroupShuffleDown(e,t){return console.error("TODO: subgroupShuffleDown"),null}SubgroupShuffleUp(e,t){return console.error("TODO: subgroupShuffleUp"),null}SubgroupShuffleXor(e,t){return console.error("TODO: subgroupShuffleXor"),null}SubgroupXor(e,t){return console.error("TODO: subgroupXor"),null}QuadBroadcast(e,t){return console.error("TODO: quadBroadcast"),null}QuadSwapDiagonal(e,t){return console.error("TODO: quadSwapDiagonal"),null}QuadSwapX(e,t){return console.error("TODO: quadSwapX"),null}QuadSwapY(e,t){return console.error("TODO: quadSwapY"),null}}const $t={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4},Vt={mat2x2:[2,2,4],mat2x2f:[2,2,4],mat2x2h:[2,2,4],mat2x3:[2,3,6],mat2x3f:[2,3,6],mat2x3h:[2,3,6],mat2x4:[2,4,8],mat2x4f:[2,4,8],mat2x4h:[2,4,8],mat3x2:[3,2,6],mat3x2f:[3,2,6],mat3x2h:[3,2,6],mat3x3:[3,3,9],mat3x3f:[3,3,9],mat3x3h:[3,3,9],mat3x4:[3,4,12],mat3x4f:[3,4,12],mat3x4h:[3,4,12],mat4x2:[4,2,8],mat4x2f:[4,2,8],mat4x2h:[4,2,8],mat4x3:[4,3,12],mat4x3f:[4,3,12],mat4x3h:[4,3,12],mat4x4:[4,4,16],mat4x4f:[4,4,16],mat4x4h:[4,4,16]};class Ot extends Et{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new kt,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?void 0:t.clone())&&void 0!==n?n:new St,this.builtins=new Lt(this),this.typeInfo={bool:this.getTypeInfo(Ie.bool),i32:this.getTypeInfo(Ie.i32),u32:this.getTypeInfo(Ie.u32),f32:this.getTypeInfo(Ie.f32),f16:this.getTypeInfo(Ie.f16),vec2f:this.getTypeInfo(Se.vec2f),vec2u:this.getTypeInfo(Se.vec2u),vec2i:this.getTypeInfo(Se.vec2i),vec2h:this.getTypeInfo(Se.vec2h),vec3f:this.getTypeInfo(Se.vec3f),vec3u:this.getTypeInfo(Se.vec3u),vec3i:this.getTypeInfo(Se.vec3i),vec3h:this.getTypeInfo(Se.vec3h),vec4f:this.getTypeInfo(Se.vec4f),vec4u:this.getTypeInfo(Se.vec4u),vec4i:this.getTypeInfo(Se.vec4i),vec4h:this.getTypeInfo(Se.vec4h),mat2x2f:this.getTypeInfo(Se.mat2x2f),mat2x3f:this.getTypeInfo(Se.mat2x3f),mat2x4f:this.getTypeInfo(Se.mat2x4f),mat3x2f:this.getTypeInfo(Se.mat3x2f),mat3x3f:this.getTypeInfo(Se.mat3x3f),mat3x4f:this.getTypeInfo(Se.mat3x4f),mat4x2f:this.getTypeInfo(Se.mat4x2f),mat4x3f:this.getTypeInfo(Se.mat4x3f),mat4x4f:this.getTypeInfo(Se.mat4x4f)}}getVariableValue(e){var t,n;const r=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;if(null===r)return null;if(r instanceof et)return r.value;if(r instanceof nt)return Array.from(r.data);if(r instanceof rt)return Array.from(r.data);if(r instanceof st&&r.typeInfo instanceof I){if("u32"===r.typeInfo.format.name)return Array.from(new Uint32Array(r.buffer,r.offset,r.typeInfo.count));if("i32"===r.typeInfo.format.name)return Array.from(new Int32Array(r.buffer,r.offset,r.typeInfo.count));if("f32"===r.typeInfo.format.name)return Array.from(new Float32Array(r.buffer,r.offset,r.typeInfo.count))}return console.error(`Unsupported return variable type ${r.typeInfo.name}`),null}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,r){const s=this.context.clone();(r=null!=r?r:{}).constants&&this._setOverrides(r.constants,s),this._execStatements(this.ast,s);const a=s.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if("number"==typeof t)t=[t,1,1];else{if(0===t.length)return void console.error("Invalid dispatch count");1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const i=t[0],o=t[1],u=t[2],c=this.getTypeInfo("vec3u");s.setVariable("@num_workgroups",new nt(t,c));for(const e in n)for(const t in n[e]){const r=n[e][t];s.variables.forEach(n=>{var s;const a=n.node;if(null==a?void 0:a.attributes){let i=null,o=null;for(const e of a.attributes)"binding"===e.name?i=e.value:"group"===e.name&&(o=e.value);if(t==i&&e==o)if(void 0!==r.texture&&void 0!==r.descriptor){const e=new at(r.texture,this.getTypeInfo(a.type),r.descriptor,null!==(s=r.texture.view)&&void 0!==s?s:null);n.value=e}else void 0!==r.uniform?n.value=new st(r.uniform,this.getTypeInfo(a.type)):n.value=new st(r,this.getTypeInfo(a.type))}})}for(let e=0;e<u;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)s.setVariable("@workgroup_id",new nt([n,t,e],this.getTypeInfo("vec3u"))),this._dispatchWorkgroup(a,[n,t,e],s)}execStatement(e,t){if(e instanceof ye)return this.evalExpression(e.value,t);if(e instanceof we){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof et))throw new Error("Invalid break-if condition");if(!n.value)return null}return Ot._breakObj}if(e instanceof ke)return Ot._continueObj;if(e instanceof se)this._let(e,t);else if(e instanceof ne)this._var(e,t);else if(e instanceof ae)this._const(e,t);else if(e instanceof Q)this._function(e,t);else{if(e instanceof de)return this._if(e,t);if(e instanceof me)return this._switch(e,t);if(e instanceof te)return this._for(e,t);if(e instanceof J)return this._while(e,t);if(e instanceof pe)return this._loop(e,t);if(e instanceof ee){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof fe)this._assign(e,t);else if(e instanceof le)this._increment(e,t);else{if(e instanceof Ae)return null;if(e instanceof re){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new et(0,this.getTypeInfo("u32")))}else if(e instanceof he)this._call(e,t);else{if(e instanceof _e)return null;if(e instanceof be)return null;console.error("Invalid statement type.",e,`Line ${e.line}`)}}}return null}evalExpression(e,t){return e instanceof We?this._evalBinaryOp(e,t):e instanceof Ue?this._evalLiteral(e,t):e instanceof Ce?this._evalVariable(e,t):e instanceof Be?this._evalCall(e,t):e instanceof De?this._evalCreate(e,t):e instanceof Fe?this._evalConst(e,t):e instanceof Ne?this._evalBitcast(e,t):e instanceof ze?this._evalUnaryOp(e,t):(console.error("Invalid expression type",e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof Ie){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}let n=null!==(t=this.typeInfo[e])&&void 0!==t?t:null;return null!==n||(n=this.reflection.getTypeInfoByName(e)),n}_setOverrides(e,t){for(const n in e){const r=e[n],s=this.reflection.getOverrideInfo(n);null!==s?(null===s.type&&(s.type=this.getTypeInfo("u32")),"u32"===s.type.name||"i32"===s.type.name||"f32"===s.type.name||"f16"===s.type.name?t.setVariable(n,new et(r,s.type)):"bool"===s.type.name?t.setVariable(n,new et(r?1:0,s.type)):"vec2"===s.type.name||"vec3"===s.type.name||"vec4"===s.type.name||"vec2f"===s.type.name||"vec3f"===s.type.name||"vec4f"===s.type.name||"vec2i"===s.type.name||"vec3i"===s.type.name||"vec4i"===s.type.name||"vec2u"===s.type.name||"vec3u"===s.type.name||"vec4u"===s.type.name||"vec2h"===s.type.name||"vec3h"===s.type.name||"vec4h"===s.type.name?t.setVariable(n,new nt(r,s.type)):console.error(`Invalid constant type for ${n}`)):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const r=[1,1,1];for(const t of e.node.attributes)if("workgroup_size"===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);r[0]=e instanceof et?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);r[1]=e instanceof et?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);r[2]=e instanceof et?e.value:parseInt(t.value[2])}}const s=this.getTypeInfo("vec3u"),a=this.getTypeInfo("u32");n.setVariable("@workgroup_size",new nt(r,s));const i=r[0],o=r[1],u=r[2];for(let c=0,l=0;c<u;++c)for(let u=0;u<o;++u)for(let o=0;o<i;++o,++l){const i=[o,u,c],f=[o+t[0]*r[0],u+t[1]*r[1],c+t[2]*r[2]];n.setVariable("@local_invocation_id",new nt(i,s)),n.setVariable("@global_invocation_id",new nt(f,s)),n.setVariable("@local_invocation_index",new et(l,a)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if("builtin"===e.name){const r=`@${e.value}`,s=t.getVariable(r);void 0!==s&&t.variables.set(n.name,s)}this._execStatements(e.node.body,t)}getVariableName(e,t){for(;e instanceof ze;)e=e.right;return e instanceof Ce?e.name:(console.error("Unknown variable type",e,"Line",e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),r=this._execStatements(n,e);if(r)return r;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const r=t.getFunction(e.name);if(r){for(let t=0;t<r.node.args.length;++t){const s=r.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(s.name,a,s)}this._execStatements(r.node.body,n)}else e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)&&this._evalCreate(e,t)}_increment(e,t){const n=this.getVariableName(e.variable,t),r=t.getVariable(n);r?"++"===e.operator?r.value instanceof et?r.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):"--"===e.operator?r.value instanceof et?r.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_getVariableData(e,t){if(e instanceof Ce){const n=this.getVariableName(e,t),r=t.getVariable(n);return null===r?(console.error(`Variable ${n} not found. Line ${e.line}`),null):r.value.getSubData(this,e.postfix,t)}if(e instanceof ze){if("*"===e.operator){const n=this._getVariableData(e.right,t);return n instanceof Je?n.reference.getSubData(this,e.postfix,t):(console.error(`Variable ${e.right} is not a pointer. Line ${e.line}`),null)}if("&"===e.operator){const n=this._getVariableData(e.right,t);return new Je(n)}}return null}_assign(e,t){let n=null,r="<var>",s=null;if(e.variable instanceof ze){const n=this._getVariableData(e.variable,t),r=this.evalExpression(e.value,t),s=e.operator;if("="===s){if(n instanceof et||n instanceof nt||n instanceof rt){if(r instanceof et||r instanceof nt||r instanceof rt&&n.data.length===r.data.length)return void n.data.set(r.data);console.error(`Invalid assignment. Line ${e.line}`)}else if(n instanceof st&&r instanceof st&&n.buffer.byteLength-n.offset>=r.buffer.byteLength-r.offset)return void(n.buffer.byteLength%4==0?new Uint32Array(n.buffer,n.offset,n.typeInfo.size/4).set(new Uint32Array(r.buffer,r.offset,r.typeInfo.size/4)):new Uint8Array(n.buffer,n.offset,n.typeInfo.size).set(new Uint8Array(r.buffer,r.offset,r.typeInfo.size)));return console.error(`Invalid assignment. Line ${e.line}`),null}if("+="===s)return n instanceof et||n instanceof nt||n instanceof rt?r instanceof et||r instanceof nt||r instanceof rt?void n.data.set(r.data.map((e,t)=>n.data[t]+e)):void console.error(`Invalid assignment . Line ${e.line}`):void console.error(`Invalid assignment. Line ${e.line}`);if("-="===s)return(n instanceof et||n instanceof nt||n instanceof rt)&&(r instanceof et||r instanceof nt||r instanceof rt)?void n.data.set(r.data.map((e,t)=>n.data[t]-e)):void console.error(`Invalid assignment. Line ${e.line}`)}if(e.variable instanceof ze){if("*"===e.variable.operator){r=this.getVariableName(e.variable.right,t);const s=t.getVariable(r);if(!(s&&s.value instanceof Je))return void console.error(`Variable ${r} is not a pointer. Line ${e.line}`);n=s.value.reference;let a=e.variable.postfix;if(!a){let t=e.variable.right;for(;t instanceof ze;){if(t.postfix){a=t.postfix;break}t=t.right}}a&&(n=n.getSubData(this,a,t))}}else{s=e.variable.postfix,r=this.getVariableName(e.variable,t);const a=t.getVariable(r);if(null===a)return void console.error(`Variable ${r} not found. Line ${e.line}`);n=a.value}if(n instanceof Je&&(n=n.reference),null===n)return void console.error(`Variable ${r} not found. Line ${e.line}`);const a=this.evalExpression(e.value,t),i=e.operator;if("="===i)if(n instanceof st)n.setDataValue(this,a,s,t);else if(s){if(!(n instanceof nt||n instanceof rt))return void console.error(`Variable ${r} is not a vector or matrix. Line ${e.line}`);if(s instanceof Me){const i=this.evalExpression(s.index,t).value;if(n instanceof nt){if(!(a instanceof et))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[i]=a.value}else{if(!(n instanceof rt))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);{const i=this.evalExpression(s.index,t).value;if(i<0)return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);if(!(a instanceof nt))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);{const t=n.typeInfo.getTypeName();if("mat2x2"===t||"mat2x2f"===t||"mat2x2h"===t){if(!(i<2&&2===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat2x3"===t||"mat2x3f"===t||"mat2x3h"===t){if(!(i<2&&3===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if("mat2x4"===t||"mat2x4f"===t||"mat2x4h"===t){if(!(i<2&&4===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if("mat3x2"===t||"mat3x2f"===t||"mat3x2h"===t){if(!(i<3&&2===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat3x3"===t||"mat3x3f"===t||"mat3x3h"===t){if(!(i<3&&3===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else if("mat3x4"===t||"mat3x4f"===t||"mat3x4h"===t){if(!(i<3&&4===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}else if("mat4x2"===t||"mat4x2f"===t||"mat4x2h"===t){if(!(i<4&&2===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[2*i]=a.data[0],n.data[2*i+1]=a.data[1]}else if("mat4x3"===t||"mat4x3f"===t||"mat4x3h"===t){if(!(i<4&&3===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[3*i]=a.data[0],n.data[3*i+1]=a.data[1],n.data[3*i+2]=a.data[2]}else{if("mat4x4"!==t&&"mat4x4f"!==t&&"mat4x4h"!==t)return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);if(!(i<4&&4===a.data.length))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);n.data[4*i]=a.data[0],n.data[4*i+1]=a.data[1],n.data[4*i+2]=a.data[2],n.data[4*i+3]=a.data[3]}}}}}else if(s instanceof Oe){const t=s.value;if(!(n instanceof nt))return void console.error(`Invalid assignment to ${t}. Variable ${r} is not a vector. Line ${e.line}`);if(a instanceof et){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${r}. Line ${e.line}`);if("x"===t)n.data[0]=a.value;else if("y"===t){if(n.data.length<2)return void console.error(`Invalid assignment to ${t} for variable ${r}. Line ${e.line}`);n.data[1]=a.value}else if("z"===t){if(n.data.length<3)return void console.error(`Invalid assignment to ${t} for variable ${r}. Line ${e.line}`);n.data[2]=a.value}else if("w"===t){if(n.data.length<4)return void console.error(`Invalid assignment to ${t} for variable ${r}. Line ${e.line}`);n.data[3]=a.value}}else{if(!(a instanceof nt))return void console.error(`Invalid assignment to ${r}. Line ${e.line}`);if(t.length!==a.data.length)return void console.error(`Invalid assignment to ${t} for variable ${r}. Line ${e.line}`);for(let s=0;s<t.length;++s){const i=t[s];if("x"===i||"r"===i)n.data[0]=a.data[s];else if("y"===i||"g"===i){if(a.data.length<2)return void console.error(`Invalid assignment to ${i} for variable ${r}. Line ${e.line}`);n.data[1]=a.data[s]}else if("z"===i||"b"===i){if(a.data.length<3)return void console.error(`Invalid assignment to ${i} for variable ${r}. Line ${e.line}`);n.data[2]=a.data[s]}else{if("w"!==i&&"a"!==i)return void console.error(`Invalid assignment to ${i} for variable ${r}. Line ${e.line}`);if(a.data.length<4)return void console.error(`Invalid assignment to ${i} for variable ${r}. Line ${e.line}`);n.data[3]=a.data[s]}}}}}else n instanceof et&&a instanceof et?n.value=a.value:n instanceof nt&&a instanceof nt||n instanceof rt&&a instanceof rt?n.data.set(a.data):console.error(`Invalid assignment to ${r}. Line ${e.line}`);else{const r=n.getSubData(this,s,t);if(r instanceof nt&&a instanceof et){const t=r.data,n=a.value;if("+="===i)for(let e=0;e<t.length;++e)t[e]+=n;else if("-="===i)for(let e=0;e<t.length;++e)t[e]-=n;else if("*="===i)for(let e=0;e<t.length;++e)t[e]*=n;else if("/="===i)for(let e=0;e<t.length;++e)t[e]/=n;else if("%="===i)for(let e=0;e<t.length;++e)t[e]%=n;else if("&="===i)for(let e=0;e<t.length;++e)t[e]&=n;else if("|="===i)for(let e=0;e<t.length;++e)t[e]|=n;else if("^="===i)for(let e=0;e<t.length;++e)t[e]^=n;else if("<<="===i)for(let e=0;e<t.length;++e)t[e]<<=n;else if(">>="===i)for(let e=0;e<t.length;++e)t[e]>>=n;else console.error(`Invalid operator ${i}. Line ${e.line}`)}else if(r instanceof nt&&a instanceof nt){const t=r.data,n=a.data;if(t.length!==n.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if("+="===i)for(let e=0;e<t.length;++e)t[e]+=n[e];else if("-="===i)for(let e=0;e<t.length;++e)t[e]-=n[e];else if("*="===i)for(let e=0;e<t.length;++e)t[e]*=n[e];else if("/="===i)for(let e=0;e<t.length;++e)t[e]/=n[e];else if("%="===i)for(let e=0;e<t.length;++e)t[e]%=n[e];else if("&="===i)for(let e=0;e<t.length;++e)t[e]&=n[e];else if("|="===i)for(let e=0;e<t.length;++e)t[e]|=n[e];else if("^="===i)for(let e=0;e<t.length;++e)t[e]^=n[e];else if("<<="===i)for(let e=0;e<t.length;++e)t[e]<<=n[e];else if(">>="===i)for(let e=0;e<t.length;++e)t[e]>>=n[e];else console.error(`Invalid operator ${i}. Line ${e.line}`)}else{if(!(r instanceof et&&a instanceof et))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);"+="===i?r.value+=a.value:"-="===i?r.value-=a.value:"*="===i?r.value*=a.value:"/="===i?r.value/=a.value:"%="===i?r.value%=a.value:"&="===i?r.value&=a.value:"|="===i?r.value|=a.value:"^="===i?r.value^=a.value:"<<="===i?r.value<<=a.value:">>="===i?r.value>>=a.value:console.error(`Invalid operator ${i}. Line ${e.line}`)}n instanceof st&&n.setDataValue(this,r,s,t)}}_function(e,t){const n=new At(e);t.functions.set(e.name,n)}_const(e,t){let n=null;null!==e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ze||(n=n.clone())}else{const r=e.type.name;if("f32"===r||"i32"===r||"u32"===r||"bool"===r||"f16"===r||"vec2"===r||"vec3"===r||"vec4"===r||"vec2f"===r||"vec3f"===r||"vec4f"===r||"vec2i"===r||"vec3i"===r||"vec4i"===r||"vec2u"===r||"vec3u"===r||"vec4u"===r||"vec2h"===r||"vec3h"===r||"vec4h"===r||"vec2b"===r||"vec3b"===r||"vec4b"===r||"mat2x2"===r||"mat2x3"===r||"mat2x4"===r||"mat3x2"===r||"mat3x3"===r||"mat3x4"===r||"mat4x2"===r||"mat4x3"===r||"mat4x4"===r||"mat2x2f"===r||"mat2x3f"===r||"mat2x4f"===r||"mat3x2f"===r||"mat3x3f"===r||"mat3x4f"===r||"mat4x2f"===r||"mat4x3f"===r||"mat4x4f"===r||"mat2x2h"===r||"mat2x3h"===r||"mat2x4h"===r||"mat3x2h"===r||"mat3x3h"===r||"mat3x4h"===r||"mat4x2h"===r||"mat4x3h"===r||"mat4x4h"===r||"array"===r){const r=new De(e.type,[]);n=this._evalCreate(r,t)}}t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(null!==e.value){if(n=this.evalExpression(e.value,t),null===n)return void console.error(`Invalid value for variable ${e.name}. Line ${e.line}`);e.value instanceof ze||(n=n.clone())}else{if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);const r=e.type.name;if("f32"===r||"i32"===r||"u32"===r||"bool"===r||"f16"===r||"vec2"===r||"vec3"===r||"vec4"===r||"vec2f"===r||"vec3f"===r||"vec4f"===r||"vec2i"===r||"vec3i"===r||"vec4i"===r||"vec2u"===r||"vec3u"===r||"vec4u"===r||"vec2h"===r||"vec3h"===r||"vec4h"===r||"vec2b"===r||"vec3b"===r||"vec4b"===r||"mat2x2"===r||"mat2x3"===r||"mat2x4"===r||"mat3x2"===r||"mat3x3"===r||"mat3x4"===r||"mat4x2"===r||"mat4x3"===r||"mat4x4"===r||"mat2x2f"===r||"mat2x3f"===r||"mat2x4f"===r||"mat3x2f"===r||"mat3x3f"===r||"mat3x4f"===r||"mat4x2f"===r||"mat4x3f"===r||"mat4x4f"===r||"mat2x2h"===r||"mat2x3h"===r||"mat2x4h"===r||"mat3x2h"===r||"mat3x3h"===r||"mat3x4h"===r||"mat4x2h"===r||"mat4x3h"===r||"mat4x4h"===r||e.type instanceof Le||e.type instanceof Ae||e.type instanceof Se){const r=new De(e.type,[]);n=this._evalCreate(r,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof et))return console.error(`Invalid if condition. Line ${e.line}`),null;let r=null;for(const s of e.cases)if(s instanceof Re)for(const a of s.selectors){if(a instanceof He){r=s;continue}const i=this.evalExpression(a,t);if(!(i instanceof et))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(s.body,t)}else s instanceof Ge&&(r=s);return r?this._execStatements(r.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof et))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const r=this.evalExpression(n.condition,t);if(!(r instanceof et))return console.error(`Invalid if condition. Line ${e.line}`),null;if(r.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof et?e.value:(console.error("Expected scalar value.",e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ot._breakObj)break;if(null!==n&&n!==Ot._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===Ot._breakObj)break;if(n===Ot._continueObj){if(e.continuing&&this._execStatements(e.continuing.body,t)===Ot._breakObj)break}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ot._breakObj)break;if(n!==Ot._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),r=e.type;if(n instanceof et){const e=bt(n.value,n.typeInfo.name,r.name);return new et(e,this.getTypeInfo(r))}if(n instanceof nt){const t=n.typeInfo.getTypeName();let s="";if(t.endsWith("f"))s="f32";else if(t.endsWith("i"))s="i32";else if(t.endsWith("u"))s="u32";else if(t.endsWith("b"))s="bool";else{if(!t.endsWith("h"))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;s="f16"}const a=r.getTypeName();let i="";if(a.endsWith("f"))i="f32";else if(a.endsWith("i"))i="i32";else if(a.endsWith("u"))i="u32";else if(a.endsWith("b"))i="bool";else{if(!a.endsWith("h"))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i="f16"}const o=function(e,t,n){if(t===n)return e;const r=new Array(e.length);for(let s=0;s<e.length;s++)r[s]=bt(e[s],t,n);return r}(Array.from(n.data),s,i);return new nt(o,this.getTypeInfo(r))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){return t.getVariableValue(e.name).clone().getSubData(this,e.postfix,t)}_evalCreate(e,t){var n;if(e instanceof De){if(null===e.type)return Ke.void;switch(e.type.getTypeName()){case"bool":case"i32":case"u32":case"f32":case"f16":return this._callConstructorValue(e,t);case"vec2":case"vec3":case"vec4":case"vec2f":case"vec3f":case"vec4f":case"vec2h":case"vec3h":case"vec4h":case"vec2i":case"vec3i":case"vec4i":case"vec2u":case"vec3u":case"vec4u":case"vec2b":case"vec3b":case"vec4b":return this._callConstructorVec(e,t);case"mat2x2":case"mat2x2f":case"mat2x2h":case"mat2x3":case"mat2x3f":case"mat2x3h":case"mat2x4":case"mat2x4f":case"mat2x4h":case"mat3x2":case"mat3x2f":case"mat3x2h":case"mat3x3":case"mat3x3f":case"mat3x3h":case"mat3x4":case"mat3x4f":case"mat3x4h":case"mat4x2":case"mat4x2f":case"mat4x2h":case"mat4x3":case"mat4x3f":case"mat4x3h":case"mat4x4":case"mat4x4f":case"mat4x4h":return this._callConstructorMatrix(e,t)}}const r=e instanceof De?e.type.name:e.name,s=e instanceof De?this.getTypeInfo(e.type):this.getTypeInfo(e.name);if(null===s)return console.error(`Unknown type ${r}. Line ${e.line}`),null;if(0===s.size)return null;const a=new st(new ArrayBuffer(s.size),s,0);if(s instanceof k){if(e.args)for(let n=0;n<e.args.length;++n){const r=s.members[n],i=e.args[n],o=this.evalExpression(i,t);a.setData(this,o,r.type,r.offset,t)}}else if(s instanceof I){let r=0;if(e.args)for(let i=0;i<e.args.length;++i){const o=e.args[i],u=this.evalExpression(o,t);null===s.format&&("x32"===(null===(n=u.typeInfo)||void 0===n?void 0:n.name)?s.format=this.getTypeInfo("i32"):s.format=u.typeInfo),a.setData(this,u,s.format,r,t),r+=s.stride}}else console.error(`Unknown type "${r}". Line ${e.line}`);return e instanceof De?a.getSubData(this,e.postfix,t):a}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),r=n.name;return"x32"===r||"u32"===r||"f32"===r||"f16"===r||"i32"===r||"bool"===r?new et(e.scalarValue,n):"vec2"===r||"vec3"===r||"vec4"===r||"vec2f"===r||"vec3f"===r||"vec4f"===r||"vec2h"===r||"vec3h"===r||"vec4h"===r||"vec2i"===r||"vec3i"===r||"vec4i"===r||"vec2u"===r||"vec3u"===r||"vec4u"===r?this._callConstructorVec(e,t):"mat2x2"===r||"mat2x3"===r||"mat2x4"===r||"mat3x2"===r||"mat3x3"===r||"mat3x4"===r||"mat4x2"===r||"mat4x3"===r||"mat4x4"===r||"mat2x2f"===r||"mat2x3f"===r||"mat2x4f"===r||"mat3x2f"===r||"mat3x3f"===r||"mat3x4f"===r||"mat4x2f"===r||"mat4x3f"===r||"mat4x4f"===r||"mat2x2h"===r||"mat2x3h"===r||"mat2x4h"===r||"mat3x2h"===r||"mat3x3h"===r||"mat3x4h"===r||"mat4x2h"===r||"mat4x3h"===r||"mat4x4h"===r?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:n.getSubData(this,e.postfix,t)}_maxFormatTypeInfo(e){let t=e[0];if("f32"===t.name)return t;for(let n=1;n<e.length;++n){const r=Ot._priority.get(t.name);Ot._priority.get(e[n].name)<r&&(t=e[n])}return"x32"===t.name?this.getTypeInfo("i32"):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t);if("&"===e.operator)return new Je(n);if("*"===e.operator)return n instanceof Je?n.reference.getSubData(this,e.postfix,t):(console.error(`Invalid dereference. Line ${e.line}`),null);const r=n instanceof et?n.value:n instanceof nt?Array.from(n.data):null;switch(e.operator){case"+":{if(lt(r)){const e=r.map((e,t)=>+e);return new nt(e,n.typeInfo)}const e=r,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new et(+e,t)}case"-":{if(lt(r)){const e=r.map((e,t)=>-e);return new nt(e,n.typeInfo)}const e=r,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new et(-e,t)}case"!":{if(lt(r)){const e=r.map((e,t)=>e?0:1);return new nt(e,n.typeInfo)}const e=r,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new et(e?0:1,t)}case"~":{if(lt(r)){const e=r.map((e,t)=>~e);return new nt(e,n.typeInfo)}const e=r,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new et(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),r=this.evalExpression(e.right,t),s=n instanceof et?n.value:n instanceof nt||n instanceof rt?Array.from(n.data):null,a=r instanceof et?r.value:r instanceof nt||r instanceof rt?Array.from(r.data):null;switch(e.operator){case"+":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e+r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t+e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e+t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t+i,o)}case"-":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e-r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t-e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e-t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t-i,o)}case"*":{if(lt(s)&&lt(a)){const t=s,i=a;if(n instanceof rt&&r instanceof rt){const s=function(e,t,n,r){if(void 0===Vt[t.name]||void 0===Vt[r.name])return null;const s=Vt[t.name][0],a=Vt[t.name][1],i=Vt[r.name][0];if(s!==Vt[r.name][1])return null;const o=new Array(i*a);for(let t=0;t<a;t++)for(let r=0;r<i;r++){let u=0;for(let i=0;i<s;i++)u+=e[i*a+t]*n[r*s+i];o[t*i+r]=u}return o}(t,n.typeInfo,i,r.typeInfo);if(null===s)return console.error(`Matrix multiplication failed. Line ${e.line}.`),null;const a=Vt[r.typeInfo.name][0],o=Vt[n.typeInfo.name][1],u=this.getTypeInfo(`mat${a}x${o}f`);return new rt(s,u)}if(n instanceof rt&&r instanceof nt){const s=function(e,t,n,r){if(void 0===Vt[t.name]||void 0===$t[r.name])return null;const s=Vt[t.name][0],a=Vt[t.name][1];if(s!==n.length)return null;const i=new Array(a);for(let t=0;t<a;t++){let r=0;for(let i=0;i<s;i++)r+=e[i*a+t]*n[i];i[t]=r}return i}(t,n.typeInfo,i,r.typeInfo);return null===s?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new nt(s,r.typeInfo)}if(n instanceof nt&&r instanceof rt){const s=function(e,t,n,r){if(void 0===$t[t.name]||void 0===Vt[r.name])return null;const s=Vt[r.name][0],a=Vt[r.name][1];if(a!==e.length)return null;const i=[];for(let t=0;t<s;t++){let r=0;for(let i=0;i<a;i++)r+=e[i]*n[i*s+t];i[t]=r}return i}(t,n.typeInfo,i,r.typeInfo);return null===s?(console.error(`Matrix vector multiplication failed. Line ${e.line}.`),null):new nt(s,n.typeInfo)}{if(t.length!==i.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const r=t.map((e,t)=>e*i[t]);return new nt(r,n.typeInfo)}}if(lt(s)){const e=a,t=s.map((t,n)=>t*e);return n instanceof rt?new rt(t,n.typeInfo):new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e*t);return r instanceof rt?new rt(t,r.typeInfo):new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t*i,o)}case"%":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e%r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t%e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e%t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t%i,o)}case"/":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e/r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t/e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e/t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t/i,o)}case"&":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e&r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t&e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e&t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t&i,o)}case"|":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e|r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t|e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e|t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t|i,o)}case"^":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e^r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t^e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e^t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t^i,o)}case"<<":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<<r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t<<e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e<<t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t<<i,o)}case">>":{if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>>r[t]);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t>>e);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e>>t);return new nt(t,r.typeInfo)}const t=s,i=a,o=this._maxFormatTypeInfo([n.typeInfo,r.typeInfo]);return new et(t>>i,o)}case">":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t>e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e>t?1:0);return new nt(t,r.typeInfo)}return new et(s>a?1:0,this.getTypeInfo("bool"));case"<":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t<e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e<t?1:0);return new nt(t,r.typeInfo)}return new et(s<a?1:0,this.getTypeInfo("bool"));case"==":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e===r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t==e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e==t?1:0);return new nt(t,r.typeInfo)}return new et(s===a?1:0,this.getTypeInfo("bool"));case"!=":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e!==r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t!==e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e!==t?1:0);return new nt(t,r.typeInfo)}return new et(s!==a?1:0,this.getTypeInfo("bool"));case">=":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e>=r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t>=e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e>=t?1:0);return new nt(t,r.typeInfo)}return new et(s>=a?1:0,this.getTypeInfo("bool"));case"<=":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e<=r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t<=e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e<=t?1:0);return new nt(t,r.typeInfo)}return new et(s<=a?1:0,this.getTypeInfo("bool"));case"&&":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e&&r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t&&e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e&&t?1:0);return new nt(t,r.typeInfo)}return new et(s&&a?1:0,this.getTypeInfo("bool"));case"||":if(lt(s)&&lt(a)){const t=s,r=a;if(t.length!==r.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map((e,t)=>e||r[t]?1:0);return new nt(i,n.typeInfo)}if(lt(s)){const e=a,t=s.map((t,n)=>t||e?1:0);return new nt(t,n.typeInfo)}if(lt(a)){const e=s,t=a.map((t,n)=>e||t?1:0);return new nt(t,r.typeInfo)}return new et(s||a?1:0,this.getTypeInfo("bool"))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const r=t.getFunction(e.name);if(!r)return e.isBuiltin?this._callBuiltinFunction(e,n):this.getTypeInfo(e.name)?this._evalCreate(e,t):(console.error(`Unknown function "${e.name}". Line ${e.line}`),null);for(let t=0;t<r.node.args.length;++t){const s=r.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(s.name,a,s)}return this._execStatements(r.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case"all":return this.builtins.All(e,t);case"any":return this.builtins.Any(e,t);case"select":return this.builtins.Select(e,t);case"arrayLength":return this.builtins.ArrayLength(e,t);case"abs":return this.builtins.Abs(e,t);case"acos":return this.builtins.Acos(e,t);case"acosh":return this.builtins.Acosh(e,t);case"asin":return this.builtins.Asin(e,t);case"asinh":return this.builtins.Asinh(e,t);case"atan":return this.builtins.Atan(e,t);case"atanh":return this.builtins.Atanh(e,t);case"atan2":return this.builtins.Atan2(e,t);case"ceil":return this.builtins.Ceil(e,t);case"clamp":return this.builtins.Clamp(e,t);case"cos":return this.builtins.Cos(e,t);case"cosh":return this.builtins.Cosh(e,t);case"countLeadingZeros":return this.builtins.CountLeadingZeros(e,t);case"countOneBits":return this.builtins.CountOneBits(e,t);case"countTrailingZeros":return this.builtins.CountTrailingZeros(e,t);case"cross":return this.builtins.Cross(e,t);case"degrees":return this.builtins.Degrees(e,t);case"determinant":return this.builtins.Determinant(e,t);case"distance":return this.builtins.Distance(e,t);case"dot":return this.builtins.Dot(e,t);case"dot4U8Packed":return this.builtins.Dot4U8Packed(e,t);case"dot4I8Packed":return this.builtins.Dot4I8Packed(e,t);case"exp":return this.builtins.Exp(e,t);case"exp2":return this.builtins.Exp2(e,t);case"extractBits":return this.builtins.ExtractBits(e,t);case"faceForward":return this.builtins.FaceForward(e,t);case"firstLeadingBit":return this.builtins.FirstLeadingBit(e,t);case"firstTrailingBit":return this.builtins.FirstTrailingBit(e,t);case"floor":return this.builtins.Floor(e,t);case"fma":return this.builtins.Fma(e,t);case"fract":return this.builtins.Fract(e,t);case"frexp":return this.builtins.Frexp(e,t);case"insertBits":return this.builtins.InsertBits(e,t);case"inverseSqrt":return this.builtins.InverseSqrt(e,t);case"ldexp":return this.builtins.Ldexp(e,t);case"length":return this.builtins.Length(e,t);case"log":return this.builtins.Log(e,t);case"log2":return this.builtins.Log2(e,t);case"max":return this.builtins.Max(e,t);case"min":return this.builtins.Min(e,t);case"mix":return this.builtins.Mix(e,t);case"modf":return this.builtins.Modf(e,t);case"normalize":return this.builtins.Normalize(e,t);case"pow":return this.builtins.Pow(e,t);case"quantizeToF16":return this.builtins.QuantizeToF16(e,t);case"radians":return this.builtins.Radians(e,t);case"reflect":return this.builtins.Reflect(e,t);case"refract":return this.builtins.Refract(e,t);case"reverseBits":return this.builtins.ReverseBits(e,t);case"round":return this.builtins.Round(e,t);case"saturate":return this.builtins.Saturate(e,t);case"sign":return this.builtins.Sign(e,t);case"sin":return this.builtins.Sin(e,t);case"sinh":return this.builtins.Sinh(e,t);case"smoothStep":return this.builtins.SmoothStep(e,t);case"sqrt":return this.builtins.Sqrt(e,t);case"step":return this.builtins.Step(e,t);case"tan":return this.builtins.Tan(e,t);case"tanh":return this.builtins.Tanh(e,t);case"transpose":return this.builtins.Transpose(e,t);case"trunc":return this.builtins.Trunc(e,t);case"dpdx":return this.builtins.Dpdx(e,t);case"dpdxCoarse":return this.builtins.DpdxCoarse(e,t);case"dpdxFine":return this.builtins.DpdxFine(e,t);case"dpdy":return this.builtins.Dpdy(e,t);case"dpdyCoarse":return this.builtins.DpdyCoarse(e,t);case"dpdyFine":return this.builtins.DpdyFine(e,t);case"fwidth":return this.builtins.Fwidth(e,t);case"fwidthCoarse":return this.builtins.FwidthCoarse(e,t);case"fwidthFine":return this.builtins.FwidthFine(e,t);case"textureDimensions":return this.builtins.TextureDimensions(e,t);case"textureGather":return this.builtins.TextureGather(e,t);case"textureGatherCompare":return this.builtins.TextureGatherCompare(e,t);case"textureLoad":return this.builtins.TextureLoad(e,t);case"textureNumLayers":return this.builtins.TextureNumLayers(e,t);case"textureNumLevels":return this.builtins.TextureNumLevels(e,t);case"textureNumSamples":return this.builtins.TextureNumSamples(e,t);case"textureSample":return this.builtins.TextureSample(e,t);case"textureSampleBias":return this.builtins.TextureSampleBias(e,t);case"textureSampleCompare":return this.builtins.TextureSampleCompare(e,t);case"textureSampleCompareLevel":return this.builtins.TextureSampleCompareLevel(e,t);case"textureSampleGrad":return this.builtins.TextureSampleGrad(e,t);case"textureSampleLevel":return this.builtins.TextureSampleLevel(e,t);case"textureSampleBaseClampToEdge":return this.builtins.TextureSampleBaseClampToEdge(e,t);case"textureStore":return this.builtins.TextureStore(e,t);case"atomicLoad":return this.builtins.AtomicLoad(e,t);case"atomicStore":return this.builtins.AtomicStore(e,t);case"atomicAdd":return this.builtins.AtomicAdd(e,t);case"atomicSub":return this.builtins.AtomicSub(e,t);case"atomicMax":return this.builtins.AtomicMax(e,t);case"atomicMin":return this.builtins.AtomicMin(e,t);case"atomicAnd":return this.builtins.AtomicAnd(e,t);case"atomicOr":return this.builtins.AtomicOr(e,t);case"atomicXor":return this.builtins.AtomicXor(e,t);case"atomicExchange":return this.builtins.AtomicExchange(e,t);case"atomicCompareExchangeWeak":return this.builtins.AtomicCompareExchangeWeak(e,t);case"pack4x8snorm":return this.builtins.Pack4x8snorm(e,t);case"pack4x8unorm":return this.builtins.Pack4x8unorm(e,t);case"pack4xI8":return this.builtins.Pack4xI8(e,t);case"pack4xU8":return this.builtins.Pack4xU8(e,t);case"pack4x8Clamp":return this.builtins.Pack4x8Clamp(e,t);case"pack4xU8Clamp":return this.builtins.Pack4xU8Clamp(e,t);case"pack2x16snorm":return this.builtins.Pack2x16snorm(e,t);case"pack2x16unorm":return this.builtins.Pack2x16unorm(e,t);case"pack2x16float":return this.builtins.Pack2x16float(e,t);case"unpack4x8snorm":return this.builtins.Unpack4x8snorm(e,t);case"unpack4x8unorm":return this.builtins.Unpack4x8unorm(e,t);case"unpack4xI8":return this.builtins.Unpack4xI8(e,t);case"unpack4xU8":return this.builtins.Unpack4xU8(e,t);case"unpack2x16snorm":return this.builtins.Unpack2x16snorm(e,t);case"unpack2x16unorm":return this.builtins.Unpack2x16unorm(e,t);case"unpack2x16float":return this.builtins.Unpack2x16float(e,t);case"storageBarrier":return this.builtins.StorageBarrier(e,t);case"textureBarrier":return this.builtins.TextureBarrier(e,t);case"workgroupBarrier":return this.builtins.WorkgroupBarrier(e,t);case"workgroupUniformLoad":return this.builtins.WorkgroupUniformLoad(e,t);case"subgroupAdd":return this.builtins.SubgroupAdd(e,t);case"subgroupExclusiveAdd":return this.builtins.SubgroupExclusiveAdd(e,t);case"subgroupInclusiveAdd":return this.builtins.SubgroupInclusiveAdd(e,t);case"subgroupAll":return this.builtins.SubgroupAll(e,t);case"subgroupAnd":return this.builtins.SubgroupAnd(e,t);case"subgroupAny":return this.builtins.SubgroupAny(e,t);case"subgroupBallot":return this.builtins.SubgroupBallot(e,t);case"subgroupBroadcast":return this.builtins.SubgroupBroadcast(e,t);case"subgroupBroadcastFirst":return this.builtins.SubgroupBroadcastFirst(e,t);case"subgroupElect":return this.builtins.SubgroupElect(e,t);case"subgroupMax":return this.builtins.SubgroupMax(e,t);case"subgroupMin":return this.builtins.SubgroupMin(e,t);case"subgroupMul":return this.builtins.SubgroupMul(e,t);case"subgroupExclusiveMul":return this.builtins.SubgroupExclusiveMul(e,t);case"subgroupInclusiveMul":return this.builtins.SubgroupInclusiveMul(e,t);case"subgroupOr":return this.builtins.SubgroupOr(e,t);case"subgroupShuffle":return this.builtins.SubgroupShuffle(e,t);case"subgroupShuffleDown":return this.builtins.SubgroupShuffleDown(e,t);case"subgroupShuffleUp":return this.builtins.SubgroupShuffleUp(e,t);case"subgroupShuffleXor":return this.builtins.SubgroupShuffleXor(e,t);case"subgroupXor":return this.builtins.SubgroupXor(e,t);case"quadBroadcast":return this.builtins.QuadBroadcast(e,t);case"quadSwapDiagonal":return this.builtins.QuadSwapDiagonal(e,t);case"quadSwapX":return this.builtins.QuadSwapX(e,t);case"quadSwapY":return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const r=t.clone();for(let t=0;t<n.node.args.length;++t){const s=n.node.args[t],a=this.evalExpression(e.args[t],r);r.setVariable(s.name,a,s)}return this._execStatements(n.node.body,r)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new et(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n.getSubData(this,e.postfix,t).clone()}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),r=e.type.getTypeName(),s=$t[r];if(void 0===s)return console.error(`Invalid vec constructor ${r}. Line ${e.line}`),null;const a=[];if(e instanceof Ue)if(e.isVector){const t=e.vectorValue;for(const e of t)a.push(e)}else a.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof nt){const t=e.data;for(let e=0;e<t.length;++e){let n=t[e];a.push(n)}}else if(e instanceof et){let t=e.value;a.push(t)}}if(e.type instanceof Se&&null===e.type.format&&(e.type.format=Se.f32),0===a.length){const r=new Array(s).fill(0);return new nt(r,n).getSubData(this,e.postfix,t)}if(1===a.length)for(;a.length<s;)a.push(a[0]);return a.length<s?(console.error(`Invalid vec constructor. Line ${e.line}`),null):new nt(a.length>s?a.slice(0,s):a,n).getSubData(this,e.postfix,t)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),r=e.type.getTypeName(),s=Vt[r];if(void 0===s)return console.error(`Invalid matrix constructor ${r}. Line ${e.line}`),null;const a=[];if(e instanceof Ue)if(e.isVector){const t=e.vectorValue;for(const e of t)a.push(e)}else a.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);e instanceof nt?a.push(...e.data):e instanceof et?a.push(e.value):e instanceof rt&&a.push(...e.data)}if(n instanceof A&&null===n.format&&(n.format=this.getTypeInfo("f32")),0===a.length){const r=new Array(s[2]).fill(0);return new rt(r,n).getSubData(this,e.postfix,t)}return a.length!==s[2]?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new rt(a,n).getSubData(this,e.postfix,t)}}Ot._breakObj=new Qe(new v("BREAK",null),null),Ot._continueObj=new Qe(new v("CONTINUE",null),null),Ot._priority=new Map([["f32",0],["f16",1],["u32",2],["i32",3],["x32",3]]);class Dt{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class Bt{constructor(){this._tokens=[],this._current=0,this._currentLine=1,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new Dt,this._exec=new Ot,this._forwardTypeCount=0}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}if(this._deferArrayCountEval.length>0){for(const t of this._deferArrayCountEval){const n=t.arrayType,r=t.countNode;if(r instanceof Ce){const t=r.name,s=this._context.constants.get(t);if(s)try{const e=s.constEvaluate(this._exec);n.count=e}catch(e){}}}this._deferArrayCountEval.length=0}if(this._forwardTypeCount>0)for(const e of t)e.search(e=>{e instanceof Ye||e instanceof Ee?e.type=this._forwardType(e.type):e instanceof Le?e.format=this._forwardType(e.format):e instanceof ne||e instanceof se||e instanceof ae?e.type=this._forwardType(e.type):e instanceof Q?e.returnType=this._forwardType(e.returnType):e instanceof je&&(e.type=this._forwardType(e.type))});return t}_forwardType(e){if(e instanceof Te){const t=this._getType(e.name);if(t)return t}else e instanceof Ee?e.type=this._forwardType(e.type):e instanceof Le&&(e.format=this._forwardType(e.format));return e}_initialize(e){if(e)if("string"==typeof e){const t=new ct(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==ot.eof}_match(e){if(e instanceof it)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let r=!1;for(const t of e){if(n===t)return!0;t===ot.tokens.name&&(r=!0)}if(r){const e=ot.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===ot.tokens.name){const e=ot.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||void 0===e?void 0:e.line)&&void 0!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(ot.tokens.semicolon)&&!this._isAtEnd(););if(this._match(ot.keywords.alias)){const e=this._type_alias();return this._consume(ot.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(ot.keywords.diagnostic)){const e=this._diagnostic();return this._consume(ot.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(ot.keywords.requires)){const e=this._requires_directive();return this._consume(ot.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}if(this._match(ot.keywords.enable)){const e=this._enable_directive();return this._consume(ot.tokens.semicolon,"Expected ';'"),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(ot.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(ot.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(ot.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(ot.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(ot.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(ot.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(ot.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(ot.tokens.semicolon,"Expected ';'."),this._exec.reflection.updateAST([t]),t}if(this._check(ot.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(ot.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(ot.keywords.fn))return null;const e=this._currentLine,t=this._consume(ot.tokens.ident,"Expected function name.").toString();this._consume(ot.tokens.paren_left,"Expected '(' for function arguments.");const n=[];if(!this._check(ot.tokens.paren_right))do{if(this._check(ot.tokens.paren_right))break;const e=this._attribute(),t=this._consume(ot.tokens.name,"Expected argument name.").toString();this._consume(ot.tokens.colon,"Expected ':' for argument type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r,n.push(this._updateNode(new je(t,s,e))))}while(this._match(ot.tokens.comma));this._consume(ot.tokens.paren_right,"Expected ')' after function arguments.");let r=null;if(this._match(ot.tokens.arrow)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}const s=this._compound_statement(),a=this._currentLine;return this._updateNode(new Q(t,n,r,s,e,a),e)}_compound_statement(){const e=[];for(this._consume(ot.tokens.brace_left,"Expected '{' for block.");!this._check(ot.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(ot.tokens.brace_right,"Expected '}' for block."),e}_statement(){for(;this._match(ot.tokens.semicolon)&&!this._isAtEnd(););if(this._check(ot.tokens.attr)&&this._attribute(),this._check(ot.keywords.if))return this._if_statement();if(this._check(ot.keywords.switch))return this._switch_statement();if(this._check(ot.keywords.loop))return this._loop_statement();if(this._check(ot.keywords.for))return this._for_statement();if(this._check(ot.keywords.while))return this._while_statement();if(this._check(ot.keywords.continuing))return this._continuing_statement();if(this._check(ot.keywords.static_assert))return this._static_assert_statement();if(this._check(ot.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(ot.keywords.return))e=this._return_statement();else if(this._check([ot.keywords.var,ot.keywords.let,ot.keywords.const]))e=this._variable_statement();else if(this._match(ot.keywords.discard))e=this._updateNode(new ve);else if(this._match(ot.keywords.break)){const t=this._updateNode(new we);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t,this._check(ot.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression())}else if(this._match(ot.keywords.continue)){const t=this._updateNode(new ke);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(ot.tokens.semicolon,"Expected ';' after statement."),e}_static_assert_statement(){if(!this._match(ot.keywords.static_assert))return null;const e=this._currentLine,t=this._optional_paren_expression();return this._updateNode(new K(t),e)}_while_statement(){if(!this._match(ot.keywords.while))return null;const e=this._updateNode(new J(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(ot.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){const e=this._currentLoop.length>0?this._currentLoop[this._currentLoop.length-1].id:-1;if(!this._match(ot.keywords.continuing))return null;const t=this._currentLine,n=this._compound_statement();return this._updateNode(new ee(n,e),t)}_for_statement(){if(!this._match(ot.keywords.for))return null;this._consume(ot.tokens.paren_left,"Expected '('.");const e=this._updateNode(new te(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(ot.tokens.semicolon)?null:this._for_init(),this._consume(ot.tokens.semicolon,"Expected ';'."),e.condition=this._check(ot.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(ot.tokens.semicolon,"Expected ';'."),e.increment=this._check(ot.tokens.paren_right)?null:this._for_increment(),this._consume(ot.tokens.paren_right,"Expected ')'."),this._check(ot.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(ot.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),"Variable declaration expected.");let t=null;return this._match(ot.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new ne(e.name,e.type,e.storage,e.access,t),e.line)}if(this._match(ot.keywords.let)){const e=this._currentLine,t=this._consume(ot.tokens.name,"Expected name for let.").toString();let n=null;if(this._match(ot.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(ot.tokens.equal,"Expected '=' for let.");const r=this._short_circuit_or_expression();return this._updateNode(new se(t,n,null,null,r),e)}if(this._match(ot.keywords.const)){const e=this._currentLine,t=this._consume(ot.tokens.name,"Expected name for const.").toString();let n=null;if(this._match(ot.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}this._consume(ot.tokens.equal,"Expected '=' for const.");const r=this._short_circuit_or_expression();return null===n&&r instanceof Ue&&(n=r.type),this._updateNode(new ae(t,n,null,null,r),e)}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(ot.increment_operators))return this._current=e,null;const n=this._consume(ot.increment_operators,"Expected increment operator");return this._updateNode(new le(n.type===ot.tokens.plus_plus?ie.increment:ie.decrement,t))}_assignment_statement(){let e=null;const t=this._currentLine;if(this._check(ot.tokens.brace_right))return null;let n=this._match(ot.tokens.underscore);if(n||(e=this._unary_expression()),!n&&null==e)return null;const r=this._consume(ot.assignment_operators,"Expected assignment operator."),s=this._short_circuit_or_expression();return this._updateNode(new fe(oe.parse(r.lexeme),e,s),t)}_func_call_statement(){if(!this._check(ot.tokens.ident))return null;const e=this._currentLine,t=this._current,n=this._consume(ot.tokens.ident,"Expected function name."),r=this._argument_expression_list();return null===r?(this._current=t,null):this._updateNode(new he(n.lexeme,r),e)}_loop_statement(){if(!this._match(ot.keywords.loop))return null;this._check(ot.tokens.attr)&&this._attribute(),this._consume(ot.tokens.brace_left,"Expected '{' for loop.");const e=this._updateNode(new pe([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof ee){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(ot.tokens.brace_right,"Expected '}' for loop."),e}_switch_statement(){if(!this._match(ot.keywords.switch))return null;const e=this._updateNode(new me(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(ot.tokens.attr)&&this._attribute(),this._consume(ot.tokens.brace_left,"Expected '{' for switch."),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),"Expected 'case' or 'default'.");return this._consume(ot.tokens.brace_right,"Expected '}' for switch."),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([ot.keywords.default,ot.keywords.case]);){if(this._match(ot.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof He){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");t=!0;break}this._match(ot.tokens.colon),this._check(ot.tokens.attr)&&this._attribute(),this._consume(ot.tokens.brace_left,"Exected '{' for switch case.");const r=this._case_body();this._consume(ot.tokens.brace_right,"Exected '}' for switch case."),e.push(this._updateNode(new Re(n,r)))}if(this._match(ot.keywords.default)){if(t)throw this._error(this._previous(),"Multiple default cases in switch statement.");this._match(ot.tokens.colon),this._check(ot.tokens.attr)&&this._attribute(),this._consume(ot.tokens.brace_left,"Exected '{' for switch default.");const n=this._case_body();this._consume(ot.tokens.brace_right,"Exected '}' for switch default."),e.push(this._updateNode(new Ge(n)))}}return e}_case_selectors(){const e=[];for(this._match(ot.keywords.default)?e.push(this._updateNode(new He)):e.push(this._shift_expression());this._match(ot.tokens.comma);)this._match(ot.keywords.default)?e.push(this._updateNode(new He)):e.push(this._shift_expression());return e}_case_body(){if(this._match(ot.keywords.fallthrough))return this._consume(ot.tokens.semicolon,"Expected ';'"),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(ot.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(ot.tokens.attr)&&this._attribute();const n=this._compound_statement();let r=[];this._match_elseif()&&(this._check(ot.tokens.attr)&&this._attribute(),r=this._elseif_statement(r));let s=null;return this._match(ot.keywords.else)&&(this._check(ot.tokens.attr)&&this._attribute(),s=this._compound_statement()),this._updateNode(new de(t,n,r,s),e)}_match_elseif(){return this._tokens[this._current].type===ot.keywords.else&&this._tokens[this._current+1].type===ot.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new Xe(t,n))),this._match_elseif()&&(this._check(ot.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(ot.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new ye(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(ot.tokens.or_or);)e=this._updateNode(new We(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(ot.tokens.and_and);)e=this._updateNode(new We(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(ot.tokens.or);)e=this._updateNode(new We(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(ot.tokens.xor);)e=this._updateNode(new We(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(ot.tokens.and);)e=this._updateNode(new We(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([ot.tokens.equal_equal,ot.tokens.not_equal])?this._updateNode(new We(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([ot.tokens.less_than,ot.tokens.greater_than,ot.tokens.less_than_equal,ot.tokens.greater_than_equal]);)e=this._updateNode(new We(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([ot.tokens.shift_left,ot.tokens.shift_right]);)e=this._updateNode(new We(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([ot.tokens.plus,ot.tokens.minus]);)e=this._updateNode(new We(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([ot.tokens.star,ot.tokens.forward_slash,ot.tokens.modulo]);)e=this._updateNode(new We(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([ot.tokens.minus,ot.tokens.bang,ot.tokens.tilde,ot.tokens.star,ot.tokens.and])?this._updateNode(new ze(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(ot.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(ot.tokens.bracket_right,"Expected ']'.");const t=this._updateNode(new Me(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(ot.tokens.period)){const e=this._consume(ot.tokens.name,"Expected member name."),t=this._postfix_expression(),n=this._updateNode(new Oe(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){return this._context.aliases.has(e)?this._context.aliases.get(e).type:this._context.structs.has(e)?this._context.structs.get(e):null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case"void":return Ie.void;case"bool":return Ie.bool;case"i32":return Ie.i32;case"u32":return Ie.u32;case"f32":return Ie.f32;case"f16":return Ie.f16;case"vec2f":return Se.vec2f;case"vec3f":return Se.vec3f;case"vec4f":return Se.vec4f;case"vec2i":return Se.vec2i;case"vec3i":return Se.vec3i;case"vec4i":return Se.vec4i;case"vec2u":return Se.vec2u;case"vec3u":return Se.vec3u;case"vec4u":return Se.vec4u;case"vec2h":return Se.vec2h;case"vec3h":return Se.vec3h;case"vec4h":return Se.vec4h;case"mat2x2f":return Se.mat2x2f;case"mat2x3f":return Se.mat2x3f;case"mat2x4f":return Se.mat2x4f;case"mat3x2f":return Se.mat3x2f;case"mat3x3f":return Se.mat3x3f;case"mat3x4f":return Se.mat3x4f;case"mat4x2f":return Se.mat4x2f;case"mat4x3f":return Se.mat4x3f;case"mat4x4f":return Se.mat4x4f;case"mat2x2h":return Se.mat2x2h;case"mat2x3h":return Se.mat2x3h;case"mat2x4h":return Se.mat2x4h;case"mat3x2h":return Se.mat3x2h;case"mat3x3h":return Se.mat3x3h;case"mat3x4h":return Se.mat3x4h;case"mat4x2h":return Se.mat4x2h;case"mat4x3h":return Se.mat4x3h;case"mat4x4h":return Se.mat4x4h;case"mat2x2i":return Se.mat2x2i;case"mat2x3i":return Se.mat2x3i;case"mat2x4i":return Se.mat2x4i;case"mat3x2i":return Se.mat3x2i;case"mat3x3i":return Se.mat3x3i;case"mat3x4i":return Se.mat3x4i;case"mat4x2i":return Se.mat4x2i;case"mat4x3i":return Se.mat4x3i;case"mat4x4i":return Se.mat4x4i;case"mat2x2u":return Se.mat2x2u;case"mat2x3u":return Se.mat2x3u;case"mat2x4u":return Se.mat2x4u;case"mat3x2u":return Se.mat3x2u;case"mat3x3u":return Se.mat3x3u;case"mat3x4u":return Se.mat3x4u;case"mat4x2u":return Se.mat4x2u;case"mat4x3u":return Se.mat4x3u;case"mat4x4u":return Se.mat4x4u}return null}_validateTypeRange(e,t){if("i32"===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if("u32"===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(ot.tokens.ident)){const e=this._previous().toString();if(this._check(ot.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new De(n,t)):this._updateNode(new Be(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new Fe(e,t.value))}return this._updateNode(new Ce(e))}if(this._match(ot.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith("i")||e.endsWith("i")?Ie.i32:e.endsWith("u")||e.endsWith("U")?Ie.u32:Ie.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new Ue(new et(n,this._exec.getTypeInfo(t)),t))}if(this._match(ot.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,Ie.u32),this._updateNode(new Ue(new et(e,this._exec.getTypeInfo(Ie.u32)),Ie.u32))}if(this._match([ot.tokens.decimal_float_literal,ot.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith("h");t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?Ie.f16:Ie.f32);const r=t?Ie.f16:Ie.f32;return this._updateNode(new Ue(new et(n,this._exec.getTypeInfo(r)),r))}if(this._match([ot.keywords.true,ot.keywords.false])){let e=this._previous().toString()===ot.keywords.true.rule;return this._updateNode(new Ue(new et(e?1:0,this._exec.getTypeInfo(Ie.bool)),Ie.bool))}if(this._check(ot.tokens.paren_left))return this._paren_expression();if(this._match(ot.keywords.bitcast)){this._consume(ot.tokens.less_than,"Expected '<'.");const e=this._type_decl();this._consume(ot.tokens.greater_than,"Expected '>'.");const t=this._paren_expression();return this._updateNode(new Ne(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new De(e,t))}_argument_expression_list(){if(!this._match(ot.tokens.paren_left))return null;const e=[];do{if(this._check(ot.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(ot.tokens.comma));return this._consume(ot.tokens.paren_right,"Expected ')' for agument list"),e}_optional_paren_expression(){this._match(ot.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(ot.tokens.paren_right),e}_paren_expression(){this._consume(ot.tokens.paren_left,"Expected '('.");const e=this._short_circuit_or_expression();return this._consume(ot.tokens.paren_right,"Expected ')'."),e}_struct_decl(){if(!this._match(ot.keywords.struct))return null;const e=this._currentLine,t=this._consume(ot.tokens.ident,"Expected name for struct.").toString();this._consume(ot.tokens.brace_left,"Expected '{' for struct body.");const n=[];for(;!this._check(ot.tokens.brace_right);){const e=this._attribute(),t=this._consume(ot.tokens.name,"Expected variable name.").toString();this._consume(ot.tokens.colon,"Expected ':' for struct member type.");const r=this._attribute(),s=this._type_decl();null!=s&&(s.attributes=r),this._check(ot.tokens.brace_right)?this._match(ot.tokens.comma):this._consume(ot.tokens.comma,"Expected ',' for struct member."),n.push(this._updateNode(new Ye(t,s,e)))}this._consume(ot.tokens.brace_right,"Expected '}' after struct body.");const r=this._currentLine,s=this._updateNode(new Ae(t,n,e,r),e);return this._context.structs.set(t,s),s}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(ot.tokens.equal)){const t=this._const_expression();e.value=t}if(null!==e.type&&e.value instanceof Ue){if("x32"!==e.value.type.name&&e.type.getTypeName()!==e.value.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`);e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else null===e.type&&e.value instanceof Ue&&(e.type="x32"===e.value.type.name?Ie.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(ot.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(ot.keywords.const))return null;const t=this._consume(ot.tokens.name,"Expected variable name"),n=this._currentLine;let r=null;if(this._match(ot.tokens.colon)){const e=this._attribute();r=this._type_decl(),null!=r&&(r.attributes=e)}let s=null;this._consume(ot.tokens.equal,"const declarations require an assignment");const a=this._short_circuit_or_expression();try{let e=[Ie.f32],n=a.constEvaluate(this._exec,e);n instanceof et&&this._validateTypeRange(n.value,e[0]),e[0]instanceof Se&&null===e[0].format&&n.typeInfo instanceof A&&null!==n.typeInfo.format&&("f16"===n.typeInfo.format.name?e[0].format=Ie.f16:"f32"===n.typeInfo.format.name?e[0].format=Ie.f32:"i32"===n.typeInfo.format.name?e[0].format=Ie.i32:"u32"===n.typeInfo.format.name?e[0].format=Ie.u32:"bool"===n.typeInfo.format.name?e[0].format=Ie.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),s=this._updateNode(new Ue(n,e[0])),this._exec.context.setVariable(t.toString(),n)}catch(e){s=a}if(null!==r&&s instanceof Ue){if("x32"!==s.type.name&&r.getTypeName()!==s.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${r.name}. Line:${this._currentLine}`);s.type=r,s.isScalar&&this._validateTypeRange(s.scalarValue,s.type)}else null===r&&s instanceof Ue&&(r=null!==(e=null==s?void 0:s.type)&&void 0!==e?e:Ie.f32,r===Ie.x32&&(r=Ie.i32));const i=this._updateNode(new ae(t.toString(),r,"","",s),n);return this._context.constants.set(i.name,i),i}_global_let_decl(){if(!this._match(ot.keywords.let))return null;const e=this._currentLine,t=this._consume(ot.tokens.name,"Expected variable name");let n=null;if(this._match(ot.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}let r=null;if(this._match(ot.tokens.equal)&&(r=this._const_expression()),null!==n&&r instanceof Ue){if("x32"!==r.type.name&&n.getTypeName()!==r.type.getTypeName())throw this._error(this._peek(),`Invalid cast from ${r.type.name} to ${n.name}. Line:${this._currentLine}`);r.type=n}else null===n&&r instanceof Ue&&(n="x32"===r.type.name?Ie.i32:r.type);return r instanceof Ue&&r.isScalar&&this._validateTypeRange(r.scalarValue,n),this._updateNode(new se(t.toString(),n,"","",r),e)}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(ot.keywords.var))return null;const e=this._currentLine;let t="",n="";this._match(ot.tokens.less_than)&&(t=this._consume(ot.storage_class,"Expected storage_class.").toString(),this._match(ot.tokens.comma)&&(n=this._consume(ot.access_mode,"Expected access_mode.").toString()),this._consume(ot.tokens.greater_than,"Expected '>'."));const r=this._consume(ot.tokens.name,"Expected variable name");let s=null;if(this._match(ot.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}return this._updateNode(new ne(r.toString(),s,t,n,null),e)}_override_decl(){if(!this._match(ot.keywords.override))return null;const e=this._consume(ot.tokens.name,"Expected variable name");let t=null;if(this._match(ot.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return this._updateNode(new re(e.toString(),t,null))}_diagnostic(){this._consume(ot.tokens.paren_left,"Expected '('");const e=this._consume(ot.tokens.ident,"Expected severity control name.");this._consume(ot.tokens.comma,"Expected ','");let t=this._consume(ot.tokens.ident,"Expected diagnostic rule name.").toString();return this._match(ot.tokens.period)&&(t+=`.${this._consume(ot.tokens.ident,"Expected diagnostic message.").toString()}`),this._consume(ot.tokens.paren_right,"Expected ')'"),this._updateNode(new _e(e.toString(),t))}_enable_directive(){const e=this._consume(ot.tokens.ident,"identity expected.");return this._updateNode(new ge(e.toString()))}_requires_directive(){const e=[this._consume(ot.tokens.ident,"identity expected.").toString()];for(;this._match(ot.tokens.comma);){const t=this._consume(ot.tokens.ident,"identity expected.");e.push(t.toString())}return this._updateNode(new xe(e))}_type_alias(){const e=this._consume(ot.tokens.ident,"identity expected.");this._consume(ot.tokens.equal,"Expected '=' for type alias.");let t=this._type_decl();if(null===t)throw this._error(this._peek(),"Expected Type for Alias.");this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new be(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([ot.tokens.ident,...ot.texel_format,ot.keywords.bool,ot.keywords.f32,ot.keywords.i32,ot.keywords.u32])){const e=this._advance().toString();if(this._context.structs.has(e))return this._context.structs.get(e);if(this._context.aliases.has(e))return this._context.aliases.get(e).type;if(!this._getType(e)){const t=this._updateNode(new Te(e));return this._forwardTypeCount++,t}return this._updateNode(new Ie(e))}let e=this._texture_sampler_types();if(e)return e;if(this._check(ot.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(ot.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(ot.tokens.comma)&&(n=this._consume(ot.access_mode,"Expected access_mode for pointer").toString()),this._consume(ot.tokens.greater_than,"Expected '>' for type.")),this._updateNode(new Se(e,t,n))}if(this._match(ot.keywords.ptr)){let e=this._previous().toString();this._consume(ot.tokens.less_than,"Expected '<' for pointer.");const t=this._consume(ot.storage_class,"Expected storage_class for pointer");this._consume(ot.tokens.comma,"Expected ',' for pointer.");const n=this._type_decl();let r=null;return this._match(ot.tokens.comma)&&(r=this._consume(ot.access_mode,"Expected access_mode for pointer").toString()),this._consume(ot.tokens.greater_than,"Expected '>' for pointer."),this._updateNode(new Ee(e,t.toString(),n,r))}const t=this._attribute();if(this._match(ot.keywords.array)){let n=null,r=-1;const s=this._previous();let a=null;if(this._match(ot.tokens.less_than)){n=this._type_decl(),this._context.aliases.has(n.name)&&(n=this._context.aliases.get(n.name).type);let t="";if(this._match(ot.tokens.comma)){a=this._shift_expression();try{t=a.constEvaluate(this._exec).toString(),a=null}catch(e){t="1"}}this._consume(ot.tokens.greater_than,"Expected '>' for array."),r=t?parseInt(t):0}const i=this._updateNode(new Le(s.toString(),t,n,r));return a&&this._deferArrayCountEval.push({arrayType:i,countNode:a}),i}return null}_texture_sampler_types(){if(this._match(ot.sampler_type))return this._updateNode(new $e(this._previous().toString(),null,null));if(this._match(ot.depth_texture_type))return this._updateNode(new $e(this._previous().toString(),null,null));if(this._match(ot.sampled_texture_type)||this._match(ot.multisampled_texture_type)){const e=this._previous();this._consume(ot.tokens.less_than,"Expected '<' for sampler type.");const t=this._type_decl();return this._consume(ot.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new $e(e.toString(),t,null))}if(this._match(ot.storage_texture_type)){const e=this._previous();this._consume(ot.tokens.less_than,"Expected '<' for sampler type.");const t=this._consume(ot.texel_format,"Invalid texel format.").toString();this._consume(ot.tokens.comma,"Expected ',' after texel format.");const n=this._consume(ot.access_mode,"Expected access mode for storage texture type.").toString();return this._consume(ot.tokens.greater_than,"Expected '>' for sampler type."),this._updateNode(new $e(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(ot.tokens.attr);){const t=this._consume(ot.attribute_name,"Expected attribute name"),n=this._updateNode(new Ze(t.toString(),null));if(this._match(ot.tokens.paren_left)){if(n.value=this._consume(ot.literal_or_ident,"Expected attribute value").toString(),this._check(ot.tokens.comma)){this._advance();do{const e=this._consume(ot.literal_or_ident,"Expected attribute value").toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(ot.tokens.comma))}this._consume(ot.tokens.paren_right,"Expected ')'")}e.push(n)}return 0==e.length?null:e}}class Ct extends kt{constructor(e){super(),e&&this.update(e)}update(e){const t=(new Bt).parse(e);this.updateAST(t)}}function Ft(e,t,n){if(!t)return[];const r=function(e,t,n){const{entryPoint:r}=t;if(r){const t=e.entryPoints[r];return t&&t.stage===n?t:void 0}return Object.values(e.entryPoints).filter(e=>e.stage===n)[0]}(e,t,n);return r?.resources||[]}const Ut=(e,t)=>Math.sign(e.binding-t.binding);function Nt(e,t){return Object.fromEntries(t.map(t=>{const n=function(e,t,n){switch(t.resourceType){case S.Uniform:case S.Storage:case S.StorageTexture:return jt(e,t.type,n);default:return{size:0,type:t.type.name}}}(e,t,0);return[t.name,{typeDefinition:n,group:t.group,binding:t.binding,size:n.size}]}))}function Mt(e,t,n){const r=Object.fromEntries(t.members.map(t=>[t.name,{offset:t.offset,type:jt(e,t.type,0)}]));return{fields:r,size:t.size,offset:n}}function Pt(e){if(e.name.includes("depth"))return"depth";switch(e.format?.name){case"f32":return"float";case"i32":return"sint";case"u32":return"uint";default:throw new Error("unknown texture sample type")}}function zt(e){return e.name.includes("2d_array")?"2d-array":e.name.includes("cube_array")?"cube-array":e.name.includes("3d")?"3d":e.name.includes("1d")?"1d":e.name.includes("cube")?"cube":"2d"}function Wt(e){switch(e.access){case"read":return"read-only";case"write":return"write-only";case"read_write":return"read-write";default:throw new Error("unknonw storage texture access")}}function qt(e){return e.name.endsWith("_comparison")?"comparison":"filtering"}function Ht(e,t){const{binding:n,access:r,type:s}=e;switch(e.resourceType){case S.Uniform:return{binding:n,visibility:t,buffer:{...e.size&&{minBindingSize:e.size}}};case S.Storage:return{binding:n,visibility:t,buffer:{type:""===r||"read"===r?"read-only-storage":"storage",...e.size&&{minBindingSize:e.size}}};case S.Texture:{if("texture_external"===s.name)return{binding:n,visibility:t,externalTexture:{}};const e=s.name.includes("multisampled");return{binding:n,visibility:t,texture:{sampleType:Pt(s),viewDimension:zt(s),multisampled:e}}}case S.Sampler:return{binding:n,visibility:t,sampler:{type:qt(s)}};case S.StorageTexture:return{binding:n,visibility:t,storageTexture:{access:Wt(s),format:s.format.name,viewDimension:zt(s)}};default:throw new Error("unknown resource type")}}function Rt(e,t){const n={};for(const r of e)n[r.name]={stage:t,resources:r.resources.map(e=>{const{name:n,group:r}=e;return{name:n,group:r,entry:Ht(e,t)}})};return n}function Gt(e,t=""){if(!e)throw new Error(t)}function jt(e,t,n){if(t.isArray){Gt(!t.isStruct,"struct array is invalid"),Gt(!t.isStruct,"template array is invalid");const r=t;return{size:r.size,elementType:jt(e,r.format,n),numElements:r.count}}if(t.isStruct){Gt(!t.isTemplate,"template struct is invalid");return Mt(e,t,n)}{const e=t,n=t.isTemplate?`${e.name}<${e.format.name}>`:t.name;return{size:t.size,type:n}}}function Xt(e,t){switch(e){case"1d":return"1d";case"3d":return"3d";default:return t>1?"2d-array":"2d"}}function Yt(e){return Array.isArray(e)||a(e)?[...e,1,1].slice(0,3):function(e){return[e.width,e.height||1,e.depthOrArrayLayers||1]}(e)}function Zt(e,t){const n=Yt(e),r=Math.max(...n.slice(0,"3d"===t?3:2));return 1+Math.log2(r)|0}const Qt=new WeakMap;function Kt(e,t,n){let r=Qt.get(e);r||(r={pipelineByFormatAndViewDimension:{},moduleByViewDimension:{}},Qt.set(e,r));let{sampler:s,module:a}=r;const{pipelineByFormatAndViewDimension:i}=r;n=e.features.has("core-features-and-limits")?"2d-array":n??Xt(t.dimension,t.depthOrArrayLayers),a||(a=e.createShaderModule({label:`mip level generation for ${n}`,code:"\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n          @location(1) @interpolate(flat, either) baseArrayLayer: u32,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32,\n          @builtin(instance_index) baseArrayLayer: u32,\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          vsOutput.baseArrayLayer = baseArrayLayer;\n          return vsOutput;\n        }\n\n        @group(0) @binding(0) var ourSampler: sampler;\n\n        @group(0) @binding(1) var ourTexture2d: texture_2d<f32>;\n        @fragment fn fs2d(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(ourTexture2d, ourSampler, fsInput.texcoord);\n        }\n\n        @group(0) @binding(1) var ourTexture2dArray: texture_2d_array<f32>;\n        @fragment fn fs2darray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTexture2dArray,\n            ourSampler,\n            fsInput.texcoord,\n            fsInput.baseArrayLayer);\n        }\n\n        @group(0) @binding(1) var ourTextureCube: texture_cube<f32>;\n        @fragment fn fscube(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCube,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1));\n        }\n\n        @group(0) @binding(1) var ourTextureCubeArray: texture_cube_array<f32>;\n        @fragment fn fscubearray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCubeArray,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1), fsInput.baseArrayLayer);\n        }\n      "}),s=e.createSampler({minFilter:"linear",magFilter:"linear"}),Object.assign(r,{sampler:s,module:a}));const o=`${t.format}.${n}`;if(!i[o]){const r=`fs${n.replace(/[\W]/,"")}`;i[o]=e.createRenderPipeline({label:`mip level generator pipeline for ${n}`,layout:"auto",vertex:{module:a},fragment:{module:a,entryPoint:r,targets:[{format:t.format}]}})}const u=i[o],c=e.createCommandEncoder({label:"mip gen encoder"});for(let r=1;r<t.mipLevelCount;++r)for(let a=0;a<t.depthOrArrayLayers;++a){const i=e.createBindGroup({layout:u.getBindGroupLayout(0),entries:[{binding:0,resource:s},{binding:1,resource:t.createView({dimension:n,baseMipLevel:r-1,mipLevelCount:1})}]}),o={label:"mip gen renderPass",colorAttachments:[{view:t.createView({dimension:"2d",baseMipLevel:r,mipLevelCount:1,baseArrayLayer:a,arrayLayerCount:1}),loadOp:"clear",storeOp:"store"}]},l=c.beginRenderPass(o);l.setPipeline(u),l.setBindGroup(0,i),l.draw(3,1,0,a),l.end()}const l=c.finish();e.queue.submit([l])}const Jt=new Map([[Int8Array,{formats:["sint8","snorm8"],defaultForType:1}],[Uint8Array,{formats:["uint8","unorm8"],defaultForType:1}],[Int16Array,{formats:["sint16","snorm16"],defaultForType:1}],[Uint16Array,{formats:["uint16","unorm16"],defaultForType:1}],[Int32Array,{formats:["sint32","snorm32"],defaultForType:0}],[Uint32Array,{formats:["uint32","unorm32"],defaultForType:0}],[Float16Array,{formats:["float16","float16"],defaultForType:0}],[Float32Array,{formats:["float32","float32"],defaultForType:0}]]),en=new Map([...Jt.entries()].map(([e,{formats:[t,n]}])=>[[t,e],[n,e]]).flat());function tn(e){return"indices"===e}function nn(e,t){if(a(e))return e;let n=e;if(a(n.data))return n.data;(Array.isArray(e)||"number"==typeof e)&&(n={data:e});let r=n.type;return r||(r=tn(t)?Uint32Array:Float32Array),new r(n.data)}const rn=[{re:/coord|texture|uv/i,numComponents:2},{re:/color|colour/i,numComponents:4}];function sn(e,t){const n=function(e){for(const{re:t,numComponents:n}of rn)if(t.test(e))return n;return 3}(e);if(t%n>0)throw new Error(`Can not guess numComponents for attribute '${e}'. Tried ${n} but ${t} values is not evenly divisible by ${n}. You should specify it.`);return n}function an(e,t){return e.numComponents||sn(t,function(e){return e.length?e:e.data}(e).length)}const on=/(\w+)(?:x(\d))$/;function un(e){const t=on.exec(e),[n,r]=t?[t[1],parseInt(t[2])]:[e,1];return{Type:en.get(n),numComponents:r}}function cn(e,t){return new(0,Object.getPrototypeOf(e).constructor)(t)}function ln(e,t={}){const n=void 0===t.interleave||t.interleave,r=t.stepMode||"vertex",s=t.shaderLocation?Array.isArray(t.shaderLocation)?t.shaderLocation:[t.shaderLocation]:[0];let a=0;const i=[],o=[],u=[];return Object.keys(e).filter(e=>!tn(e)).forEach(t=>{const c=e[t],l=nn(c,t),f=an(c,t),h=f/4%1==0?4:f/3%1==0?3:4;for(let e=0;e<f;e+=h){const t=Math.min(h,f-e),n=a;a+=t*l.BYTES_PER_ELEMENT;const{defaultForType:r,formats:i}=Jt.get(Object.getPrototypeOf(l).constructor),p=c.normalize,m=`${i[void 0===p?r:p?1:0]}${t>1?`x${t}`:""}`,d=s.shift();0===s.length&&s.push(d+1),o.push({offset:n,format:m,shaderLocation:d}),u.push({data:l,offset:e,stride:f})}n||(i.push({stepMode:r,arrayStride:a,attributes:o.slice()}),a=0,o.length=0)}),o.length&&i.push({stepMode:r,arrayStride:a,attributes:o}),{bufferLayouts:i,typedArrays:u}}function fn(e,t){return a(e)?{data:e,offset:0,stride:t}:e}function hn(e,t,n,r){const s=new Map;e.forEach((e,a)=>{const{offset:i,format:o}=e,{numComponents:u}=un(o),{data:c,offset:l,stride:f}=fn(t[a],u),h=(e=>{const t=Object.getPrototypeOf(e).constructor,n=s.get(t);if(n)return n;const a=new t(r);return s.set(t,a),a})(c);for(let e=0;e<c.length;e+=f){const t=(i+e/f*n)/h.BYTES_PER_ELEMENT,r=e+l,s=c.subarray(r,r+u);h.set(s,t)}})}function pn(e,t,n=0){t.buffers.forEach((t,r)=>{e.setVertexBuffer(n+r,t)}),t.indexBuffer&&e.setIndexBuffer(t.indexBuffer,t.indexFormat)}const mn={"rgba8unorm-srgb":[1,1,4,4,Uint8Array],"bgra8unorm-srgb":[1,1,4,4,Uint8Array],rgb10a2uint:[1,1,4,1,Uint32Array],rgb10a2unorm:[1,1,4,1,Uint32Array],rg11b10ufloat:[1,1,4,1,Uint32Array],rgb9e5ufloat:[1,1,4,1,Uint32Array],stencil8:[1,1,1,1,Uint8Array],depth16unorm:[1,1,2,1,Uint16Array],depth32float:[1,1,4,1,Float32Array],"depth24plus-stencil8":[],"depth32float-stencil8":[],"bc1-rgba-unorm":[4,4,8],"bc1-rgba-unorm-srgb":[4,4,8],"bc2-rgba-unorm":[4,4,16],"bc2-rgba-unorm-srgb":[4,4,16],"bc3-rgba-unorm":[4,4,16],"bc3-rgba-unorm-srgb":[4,4,16],"bc4-r-unorm":[4,4,8],"bc4-r-snorm":[4,4,8],"bc5-rg-unorm":[4,4,16],"bc5-rg-snorm":[4,4,16],"bc6h-rgb-ufloat":[4,4,16],"bc6h-rgb-float":[4,4,16],"bc7-rgba-unorm":[4,4,16],"bc7-rgba-unorm-srgb":[4,4,16],"etc2-rgb8unorm":[4,4,8],"etc2-rgb8unorm-srgb":[4,4,8],"etc2-rgb8a1unorm":[4,4,8],"etc2-rgb8a1unorm-srgb":[4,4,8],"etc2-rgba8unorm":[4,4,16],"etc2-rgba8unorm-srgb":[4,4,16],"eac-r11unorm":[4,4,8],"eac-r11snorm":[4,4,8],"eac-rg11unorm":[4,4,16],"eac-rg11snorm":[4,4,16],"astc-4x4-unorm":[4,4,16],"astc-4x4-unorm-srgb":[4,4,16],"astc-5x4-unorm":[5,4,16],"astc-5x4-unorm-srgb":[5,4,16],"astc-5x5-unorm":[5,5,16],"astc-5x5-unorm-srgb":[5,5,16],"astc-6x5-unorm":[6,5,16],"astc-6x5-unorm-srgb":[6,5,16],"astc-6x6-unorm":[6,6,16],"astc-6x6-unorm-srgb":[6,6,16],"astc-8x5-unorm":[8,5,16],"astc-8x5-unorm-srgb":[8,5,16],"astc-8x6-unorm":[8,6,16],"astc-8x6-unorm-srgb":[8,6,16],"astc-8x8-unorm":[8,8,16],"astc-8x8-unorm-srgb":[8,8,16],"astc-10x5-unorm":[10,5,16],"astc-10x5-unorm-srgb":[10,5,16],"astc-10x6-unorm":[10,6,16],"astc-10x6-unorm-srgb":[10,6,16],"astc-10x8-unorm":[10,8,16],"astc-10x8-unorm-srgb":[10,8,16],"astc-10x10-unorm":[10,10,16],"astc-10x10-unorm-srgb":[10,10,16],"astc-12x10-unorm":[12,10,16],"astc-12x10-unorm-srgb":[12,10,16],"astc-12x12-unorm":[12,12,16],"astc-12x12-unorm-srgb":[12,12,16]},dn={"8snorm":Int8Array,"8unorm":Uint8Array,"8sint":Int8Array,"8uint":Uint8Array,"16snorm":Int16Array,"16unorm":Uint16Array,"16sint":Int16Array,"16uint":Uint16Array,"32snorm":Int32Array,"32unorm":Uint32Array,"32sint":Int32Array,"32uint":Uint32Array,"16float":Float16Array,"32float":Float32Array},yn=/([a-z]+)(\d+)([a-z]+)/;function gn(e){const t=mn[e];if(t){const[n,r,s,a=1,i=Uint8Array]=t;if(void 0===s)throw new Error(`Format ${e} is not supported`);return{blockWidth:n,blockHeight:r,bytesPerBlock:s,unitsPerElement:a,Type:i}}const[,n,r,s]=yn.exec(e);return{blockWidth:1,blockHeight:1,bytesPerBlock:n.length*(parseInt(r)/8),unitsPerElement:1,Type:dn[`${r}${s}`]??Uint8Array}}function xn(e){return a(e)||Array.isArray(e)||function(e){const t=e;return a(t.data)||Array.isArray(t.data)}(e)}function _n(e,t){return[e.width,e.height,e.depthOrArrayLayers].map((n,r)=>r<3||"3d"!==e.dimension?Math.max(1,Math.floor(n/2**t)):e.depthOrArrayLayers)}function bn(e,t,n,r){const i=function(e,t){if(a(e))return e;const{Type:n}=gn(t);return new n(e)}(n.data||n,t.format);let o=0,u=0,c=r.mipLevel??0;for(;o<i.byteLength;){const n=_n(t,c),{blockWidth:a,blockHeight:l,bytesPerBlock:f}=gn(t.format),h=Math.ceil(n[0]/a),p=Math.ceil(n[1]/l),m=h*f*p,d="3d"===t.dimension?i.byteLength/m:1;n[0]=h*a,n[1]=p*l,n[2]=d;const y=s(r.origin??[0,0,0],[0,0,u]);e.queue.writeTexture({texture:t,origin:y,mipLevel:c},i,{bytesPerRow:f*h,rowsPerImage:p,offset:o},n);o+=n[2]*m,++c,c===t.mipLevelCount&&(c=r.mipLevel??0,++u)}}function vn(e,t,n,r={}){let s;if(n.forEach((n,a)=>{const i=[0,0,a+(r.baseArrayLayer||0)];if(xn(n))bn(e,t,n,{origin:i});else{const a=n;let o=t,u=i;"3d"===t.dimension&&(s=s??e.createTexture({format:t.format,usage:t.usage|GPUTextureUsage.COPY_SRC,size:[t.width,t.height,1]}),o=s,u=[0,0,0]);const{flipY:c,premultipliedAlpha:l,colorSpace:f}=r;if(e.queue.copyExternalImageToTexture({source:a,flipY:c},{texture:o,premultipliedAlpha:l,colorSpace:f,origin:u},wn(a,r)),s){const n=e.createCommandEncoder();n.copyTextureToTexture({texture:s},{texture:t,origin:i},s),e.queue.submit([n.finish()])}}}),s&&s.destroy(),r.mips){const n=r.viewDimension??Xt(t.dimension,t.depthOrArrayLayers);Kt(e,t,n)}}function wn(e,t){if("videoWidth"in e&&"videoHeight"in e)return[e.videoWidth,e.videoHeight,1];{const r=e;let{width:s,height:i}=r;if(s>0&&i>0&&!xn(e))return[s,i,1];if(t.size){let e;if(Array.isArray(t.size)?[s,i,e]=t.size:(s=t.size.width,i=t.size.height,e=t.size.depthOrArrayLayers),s>0&&i>0)return function(e){if(!e)return[1,1,1];if(n(e)){const[t,n=1,r=1]=[...e];return[t,n,r]}const{width:t=1,height:r=1,depthOrArrayLayers:s=1}=e;return[t,r,s]}([s,i,e])}const o=t.format||"rgba8unorm",{bytesPerBlock:u,Type:c}=gn(o),l=a(e)||Array.isArray(e)?e:e.data;return function(e,t,n,r="2d"){if(n%1!=0)throw new Error("can't guess dimensions");if(e||t){if(t){if(!e&&(e=n/t)%1)throw new Error("can't guess dimensions")}else if((t=n/e)%1)throw new Error("can't guess dimensions")}else{const s=Math.sqrt(n/("cube"===r?6:1));s%1==0?(e=s,t=s):(e=n,t=1)}const s=n/e/t;if(s%1)throw new Error("can't guess dimensions");return[e,t,s]}(s,i,(a(l)?l.byteLength:l.length*c.BYTES_PER_ELEMENT)/u)}}function kn(e,t,n={}){const r=wn(t[0],n);r[2]=r[2]>1?r[2]:t.length;const s=n.viewDimension??Xt(n.dimension,r[2]),a=function(e){switch(e){case"1d":return"1d";case"3d":return"3d";default:return"2d"}}(s),i=n.format??"rgba8unorm",{blockWidth:o,blockHeight:u}=gn(i),c=o>1||u>1,l=e.createTexture({dimension:a,textureBindingViewDimension:s,format:i,mipLevelCount:n.mipLevelCount?n.mipLevelCount:n.mips?Zt(r):1,size:r,usage:(n.usage??0)|GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|(c?0:GPUTextureUsage.RENDER_ATTACHMENT)});return vn(e,l,t,n),l}async function In(e,t={}){const n=await fetch(e),r=await n.blob(),s={...t,...void 0!==t.colorSpaceConversion&&{colorSpaceConversion:"none"}};return await createImageBitmap(r,s)}async function Tn(e,t,n={}){return kn(e,await Promise.all(t.map(e=>In(e))),n)}class An{typedArray;cursor=0;numComponents;constructor(e,t){this.typedArray=e,this.numComponents=t}get numElements(){return this.typedArray.length/this.numComponents}push(...e){for(const t of e)if(Array.isArray(t)||a(t)){const t=e;this.typedArray.set(t,this.cursor),this.cursor+=t.length}else this.typedArray[this.cursor++]=t}reset(e=0){this.cursor=e}}function Sn(e,t,n){return new An(new n(e*t),e)}const En=[[3,7,5,1],[6,2,0,4],[6,7,3,2],[0,1,5,4],[7,6,4,5],[2,3,1,0]];function Ln({bottomRadius:e=1,topRadius:t=0,height:n=1,radialSubdivisions:r=24,verticalSubdivisions:s=1,topCap:a=!0,bottomCap:i=!0}={}){if(r<3)throw new Error("radialSubdivisions must be 3 or greater");if(s<1)throw new Error("verticalSubdivisions must be 1 or greater");const o=(a?2:0)+(i?2:0),u=(r+1)*(s+1+o),c=Sn(3,u,Float32Array),l=Sn(3,u,Float32Array),f=Sn(2,u,Float32Array),h=Sn(3,r*(s+o/2)*2,Uint16Array),p=r+1,m=Math.atan2(e-t,n),d=Math.cos(m),y=Math.sin(m),g=s+(i?2:0);for(let i=a?-2:0;i<=g;++i){let a,o=i/s,u=n*o;i<0?(u=0,o=1,a=e):i>s?(u=n,o=1,a=t):a=e+i/s*(t-e),-2!==i&&i!==s+2||(a=0,o=0),u-=n/2;for(let e=0;e<p;++e){const t=Math.sin(e*Math.PI*2/r),n=Math.cos(e*Math.PI*2/r);c.push(t*a,u,n*a),i<0?l.push(0,-1,0):i>s?l.push(0,1,0):0===a?l.push(0,0,0):l.push(t*d,y,n*d),f.push(e/r,1-o)}}for(let e=0;e<s+o;++e)if(!(1===e&&a||e===s+o-2&&i))for(let t=0;t<r;++t)h.push(p*(e+0)+0+t,p*(e+0)+1+t,p*(e+1)+1+t),h.push(p*(e+0)+0+t,p*(e+1)+1+t,p*(e+1)+0+t);return{position:c.typedArray,normal:l.typedArray,texcoord:f.typedArray,indices:h.typedArray}}function $n(e,t=[]){t=t||[];const n=[];for(let r=0;r<e.length;r+=4){const s=e[r],a=e.slice(r+1,r+4);a.push(...t);for(let e=0;e<s;++e)n.push(...a)}return n}function Vn(e){return"indices"!==e}const On=([e,t,n])=>{const r=e*e+t*t+n*n;return new Float32Array([e/r,t/r,n/r])},Dn=(e,t)=>{const n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=e[r]-t[r];return n},Bn=(e,t)=>{const n=new Float32Array(e.length);return n[0]=e[1]*t[2]-e[2]*t[1],n[1]=e[2]*t[0]-e[0]*t[2],n[2]=e[0]*t[1]-e[1]*t[0],n};var Cn={__proto__:null,TypedArrayWrapper:An,create3DFVertices:function(){const e=[0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0],t=$n([18,0,0,1,18,0,0,-1,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,-1,0,6,-1,0,0]),n=$n([18,200,70,120,18,80,70,200,6,70,200,210,6,200,200,70,6,210,100,70,6,210,160,70,6,70,180,210,6,100,70,210,6,76,210,100,6,140,210,80,6,90,130,110,6,160,160,220],[255]),r=e.length/3,s={position:Sn(3,r,Float32Array),texcoord:Sn(2,r,Float32Array),normal:Sn(3,r,Float32Array),color:Sn(4,r,Uint8Array),indices:Sn(3,r/3,Uint16Array)};s.position.push(e),s.texcoord.push([.22,.19,.22,.79,.34,.19,.22,.79,.34,.79,.34,.19,.34,.19,.34,.31,.62,.19,.34,.31,.62,.31,.62,.19,.34,.43,.34,.55,.49,.43,.34,.55,.49,.55,.49,.43,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0]),s.normal.push(t),s.color.push(n);for(let e=0;e<r;++e)s.indices.push(e);return Object.fromEntries(Object.entries(s).map(([e,t])=>[e,t.typedArray]))},createCubeVertices:function({size:e=1}={}){const t=e/2,n=[[-t,-t,-t],[+t,-t,-t],[-t,+t,-t],[+t,+t,-t],[-t,-t,+t],[+t,-t,+t],[-t,+t,+t],[+t,+t,+t]],r=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],s=[[1,0],[0,0],[0,1],[1,1]],a=Sn(3,24,Float32Array),i=Sn(3,24,Float32Array),o=Sn(2,24,Float32Array),u=Sn(3,12,Uint16Array);for(let e=0;e<6;++e){const t=En[e];for(let u=0;u<4;++u){const c=n[t[u]],l=r[e],f=s[u];a.push(...c),i.push(...l),o.push(...f)}const c=4*e;u.push(c+0,c+1,c+2),u.push(c+0,c+2,c+3)}return{position:a.typedArray,normal:i.typedArray,texcoord:o.typedArray,indices:u.typedArray}},createCylinderVertices:function({radius:e=1,height:t=1,radialSubdivisions:n=24,verticalSubdivisions:r=1,topCap:s=!0,bottomCap:a=!0}={}){return Ln({bottomRadius:e,topRadius:e,height:t,radialSubdivisions:n,verticalSubdivisions:r,topCap:s,bottomCap:a})},createDiscVertices:function({radius:e=1,divisions:t=24,stacks:n=1,innerRadius:r=0,stackPower:s=1}={}){if(t<3)throw new Error("divisions must be at least 3");const a=(t+1)*(n+1),i=Sn(3,a,Float32Array),o=Sn(3,a,Float32Array),u=Sn(2,a,Float32Array),c=Sn(3,n*t*2,Uint16Array);let l=0;const f=e-r,h=t+1;for(let e=0;e<=n;++e){const a=r+f*Math.pow(e/n,s);for(let r=0;r<=t;++r){const s=2*Math.PI*r/t,f=a*Math.cos(s),p=a*Math.sin(s);if(i.push(f,0,p),o.push(0,1,0),u.push(1-r/t,e/n),e>0&&r!==t){const e=l+(r+1),t=l+r,n=l+r-h,s=l+(r+1)-h;c.push(e,t,n),c.push(e,n,s)}}l+=t+1}return{position:i.typedArray,normal:o.typedArray,texcoord:u.typedArray,indices:c.typedArray}},createPlaneVertices:function({width:e=1,depth:t=1,subdivisionsWidth:n=1,subdivisionsDepth:r=1}={}){const s=(n+1)*(r+1),a=Sn(3,s,Float32Array),i=Sn(3,s,Float32Array),o=Sn(2,s,Float32Array);for(let s=0;s<=r;s++)for(let u=0;u<=n;u++){const c=u/n,l=s/r;a.push(e*c-.5*e,0,t*l-.5*t),i.push(0,1,0),o.push(c,l)}const u=n+1,c=Sn(3,n*r*2,Uint16Array);for(let e=0;e<r;e++)for(let t=0;t<n;t++)c.push((e+0)*u+t,(e+1)*u+t,(e+0)*u+t+1),c.push((e+1)*u+t,(e+1)*u+t+1,(e+0)*u+t+1);return{position:a.typedArray,normal:i.typedArray,texcoord:o.typedArray,indices:c.typedArray}},createSphereVertices:function({radius:e=1,subdivisionsAxis:t=24,subdivisionsHeight:n=12,startLatitudeInRadians:r=0,endLatitudeInRadians:s=Math.PI,startLongitudeInRadians:a=0,endLongitudeInRadians:i=2*Math.PI}={}){if(t<=0||n<=0)throw new Error("subdivisionAxis and subdivisionHeight must be > 0");const o=s-r,u=i-a,c=(t+1)*(n+1),l=Sn(3,c,Float32Array),f=Sn(3,c,Float32Array),h=Sn(2,c,Float32Array);for(let s=0;s<=n;s++)for(let i=0;i<=t;i++){const c=i/t,p=s/n,m=u*c+a,d=o*p+r,y=Math.sin(m),g=Math.cos(m),x=Math.sin(d),_=g*x,b=Math.cos(d),v=y*x;l.push(e*_,e*b,e*v),f.push(_,b,v),h.push(1-c,p)}const p=t+1,m=Sn(3,t*n*2,Uint16Array);for(let e=0;e<t;e++)for(let t=0;t<n;t++)m.push((t+0)*p+e,(t+0)*p+e+1,(t+1)*p+e),m.push((t+1)*p+e,(t+0)*p+e+1,(t+1)*p+e+1);return{position:l.typedArray,normal:f.typedArray,texcoord:h.typedArray,indices:m.typedArray}},createTorusVertices:function({radius:e=1,thickness:t=.24,radialSubdivisions:n=24,bodySubdivisions:r=12,startAngle:s=0,endAngle:a=2*Math.PI}={}){if(n<3)throw new Error("radialSubdivisions must be 3 or greater");if(r<3)throw new Error("verticalSubdivisions must be 3 or greater");const i=a-s,o=n+1,u=r+1,c=o*u,l=Sn(3,c,Float32Array),f=Sn(3,c,Float32Array),h=Sn(2,c,Float32Array),p=Sn(3,n*r*2,Uint16Array);for(let a=0;a<u;++a){const u=a/r,c=u*Math.PI*2,p=Math.sin(c),m=e+p*t,d=Math.cos(c),y=d*t;for(let e=0;e<o;++e){const t=e/n,r=s+t*i,a=Math.sin(r),o=Math.cos(r),c=a*m,g=o*m,x=a*p,_=o*p;l.push(c,y,g),f.push(x,d,_),h.push(t,1-u)}}for(let e=0;e<r;++e)for(let t=0;t<n;++t){const n=1+t,r=1+e;p.push(o*e+t,o*r+t,o*e+n),p.push(o*r+t,o*r+n,o*e+n)}return{position:l.typedArray,normal:f.typedArray,texcoord:h.typedArray,indices:p.typedArray}},createTruncatedConeVertices:Ln,createXYQuadVertices:function({size:e=2,xOffset:t=0,yOffset:n=0}={}){const r=.5*e;return{position:{numComponents:2,data:[t+-1*r,n+-1*r,t+1*r,n+-1*r,t+-1*r,n+1*r,t+1*r,n+1*r]},normal:[0,0,1,0,0,1,0,0,1,0,0,1],texcoord:[0,0,1,0,0,1,1,1],indices:[0,1,2,2,1,3]}},deindex:function(e){const t=e.indices,n={},r=nn(t,"indices"),s=r.length;return Object.keys(e).filter(Vn).forEach(function(t){const a=nn(e[t],t),i=an(a,t),o=function(e,t,n){const r=new(0,n.constructor)(e*t);return new An(r,e)}(i,s,a);for(let e=0;e<s;++e){const t=r[e]*i;for(let e=0;e<i;++e)o.push(a[t+e])}n[t]=o.typedArray}),n},generateTriangleNormals:function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;n+=9){const r=e.subarray(n,n+3),s=e.subarray(n+3,n+6),a=e.subarray(n+6,n+9),i=On(Dn(r,s)),o=On(Dn(r,a)),u=Bn(i,o);t.set(u,n),t.set(u,n+3),t.set(u,n+6)}return t}};e.TypedArrayViewGenerator=class{arrayBuffer;byteOffset;constructor(e){this.arrayBuffer=new ArrayBuffer(e),this.byteOffset=0}align(e){this.byteOffset=t(this.byteOffset,e)}pad(e){this.byteOffset+=e}getView(e,t){const n=new e(this.arrayBuffer,this.byteOffset,t);return this.byteOffset+=n.byteLength,n}},e.copySourceToTexture=function(e,t,n,r={}){vn(e,t,[n],r)},e.copySourcesToTexture=vn,e.createBufferLayoutsFromArrays=ln,e.createBuffersAndAttributesFromArrays=function(e,t,n={}){const r=n.usage||0,{bufferLayouts:s,typedArrays:a}=ln(t,n),i=[];let o=-1,u=0;for(const{attributes:t,arrayStride:n}of s){const s=t,c=s[0],{numComponents:l}=un(c.format),{data:f,stride:h}=fn(a[u],l);o<0&&(o=f.length/h);const p=n*o,m=e.createBuffer({usage:r|GPUBufferUsage.VERTEX,size:p,mappedAtCreation:!0}),d=m.getMappedRange();if(1===s.length&&n===f.BYTES_PER_ELEMENT*l){cn(f,d).set(f)}else hn(s,a.slice(u),n,d);m.unmap(),i.push(m),u+=s.length}const c={numElements:o,bufferLayouts:s,buffers:i},l=Object.entries(t).find(([e])=>tn(e));if(l){const t=nn(l[1],"indices"),n=e.createBuffer({size:t.byteLength,usage:GPUBufferUsage.INDEX|r,mappedAtCreation:!0});cn(t,n.getMappedRange()).set(t),n.unmap(),c.indexBuffer=n,c.indexFormat=t instanceof Uint16Array?"uint16":"uint32",c.numElements=t.length}return c},e.createTextureFromImage=async function(e,t,n={}){return Tn(e,[t],n)},e.createTextureFromImages=Tn,e.createTextureFromSource=function(e,t,n={}){return kn(e,[t],n)},e.createTextureFromSources=kn,e.drawArrays=function(e,t){pn(e,t),t.indexBuffer?e.drawIndexed(t.numElements):e.draw(t.numElements)},e.generateMipmap=Kt,e.getNumComponents=an,e.getSizeAndAlignmentOfUnsizedArrayElement=function(e){const t=e;return b(void 0===t.group?e:t.typeDefinition)},e.getSizeForMipFromTexture=_n,e.getSizeFromSource=wn,e.guessTextureBindingViewDimensionForTexture=Xt,e.interleaveVertexData=hn,e.isTypedArray=a,e.loadImageBitmap=In,e.makeBindGroupLayoutDescriptors=function(e,t){const n=[...Ft((e=Array.isArray(e)?e:[e])[0],t.vertex,GPUShaderStage.VERTEX),...Ft(e[e.length-1],t.fragment,GPUShaderStage.FRAGMENT),...Ft(e[0],t.compute,GPUShaderStage.COMPUTE)],r=[];for(const e of n){const t=r[e.group]||new Map;r[e.group]=t;const n=t.get(e.entry.binding);t.set(e.entry.binding,{...e.entry,visibility:e.entry.visibility|(n?.visibility||0)})}const s=r.map(e=>({entries:[...e.values()].sort(Ut)}));return s},e.makeShaderDataDefinitions=function(e){const t=new Ct(e),n=Object.fromEntries(t.structs.map(e=>[e.name,Mt(t,e,0)])),r=Nt(t,t.uniforms),s=Nt(t,t.storage.filter(e=>e.resourceType===S.Storage)),a=Nt(t,t.storage.filter(e=>e.resourceType===S.StorageTexture)),i=Nt(t,t.textures.filter(e=>"texture_external"!==e.type.name)),o=Nt(t,t.textures.filter(e=>"texture_external"===e.type.name));return{externalTextures:o,samplers:Nt(t,t.samplers),structs:n,storages:s,storageTextures:a,textures:i,uniforms:r,entryPoints:{...Rt(t.entry.vertex,GPUShaderStage.VERTEX),...Rt(t.entry.fragment,GPUShaderStage.FRAGMENT),...Rt(t.entry.compute,GPUShaderStage.COMPUTE)}}},e.makeStructuredView=function(e,t,n=0){const r=e,s=p(void 0===r.group?e:r.typeDefinition,t,n);return{...s,set(e){m(e,s.views)}}},e.makeTypedArrayFromArrayUnion=nn,e.makeTypedArrayViews=p,e.normalizeGPUExtent3D=Yt,e.numMipLevels=Zt,e.primitives=Cn,e.setIntrinsicsToView=l,e.setStructuredValues=function(e,t,n,r=0){x(e.typeDefinition,t,n,r)},e.setStructuredView=m,e.setTypedValues=x,e.setVertexAndIndexBuffers=pn,e.subarray=function(e,t,n){return e.subarray(t,t+n)}});
//# sourceMappingURL=webgpu-utils.min.js.map
