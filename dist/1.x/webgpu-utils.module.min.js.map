{"version":3,"file":"webgpu-utils.module.min.js","sources":["../../../src/utils.ts","../../../src/typed-arrays.ts","../../../src/wgsl-types.ts","../../../src/buffer-views.ts","../../node_modules/wgsl_reflect/wgsl_reflect.module.js","../../../src/data-definitions.ts","../../../src/generate-mipmap.ts","../../../src/attribute-utils.ts","../../../src/texture-utils.ts","../../../src/primitives.ts"],"sourcesContent":["export const roundUpToMultipleOf = (v: number, multiple: number) => (((v + multiple - 1) / multiple) | 0) * multiple;\n\nexport function keysOf<T extends string>(obj: { [k in T]: unknown }): readonly T[] {\n  return (Object.keys(obj) as unknown[]) as T[];\n}\n\nexport function range<T>(count: number, fn: (i: number) => T) {\n    return new Array(count).fill(0).map((_, i) => fn(i));\n}\n","import {\n    roundUpToMultipleOf,\n} from './utils.js';\n\nexport type TypedArrayConstructor =\n    | Int8ArrayConstructor\n    | Uint8ArrayConstructor\n    | Uint8ClampedArrayConstructor\n    | Int16ArrayConstructor\n    | Uint16ArrayConstructor\n    | Int32ArrayConstructor\n    | Uint32ArrayConstructor\n    | Float32ArrayConstructor\n    | Float64ArrayConstructor;\n\nexport type TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Uint8ClampedArray\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Float32Array\n    | Float64Array;\n\nexport class TypedArrayViewGenerator {\n    arrayBuffer: ArrayBuffer;\n    byteOffset: number;\n\n    constructor(sizeInBytes: number) {\n        this.arrayBuffer = new ArrayBuffer(sizeInBytes);\n        this.byteOffset = 0;\n    }\n    align(alignment: number) {\n        this.byteOffset = roundUpToMultipleOf(this.byteOffset, alignment);\n    }\n    pad(numBytes: number) {\n        this.byteOffset += numBytes;\n    }\n    getView<T extends TypedArray>(Ctor: TypedArrayConstructor, numElements: number): T {\n        const view = new Ctor(this.arrayBuffer, this.byteOffset, numElements);\n        this.byteOffset += view.byteLength;\n        return view as T;\n    }\n}\n\nexport function subarray<T extends TypedArray>(arr: TypedArray, offset: number, length: number): T {\n  return arr.subarray(offset, offset + length) as T;\n}\n\n// TODO: fix better?\nexport const isTypedArray = (arr: any) =>\n  arr && typeof arr.length === 'number' && arr.buffer instanceof ArrayBuffer && typeof arr.byteLength === 'number';\n","import {\n    keysOf,\n} from './utils.js';\nimport {\n    TypedArrayConstructor,\n} from './typed-arrays.js';\n\nexport type TypeDef = {\n    numElements: number;\n    align: number;\n    size: number;\n    type: string;\n    View: TypedArrayConstructor;\n    flatten?: boolean,\n    pad?: readonly number[];\n};\n\nconst createTypeDefs = <T extends Record<string, TypeDef>>(defs: T): { readonly [K in keyof T]: TypeDef } => defs;\n\nconst b = createTypeDefs({\n  i32: { numElements: 1, align: 4, size: 4, type: 'i32', View: Int32Array },\n  u32: { numElements: 1, align: 4, size: 4, type: 'u32', View: Uint32Array },\n  f32: { numElements: 1, align: 4, size: 4, type: 'f32', View: Float32Array },\n  f16: { numElements: 1, align: 2, size: 2, type: 'u16', View: Uint16Array },\n\n  vec2f: { numElements: 2, align:  8, size:  8, type: 'f32', View: Float32Array },\n  vec2i: { numElements: 2, align:  8, size:  8, type: 'i32', View: Int32Array },\n  vec2u: { numElements: 2, align:  8, size:  8, type: 'u32', View: Uint32Array },\n  vec2h: { numElements: 2, align:  4, size:  4, type: 'u16', View: Uint16Array },\n  vec3i: { numElements: 3, align: 16, size: 12, type: 'i32', View: Int32Array },\n  vec3u: { numElements: 3, align: 16, size: 12, type: 'u32', View: Uint32Array },\n  vec3f: { numElements: 3, align: 16, size: 12, type: 'f32', View: Float32Array },\n  vec3h: { numElements: 3, align:  8, size:  6, type: 'u16', View: Uint16Array },\n  vec4i: { numElements: 4, align: 16, size: 16, type: 'i32', View: Int32Array },\n  vec4u: { numElements: 4, align: 16, size: 16, type: 'u32', View: Uint32Array },\n  vec4f: { numElements: 4, align: 16, size: 16, type: 'f32', View: Float32Array },\n  vec4h: { numElements: 4, align:  8, size:  8, type: 'u16', View: Uint16Array },\n\n  // AlignOf(vecR)\tSizeOf(array<vecR, C>)\n  mat2x2f: { numElements:  4, align:  8, size: 16,              type: 'f32', View: Float32Array },\n  mat2x2h: { numElements:  4, align:  4, size:  8,              type: 'u16', View: Uint16Array },\n  mat3x2f: { numElements:  6, align:  8, size: 24,              type: 'f32', View: Float32Array },\n  mat3x2h: { numElements:  6, align:  4, size: 12,              type: 'u16', View: Uint16Array },\n  mat4x2f: { numElements:  8, align:  8, size: 32,              type: 'f32', View: Float32Array },\n  mat4x2h: { numElements:  8, align:  4, size: 16,              type: 'u16', View: Uint16Array },\n  mat2x3f: { numElements:  8, align: 16, size: 32, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat2x3h: { numElements:  8, align:  8, size: 16, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat3x3f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat3x3h: { numElements: 12, align:  8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat4x3f: { numElements: 16, align: 16, size: 64, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat4x3h: { numElements: 16, align:  8, size: 32, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat2x4f: { numElements:  8, align: 16, size: 32,              type: 'f32', View: Float32Array },\n  mat2x4h: { numElements:  8, align:  8, size: 16,              type: 'u16', View: Uint16Array },\n  mat3x4f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat3x4h: { numElements: 12, align:  8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat4x4f: { numElements: 16, align: 16, size: 64,              type: 'f32', View: Float32Array },\n  mat4x4h: { numElements: 16, align:  8, size: 32,              type: 'u16', View: Uint16Array },\n\n  // Note: At least as of WGSL V1 you can not create a bool for uniform or storage.\n  // You can only create one in an internal struct. But, this code generates\n  // views of structs and it needs to not fail if the struct has a bool\n  bool: { numElements: 0, align: 1, size: 0, type: 'bool', View: Uint32Array },\n} as const);\n\nexport const kWGSLTypeInfo = createTypeDefs({\n  ...b,\n\n  'atomic<i32>': b.i32,\n  'atomic<u32>': b.u32,\n\n  'vec2<i32>': b.vec2i,\n  'vec2<u32>': b.vec2u,\n  'vec2<f32>': b.vec2f,\n  'vec2<f16>': b.vec2h,\n  'vec3<i32>': b.vec3i,\n  'vec3<u32>': b.vec3u,\n  'vec3<f32>': b.vec3f,\n  'vec3<f16>': b.vec3h,\n  'vec4<i32>': b.vec4i,\n  'vec4<u32>': b.vec4u,\n  'vec4<f32>': b.vec4f,\n  'vec4<f16>': b.vec4h,\n\n  'mat2x2<f32>': b.mat2x2f,\n  'mat2x2<f16>': b.mat2x2h,\n  'mat3x2<f32>': b.mat3x2f,\n  'mat3x2<f16>': b.mat3x2h,\n  'mat4x2<f32>': b.mat4x2f,\n  'mat4x2<f16>': b.mat4x2h,\n  'mat2x3<f32>': b.mat2x3f,\n  'mat2x3<f16>': b.mat2x3h,\n  'mat3x3<f32>': b.mat3x3f,\n  'mat3x3<f16>': b.mat3x3h,\n  'mat4x3<f32>': b.mat4x3f,\n  'mat4x3<f16>': b.mat4x3h,\n  'mat2x4<f32>': b.mat2x4f,\n  'mat2x4<f16>': b.mat2x4h,\n  'mat3x4<f32>': b.mat3x4f,\n  'mat3x4<f16>': b.mat3x4h,\n  'mat4x4<f32>': b.mat4x4f,\n  'mat4x4<f16>': b.mat4x4h,\n} as const);\nexport type WGSLType = keyof typeof kWGSLTypeInfo;\nexport const kWGSLTypes: readonly WGSLType[] = keysOf(kWGSLTypeInfo);\n","import {\n    IntrinsicDefinition,\n    StructDefinition,\n    ArrayDefinition,\n    TypeDefinition,\n    VariableDefinition,\n} from './data-definitions.js';\nimport {\n    isTypedArray,\n    TypedArrayConstructor,\n    TypedArray,\n} from './typed-arrays.js';\nimport { roundUpToMultipleOf, range } from './utils.js';\nimport {\n    WGSLType,\n    kWGSLTypes,\n    kWGSLTypeInfo,\n} from './wgsl-types.js';\n\n/**\n * Set which intrinsic types to make views for.\n *\n * Example:\n *\n * Given a an array of intrinsics like this\n * `array<vec3, 200>`\n *\n * The default is to create a single `Float32Array(4 * 200)`\n * because creating 200 `Float32Array` views is not usually\n * what you want.\n *\n * If you do want individual views then you'd call\n * `setIntrinsicsToView(['vec3f'])` and now you get\n * an array of 200 `Float32Array`s.\n *\n * Note: `setIntrinsicsToView` always sets ALL types. The list you\n * pass it is the types you want views created for, all other types\n * will be reset to do the default. In other words\n *\n * ```js\n * setIntrinsicsToView(['vec3f'])\n * setIntrinsicsToView(['vec2f'])\n * ```\n *\n * Only `vec2f` will have views created. `vec3f` has been reset to the default by\n * the second call\n *\n * You can pass in `true` as the 2nd parameter to make it set which types\n * to flatten and all others will be set to have views created. For example\n * to expand all types would be `setIntrinsicsToView([], true)`. To expand\n * all except `f32` would be `setIntrinsicsToView(['f32'], true)`.\n *\n * To reset all types to the default call it with no arguments\n *\n * @param types array of types to make views for\n * @param flatten whether to flatten or expand the specified types.\n */\nexport function setIntrinsicsToView(types: readonly WGSLType[] = [], flatten?: boolean) {\n    // we need to track what we've viewed because for example `vec3f` references\n    // the same info as `vec3<f32>` so we'd set one and reset the other.\n    const visited = new Set();\n    for (const type of kWGSLTypes) {\n        const info = kWGSLTypeInfo[type];\n        if (!visited.has(info)) {\n            visited.add(info);\n            info.flatten = types.includes(type) ? flatten : !flatten;\n        }\n    }\n}\nsetIntrinsicsToView();\n\nexport type TypedArrayOrViews = TypedArray | Views | Views[];\nexport interface Views {\n    [x: string]: TypedArrayOrViews;\n}\nexport type ArrayBufferViews = {\n    views: TypedArrayOrViews;\n    arrayBuffer: ArrayBuffer;\n}\n\n// This needs to be fixed! ðŸ˜±\nfunction getSizeOfTypeDef(typeDef: TypeDefinition): number {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return asArrayDef.size;\n        /*\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType as IntrinsicDefinition;\n            const { align } = typeInfo[asIntrinsicDef.type];\n            return roundUpToMultipleOf(typeDef.size, align) * asArrayDef.numElements;\n        } else {\n            return asArrayDef.numElements * getSizeOfTypeDef(elementType);\n        }\n        */\n    } else {\n        const asStructDef = typeDef as StructDefinition;\n        const numElements = asArrayDef.numElements || 1;\n        if (asStructDef.fields) {\n            return typeDef.size * numElements;\n        } else {\n            const asIntrinsicDef = typeDef as IntrinsicDefinition;\n            const { align } = kWGSLTypeInfo[asIntrinsicDef.type];\n            return numElements > 1\n                ? roundUpToMultipleOf(typeDef.size, align) * numElements\n                : typeDef.size;\n        }\n    }\n}\n\n// If numElements is undefined this is NOT an array. If it is defined then it IS an array\n// Sizes for arrays are different than sizes for non-arrays. Example\n// a vec3f non array is Float32Array(3)\n// a vec3f array of 2 is Float32Array(4 * 2)\n// a vec3f array of 1 is Float32Array(4 * 1)\nfunction makeIntrinsicTypedArrayView(typeDef: TypeDefinition, buffer: ArrayBuffer, baseOffset: number, numElements?: number): TypedArray {\n    const { size, type } = typeDef as IntrinsicDefinition;\n    try {\n        const { View, align, size: intrinsicSize } = kWGSLTypeInfo[type];\n        const isArray = numElements !== undefined;\n        const sizeInBytes = isArray\n            ? roundUpToMultipleOf(size, align)\n            : intrinsicSize;\n        const baseNumElements = sizeInBytes / View.BYTES_PER_ELEMENT;\n        const effectiveNumElements = isArray\n           ? (numElements === 0\n              ? (buffer.byteLength - baseOffset) / sizeInBytes\n              : numElements)\n           : 1;\n\n        return new View(buffer, baseOffset, baseNumElements * effectiveNumElements);\n    } catch {\n        throw new Error(`unknown type: ${type}`);\n    }\n\n}\n\nfunction isIntrinsic(typeDef: TypeDefinition) {\n    return !(typeDef as StructDefinition).fields &&\n           !(typeDef as ArrayDefinition).elementType;\n}\n\n/**\n * Creates a set of named TypedArray views on an ArrayBuffer. If you don't\n * pass in an ArrayBuffer, one will be created. If you're using an unsized\n * array then you must pass in your own arraybuffer\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n * ```\n *\n * views would effectively be\n *\n * ```js\n * views = {\n *   direction: Float32Array(arrayBuffer, 0, 3),\n *   strength: Float32Array(arrayBuffer, 3, 4),\n *   matrix: Float32Array(arraybuffer, 4, 20),\n * };\n * ```\n *\n * You can use the views directly or you can use {@link setStructuredView}\n *\n * @param typeDef Definition of the various types of views.\n * @param arrayBuffer Optional ArrayBuffer to use (if one provided one will be created)\n * @param offset Optional offset in existing ArrayBuffer to start the views.\n * @returns A bunch of named TypedArray views and the ArrayBuffer\n */\nexport function makeTypedArrayViews(typeDef: TypeDefinition, arrayBuffer?: ArrayBuffer, offset?: number): ArrayBufferViews {\n    const baseOffset = offset || 0;\n    const buffer = arrayBuffer || new ArrayBuffer(getSizeOfTypeDef(typeDef));\n\n    const makeViews = (typeDef: TypeDefinition, baseOffset: number): TypedArrayOrViews => {\n        const asArrayDef = typeDef as ArrayDefinition;\n        const elementType = asArrayDef.elementType;\n        if (elementType) {\n            // TODO: Should be optional? Per Type? Depth set? Per field?\n            // The issue is, if we have `array<vec4, 1000>` we don't likely\n            // want 1000 `Float32Array(4)` views. We want 1 `Float32Array(1000 * 4)` view.\n            // On the other hand, if we have `array<mat4x4, 10>` the maybe we do want\n            // 10 `Float32Array(16)` views since you might want to do\n            // `mat4.perspective(fov, aspect, near, far, foo.bar.arrayOf10Mat4s[3])`;\n            if (isIntrinsic(elementType) && kWGSLTypeInfo[(elementType as IntrinsicDefinition).type].flatten) {\n                return makeIntrinsicTypedArrayView(elementType, buffer, baseOffset, asArrayDef.numElements);\n            } else {\n                const {size} = getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n                const effectiveNumElements = asArrayDef.numElements === 0\n                   ? (buffer.byteLength - baseOffset) / size\n                   : asArrayDef.numElements;\n                return range(effectiveNumElements, i => makeViews(elementType, baseOffset + size * i)) as Views[];\n            }\n        } else if (typeof typeDef === 'string') {\n            throw Error('unreachable');\n        } else {\n            const fields = (typeDef as StructDefinition).fields;\n            if (fields) {\n                const views: Views = {};\n                for (const [name, {type, offset}] of Object.entries(fields)) {\n                    views[name] = makeViews(type, baseOffset + offset);\n                }\n                return views;\n            } else {\n                return makeIntrinsicTypedArrayView(typeDef, buffer, baseOffset);\n            }\n        }\n    };\n    return { views: makeViews(typeDef, baseOffset), arrayBuffer: buffer };\n}\n\n/**\n * Given a set of TypeArrayViews and matching JavaScript data\n * sets the content of the views.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n *\n * setStructuredViews({\n *   direction: [1, 2, 3],\n *   strength: 45,\n *   matrix: [\n *     1, 0, 0, 0,\n *     0, 1, 0, 0,\n *     0, 0, 1, 0,\n *     0, 0, 0, 1,\n *   ],\n * });\n * ```\n *\n * The code above will set the various views, which all point to different\n * locations within the same array buffer.\n *\n * See {@link makeTypedArrayViews}.\n *\n * @param data The new values\n * @param views TypedArray views as returned from {@link makeTypedArrayViews}\n */\nexport function setStructuredView(data: any, views: TypedArrayOrViews): void {\n    if (data === undefined) {\n        return;\n    } else if (isTypedArray(views)) {\n        const view = views as TypedArray;\n        if (view.length === 1 && typeof data === 'number') {\n            view[0] = data;\n        } else {\n            if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n                // complete hack!\n                // there's no type data here so let's guess based on the user's data\n                const dataLen = data[0].length;\n                const stride = dataLen === 3 ? 4 : dataLen;\n                for (let i = 0; i < data.length; ++i) {\n                    const offset = i * stride;\n                    view.set(data[i], offset);\n                }\n            } else {\n                view.set(data as number[]);\n            }\n        }\n    } else if (Array.isArray(views)) {\n        const asArray = views as Views[];\n        (data as any[]).forEach((newValue, ndx) => {\n            setStructuredView(newValue, asArray[ndx]);\n        });\n    } else {\n        const asViews = views as Views;\n        for (const [key, newValue] of Object.entries(data)) {\n            const view = asViews[key];\n            if (view) {\n                setStructuredView(newValue, view);\n            }\n        }\n    }\n}\n\nexport type StructuredView = ArrayBufferViews & {\n    /**\n     * Sets the contents of the TypedArrays based on the data passed in\n     * Note: The data may be sparse\n     *\n     * example:\n     *\n     * ```js\n     * const code = `\n     * struct HSL {\n     *   hue: f32,\n     *   sat: f32,\n     *   lum: f32,\n     * };\n     * struct MyStorage {\n     *    colors: array<HSL, 4>,\n     *    brightness: f32,\n     *    kernel: array<f32, 9>,\n     * };\n     * @group(0) @binding(0) var<storage> myStorage: MyStorage;\n     * `;\n     * const defs = makeShaderDataDefinitions(code);\n     * const myUniformValues = makeStructuredView(defs.storages.myStorage);\n     *\n     * myUniformValues.set({\n     *   colors: [\n     *     ,\n     *     ,\n     *     { hue: 0.5, sat: 1.0, lum: 0.5 },  // only set the 3rd color\n     *   ],\n     *   brightness: 0.8,\n     *   kernel: [\n     *      1, 0, -1,\n     *      2, 0, -2,\n     *      1, 0, -1,\n     *   ],\n     * });\n     * ```\n     *\n     * @param data\n     */\n    set(data: any): void;\n}\n\n/**\n * Given a VariableDefinition, create matching TypedArray views\n *\n * @param varDef A VariableDefinition as returned from {@link makeShaderDataDefinitions}\n * @param arrayBuffer Optional ArrayBuffer for the views\n * @param offset Optional offset into the ArrayBuffer for the views\n * @returns TypedArray views for the various named fields of the structure as well\n *    as a `set` function to make them easy to set, and the arrayBuffer\n *\n * ```js\n * const code = `\n * struct HSL {\n *   hue: f32,\n *   sat: f32,\n *   lum: f32,\n * };\n * struct MyStorage {\n *    colors: array<HSL, 4>,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<storage> myStorage: MyStorage;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.storages.myStorage);\n *\n * myUniformValues.set({\n *   colors: [\n *     ,\n *     ,\n *     { hue: 0.5, sat: 1.0, lum: 0.5 },  // only set the 3rd color\n *   ],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * ```\n *\n * data definition can come from `defs.uniforms.<nameOfUniform>`, `defs.storages.<nameOfStorage>`\n * and `defs.structs.<nameOfStruct>`.\n *\n * What this function does:\n *\n * 1. It creates an `ArrayBuffer` of the size equal to the definition passed in (unless you pass in an existing ArrayBuffer)\n *\n * 2. It makes `TypedArray` views of to match the definition.\n *\n * 3. It returns an object with the the `ArrayBuffer`, the TypedArray views, and a `set` function which is just a wrapper\n *    for `setStructView` that passes in the views.\n *\n * For example: Given a data definition created by makeShaderDataDefinitions for this WGSL\n *\n * ```wgsl\n * struct Light {\n *   lightWorldPosition: vec3f,\n *   shininess: f32,\n *   lightDirection: vec3f,\n *   innerLimit: f32,\n *   outerLimit: f32,\n * };\n * struct Uniforms {\n *   normalMatrix: mat3x3f,\n *   worldViewProjection: mat4x4f,\n *   world: mat4x4f,\n *   color: vec4f,\n *   viewWorldPosition: vec3f,\n *   lights: array<Light, 3>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: Uniforms;\n * ```\n *\n * `makeStructuredView(defs.uniforms.myUniforms)` would return this\n *\n * ```js\n * const arrayBuffer = new ArrayBuffer(368)\n * const views = {\n *   normalMatrix: new Float32Array(arrayBuffer, 0, 12),\n *   worldViewProjection: new Float32Array(arrayBuffer, 48, 16),\n *   world: new Float32Array(arrayBuffer, 112, 16),\n *   color: new Float32Array(arrayBuffer, 176, 4),\n *   viewWorldPosition: new Float32Array(arrayBuffer, 192, 3),\n *   lights: [\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 208, 3),\n *       shininess: new Float32Array(arrayBuffer, 220, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 224, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 236, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 240, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 256, 3),\n *       shininess: new Float32Array(arrayBuffer, 268, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 272, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 284, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 288, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 304, 3),\n *       shininess: new Float32Array(arrayBuffer, 316, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 320, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 332, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 336, 1),\n *     },\n *   ],\n *   mode: new Uint32Array(UniformsValues, 352, 1),\n * };\n * result = {\n *   arrayBuffer,\n *   views,\n *   set(data: any) {\n *     setStructuredView(data, views.views);\n *   },\n * }\n * ```\n *\n * From this, you can see you can set the value in the array buffer for any field/member/property\n * directly. Example\n *\n * ```js\n * result.views.lights[2].lightDirection.set([7, 8, 9]);\n * result.views.lights[2].innerLimit[0] = 4;\n * ```\n *\n * `set` just takes a JS object and matches property names to the view names.\n *\n * ```js\n * result.set({\n *   color: [1, 1, 0, 1],\n *   viewWorldPosition: [12, 34, 56],\n *   mode: 8,\n * });\n * ```\n *\n * Is equivalent to\n *\n * ```js\n * result.views.color.set([1, 1, 0, 1]);\n * result.views.worldViewPosition.set([12, 34, 56]);\n * result.views.mode[0] = 8;\n * ```\n *\n * Further, `set` is just a short cut for `setStructuredView` passing in the root\n * `result'views`.\n *\n * So, for example, if you want to set the light at index 2, this would work.\n *\n * ```js\n * setStructuredView({\n *   lightWorldPosition: [1, 2, 3],\n *   shininess: 4,\n *   lightDirection: [5, 6, 7],\n *   innerLimit: 8,\n *   outerLimit: 9,\n * }, result.views.lights[2]);\n * ```\n */\nexport function makeStructuredView(varDef: VariableDefinition | StructDefinition, arrayBuffer?: ArrayBuffer, offset = 0): StructuredView {\n    const asVarDef = varDef as VariableDefinition;\n    const typeDef = asVarDef.group === undefined ? varDef as StructDefinition : asVarDef.typeDefinition;\n    const views = makeTypedArrayViews(typeDef, arrayBuffer, offset);\n    return {\n        ...views,\n        set(data: any) {\n            setStructuredView(data, views.views);\n        },\n    };\n}\n\ntype ViewsByCtor = Map<TypedArrayConstructor, TypedArray>;\nconst s_views = new WeakMap<ArrayBuffer, ViewsByCtor>();\n\nfunction getViewsByCtor(arrayBuffer: ArrayBuffer): ViewsByCtor {\n    let viewsByCtor = s_views.get(arrayBuffer);\n    if (!viewsByCtor) {\n        viewsByCtor = new Map();\n        s_views.set(arrayBuffer, viewsByCtor);\n    }\n    return viewsByCtor;\n}\n\nfunction getView<T extends TypedArray>(arrayBuffer: ArrayBuffer, Ctor: TypedArrayConstructor): T {\n    const viewsByCtor = getViewsByCtor(arrayBuffer);\n    let view = viewsByCtor.get(Ctor);\n    if (!view) {\n        view = new Ctor(arrayBuffer);\n        viewsByCtor.set(Ctor, view);\n    }\n    return view as T;\n}\n\n// Is this something like [1,2,3]?\nfunction isArrayLikeOfNumber(data: any) {\n    return isTypedArray(data) || Array.isArray(data) && typeof data[0] === 'number';\n}\n\nfunction setIntrinsicFromArrayLikeOfNumber(typeDef: IntrinsicDefinition, data: any, arrayBuffer: ArrayBuffer, offset: number) {\n    const asIntrinsicDefinition = typeDef as IntrinsicDefinition;\n    const type = kWGSLTypeInfo[asIntrinsicDefinition.type];\n    const view = getView(arrayBuffer, type.View);\n    const index = offset / view.BYTES_PER_ELEMENT;\n    if (typeof data === 'number') {\n        view[index] = data;\n    } else {\n        view.set(data, index);\n    }\n}\n\n/**\n * Sets values on an existing array buffer from a TypeDefinition\n * @param typeDef A type definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nexport function setTypedValues(typeDef: TypeDefinition, data: any, arrayBuffer: ArrayBuffer, offset = 0) {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        // It's ArrayDefinition\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType as IntrinsicDefinition;\n            if (isArrayLikeOfNumber(data)) {\n                setIntrinsicFromArrayLikeOfNumber(asIntrinsicDef, data, arrayBuffer, offset);\n                return;\n            }\n        }\n        data.forEach((newValue: any, ndx: number) => {\n            setTypedValues(elementType, newValue, arrayBuffer, offset + elementType.size * ndx);\n        });\n        return;\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        // It's StructDefinition\n        for (const [key, newValue] of Object.entries(data)) {\n            const fieldDef = fields[key];\n            if (fieldDef) {\n                setTypedValues(fieldDef.type, newValue, arrayBuffer, offset + fieldDef.offset);\n            }\n        }\n    } else {\n        // It's IntrinsicDefinition\n        setIntrinsicFromArrayLikeOfNumber(typeDef as IntrinsicDefinition, data, arrayBuffer, offset);\n    }\n}\n\n/**\n * Same as {@link setTypedValues} except it takes a {@link VariableDefinition}.\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nexport function setStructuredValues(varDef: VariableDefinition, data: any, arrayBuffer: ArrayBuffer, offset = 0) {\n    setTypedValues(varDef.typeDefinition, data, arrayBuffer, offset);\n}\n\nfunction getAlignmentOfTypeDef(typeDef: TypeDefinition): number {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return getAlignmentOfTypeDef(elementType);\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        return Object.values(fields).reduce((max, {type}) => Math.max(max, getAlignmentOfTypeDef(type)), 0);\n    }\n\n    const { type } = typeDef as IntrinsicDefinition;\n    const { align } = kWGSLTypeInfo[type];\n    return align;\n}\n\ntype ElementInfo = {\n    unalignedSize: number,\n    align: number,\n    size: number,\n};\n\nfunction getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef: TypeDefinition): ElementInfo {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        const unalignedSize = elementType.size;\n        const align = getAlignmentOfTypeDef(elementType);\n        return {\n            unalignedSize,\n            align,\n            size: roundUpToMultipleOf(unalignedSize, align),\n        };\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        const lastField = Object.values(fields).pop()!;\n        if (lastField.type.size === 0) {\n            return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(lastField.type);\n        }\n    }\n\n    return {\n        size: 0,\n        unalignedSize: 0,\n        align: 1,\n    };\n}\n\n/**\n * Returns the size, align, and unalignedSize of \"the\" unsized array element. Unsized arrays are only\n * allowed at the outer most level or the last member of a top level struct.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size, align, unalignedSize } = getSizeAndAlignmentOfUnsizedArrayElement(\n *    defs.storages.f);\n * // size = 16   (since you need to allocate 16 bytes per element)\n * // align = 16  (since vec3f needs to be aligned to 16 bytes)\n * // unalignedSize = 12 (since only 12 bytes are used for a vec3f)\n * ```\n *\n * Generally you only need size. Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size } = getSizeAndAlignmentOfUnsizedArrayElement(defs.storages.f);\n * const numElements = 10;\n * const views = makeStructuredViews(\n *    defs.storages.f,\n *    new ArrayBuffer(defs.storages.f.size + size * numElements));\n * ```\n *\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @returns the size, align, and unalignedSize in bytes of the unsized array element in this type definition.\n *   If there is no unsized array, size = 0.\n */\nexport function getSizeAndAlignmentOfUnsizedArrayElement(varDef: VariableDefinition | StructDefinition): {size: number, align: number} {\n    const asVarDef = varDef as VariableDefinition;\n    const typeDef = asVarDef.group === undefined ? varDef as StructDefinition : asVarDef.typeDefinition;\n    return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n}\n","class e{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class t{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class n extends e{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class s extends e{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class r extends e{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s}get isTemplate(){return!0}}var a,i,o,u,l;(e=>{e[e.Uniform=0]='Uniform',e[e.Storage=1]='Storage',e[e.Texture=2]='Texture',e[e.Sampler=3]='Sampler',e[e.StorageTexture=4]='StorageTexture'})(a||(a={}));class c{constructor(e,t,n,s,r,a,i){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=r,this.resourceType=a,this.access=i}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class h{constructor(e,t){this.name=e,this.type=t}}class f{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null}}class p{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s}}class m{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s}}class d{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class _{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class v{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class x{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class g{constructor(){this.id=g._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return''}constEvaluate(e,t){throw new Error('Cannot evaluate node')}constEvaluateString(e){return this.constEvaluate(e).toString()}search(e){}searchBlock(e,t){if(e){t(y.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(w.instance)}}}g._id=0;class y extends g{}y.instance=new y;class w extends g{}w.instance=new w;class b extends g{constructor(){super()}}class k extends b{constructor(e,t,n,s,r,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=r,this.endLine=a}get astNodeType(){return'function'}search(e){this.searchBlock(this.body,e)}}class I extends b{constructor(e){super(),this.expression=e}get astNodeType(){return'staticAssert'}search(e){this.expression.search(e)}}class T extends b{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'while'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class S extends b{constructor(e){super(),this.body=e}get astNodeType(){return'continuing'}search(e){this.searchBlock(this.body,e)}}class E extends b{constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s}get astNodeType(){return'for'}search(e){var t,n,s;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(s=this.increment)||void 0===s||s.search(e),this.searchBlock(this.body,e)}}class A extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'var'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class $ extends b{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return'override'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class V extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'let'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class N extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'const'}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}(e=>{e.increment='++',e.decrement='--'})(i||(i={})),(e=>{e.parse=function(t){const n=t;if('parse'==n)throw new Error('Invalid value for IncrementOperator');return e[n]}})(i||(i={}));class L extends b{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return'increment'}search(e){this.variable.search(e)}}(e=>{e.assign='=',e.addAssign='+=',e.subtractAssin='-=',e.multiplyAssign='*=',e.divideAssign='/=',e.moduloAssign='%=',e.andAssign='&=',e.orAssign='|=',e.xorAssign='^=',e.shiftLeftAssign='<<=',e.shiftRightAssign='>>='})(o||(o={})),(e=>{e.parse=function(e){const t=e;if('parse'==t)throw new Error('Invalid value for AssignOperator');return t}})(o||(o={}));class O extends b{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return'assign'}search(e){this.variable.search(e),this.value.search(e)}}class D extends b{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return'call'}search(e){for(const t of this.args)t.search(e);e(this)}}class C extends b{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return'loop'}}class M extends b{constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return'switch'}}class F extends b{constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s}get astNodeType(){return'if'}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class U extends b{constructor(e){super(),this.value=e}get astNodeType(){return'return'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class q extends b{constructor(e){super(),this.name=e}get astNodeType(){return'enable'}}class B extends b{constructor(e){super(),this.extensions=e}get astNodeType(){return'requires'}}class z extends b{constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return'diagnostic'}}class R extends b{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return'alias'}}class G extends b{constructor(){super()}get astNodeType(){return'discard'}}class W extends b{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return'break'}}class P extends b{constructor(){super(),this.loopId=-1}get astNodeType(){return'continue'}}class X extends b{constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return'type'}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=X._priority.get(t.name);X._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?X.i32:t}}X.x32=new X('x32'),X.f32=new X('f32'),X.i32=new X('i32'),X.u32=new X('u32'),X.f16=new X('f16'),X.bool=new X('bool'),X._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class Z extends X{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s}get astNodeType(){return'struct'}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class j extends X{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'template'}}j.vec2f=new j('vec2',X.f32,null),j.vec3f=new j('vec3',X.f32,null),j.vec4f=new j('vec4',X.f32,null),j.vec2i=new j('vec2',X.i32,null),j.vec3i=new j('vec3',X.i32,null),j.vec4i=new j('vec4',X.i32,null),j.vec2u=new j('vec2',X.u32,null),j.vec3u=new j('vec3',X.u32,null),j.vec4u=new j('vec4',X.u32,null),j.vec2h=new j('vec2',X.f16,null),j.vec3h=new j('vec3',X.f16,null),j.vec4h=new j('vec4',X.f16,null),j.vec2b=new j('vec2',X.bool,null),j.vec3b=new j('vec3',X.bool,null),j.vec4b=new j('vec4',X.bool,null),j.mat2x2f=new j('mat2x2',X.f32,null),j.mat2x3f=new j('mat2x3',X.f32,null),j.mat2x4f=new j('mat2x4',X.f32,null),j.mat3x2f=new j('mat3x2',X.f32,null),j.mat3x3f=new j('mat3x3',X.f32,null),j.mat3x4f=new j('mat3x4',X.f32,null),j.mat4x2f=new j('mat4x2',X.f32,null),j.mat4x3f=new j('mat4x3',X.f32,null),j.mat4x4f=new j('mat4x4',X.f32,null),j.mat2x2h=new j('mat2x2',X.f16,null),j.mat2x3h=new j('mat2x3',X.f16,null),j.mat2x4h=new j('mat2x4',X.f16,null),j.mat3x2h=new j('mat3x2',X.f16,null),j.mat3x3h=new j('mat3x3',X.f16,null),j.mat3x4h=new j('mat3x4',X.f16,null),j.mat4x2h=new j('mat4x2',X.f16,null),j.mat4x3h=new j('mat4x3',X.f16,null),j.mat4x4h=new j('mat4x4',X.f16,null);class Q extends X{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s}get astNodeType(){return'pointer'}}class Y extends X{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s}get astNodeType(){return'array'}get isArray(){return!0}}class K extends X{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'sampler'}}class H extends g{constructor(){super(),this.postfix=null}}class J extends H{constructor(e){super(),this.value=e}get astNodeType(){return'stringExpr'}toString(){return this.value}constEvaluateString(){return this.value}}class ee extends H{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'createExpr'}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class te extends H{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return'callExpr'}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return te.builtinFunctionNames.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}te.builtinFunctionNames=new Set(['all','all','any','select','arrayLength','abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','clamp','cos','cosh','countLeadingZeros','countOneBits','countTrailingZeros','cross','degrees','determinant','distance','dot','dot4U8Packed','dot4I8Packed','exp','exp2','extractBits','faceForward','firstLeadingBit','firstTrailingBit','floor','fma','fract','frexp','insertBits','inverseSqrt','ldexp','length','log','log2','max','min','mix','modf','normalize','pow','quantizeToF16','radians','reflect','refract','reverseBits','round','saturate','sign','sin','sinh','smoothStep','sqrt','step','tan','tanh','transpose','trunc','dpdx','dpdxCoarse','dpdxFine','dpdy','dpdyCoarse','dpdyFine','fwidth','fwidthCoarse','fwidthFine','textureDimensions','textureGather','textureGatherCompare','textureLoad','textureNumLayers','textureNumLevels','textureNumSamples','textureSample','textureSampleBias','textureSampleCompare','textureSampleCompareLevel','textureSampleGrad','textureSampleLevel','textureSampleBaseClampToEdge','textureStore','atomicLoad','atomicStore','atomicAdd','atomicSub','atomicMax','atomicMin','atomicAnd','atomicOr','atomicXor','atomicExchange','atomicCompareExchangeWeak','pack4x8snorm','pack4x8unorm','pack4xI8','pack4xU8','pack4x8Clamp','pack4xU8Clamp','pack2x16snorm','pack2x16unorm','pack2x16float','unpack4x8snorm','unpack4x8unorm','unpack4xI8','unpack4xU8','unpack2x16snorm','unpack2x16unorm','unpack2x16float','storageBarrier','textureBarrier','workgroupBarrier','workgroupUniformLoad','subgroupAdd','subgroupExclusiveAdd','subgroupInclusiveAdd','subgroupAll','subgroupAnd','subgroupAny','subgroupBallot','subgroupBroadcast','subgroupBroadcastFirst','subgroupElect','subgroupMax','subgroupMin','subgroupMul','subgroupExclusiveMul','subgroupInclusiveMul','subgroupOr','subgroupShuffle','subgroupShuffleDown','subgroupShuffleUp','subgroupShuffleXor','subgroupXor','quadBroadcast','quadSwapDiagonal','quadSwapX','quadSwapY']);class ne extends H{constructor(e){super(),this.name=e}get astNodeType(){return'varExpr'}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class se extends H{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return'constExpr'}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getDataValue(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e)}}class re extends H{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return'literalExpr'}constEvaluate(e,t){return void 0!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof be}get isVector(){return this.value instanceof Ie||this.value instanceof Te}get scalarValue(){return this.value instanceof be?this.value.value:(console.error('Value is not scalar.'),0)}get vectorValue(){return this.value instanceof Ie||this.value instanceof Te?this.value.value:(console.error('Value is not a vector or matrix.'),[])}}class ae extends H{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return'bitcastExpr'}search(e){this.value.search(e)}}class ie extends H{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'typecastExpr'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.searchBlock(this.args,e)}}class oe extends H{constructor(e){super(),this.contents=e}get astNodeType(){return'groupExpr'}constEvaluate(e,t){return this.contents[0].constEvaluate(e,t)}search(e){this.searchBlock(this.contents,e)}}class ue extends H{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class le extends H{constructor(){super()}}class ce extends le{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return'unaryOp'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class he extends le{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return'binaryOp'}_getPromotedType(e,t){return e.name===t.name?e:'f32'===e.name||'f32'===t.name?X.f32:'u32'===e.name||'u32'===t.name?X.u32:X.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class fe extends g{constructor(e){super(),this.body=e}}class pe extends H{constructor(){super()}get astNodeType(){return'default'}}class me extends fe{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return'case'}search(e){this.searchBlock(this.body,e)}}class de extends fe{constructor(e){super(e)}get astNodeType(){return'default'}search(e){this.searchBlock(this.body,e)}}class _e extends g{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'argument'}}class ve extends g{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'elseif'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class xe extends g{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'member'}}class ge extends g{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return'attribute'}}class ye{constructor(e){this.typeInfo=e}setDataValue(e,t,n,s){console.error('SetDataValue: Not implemented',t,n)}getDataValue(e,t,n){return console.error('GetDataValue: Not implemented',t),null}toString(){return`<${this.typeInfo.name}>`}}class we extends ye{constructor(){super(new e('void',null))}toString(){return'void'}}we.void=new we;class be extends ye{constructor(e,t){super(t),'i32'===this.typeInfo.name||'u32'===this.typeInfo.name?e=Math.floor(e):'bool'===this.typeInfo.name&&(e=e?1:0),this.value=e}setDataValue(e,t,n,s){n?console.error('SetDataValue: Scalar data does not support postfix',n):t instanceof be?(t.value,'i32'===this.typeInfo.name||'u32'===this.typeInfo.name||this.typeInfo.name,this.value=t.value):console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){return t?(console.error('GetDataValue: Scalar data does not support postfix',t),null):this}toString(){return`${this.value}`}}function ke(e,t,n){const s=t.length;return 2===s?'f32'===n?new Ie(t,e.getTypeInfo('vec2f')):'i32'===n?new Ie(t,e.getTypeInfo('vec2i')):'u32'===n?new Ie(t,e.getTypeInfo('vec2u')):'f16'===n?new Ie(t,e.getTypeInfo('vec2h')):(console.error(`GetDataValue: Unknown format ${n}`),null):3===s?'f32'===n?new Ie(t,e.getTypeInfo('vec3f')):'i32'===n?new Ie(t,e.getTypeInfo('vec3i')):'u32'===n?new Ie(t,e.getTypeInfo('vec3u')):'f16'===n?new Ie(t,e.getTypeInfo('vec3h')):(console.error(`GetDataValue: Unknown format ${n}`),null):4===s?'f32'===n?new Ie(t,e.getTypeInfo('vec4f')):'i32'===n?new Ie(t,e.getTypeInfo('vec4i')):'u32'===n?new Ie(t,e.getTypeInfo('vec4u')):'f16'===n?new Ie(t,e.getTypeInfo('vec4h')):(console.error(`GetDataValue: Unknown format ${n}`),null):(console.error(`GetDataValue: Invalid vector size ${t.length}`),null)}class Ie extends ye{constructor(e,t){super(t),Array.isArray(e)?this.value=e:this.value=Array.from(e)}setDataValue(e,t,n,s){n instanceof J?console.error('TODO: Set vector postfix'):t instanceof Ie?this.value=t.value:console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){let s=e.getTypeInfo('f32');if(this.typeInfo instanceof r)s=this.typeInfo.format;else{const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?s=e.getTypeInfo('f32'):'vec2i'===t||'vec3i'===t||'vec4i'===t?s=e.getTypeInfo('i32'):'vec2u'===t||'vec3u'===t||'vec4u'===t?s=e.getTypeInfo('u32'):'vec2h'===t||'vec3h'===t||'vec4h'===t?s=e.getTypeInfo('f16'):console.error(`GetDataValue: Unknown type ${t}`)}if(t instanceof ue){const r=t.index;let a=-1;if(r instanceof re){if(!(r.value instanceof be))return console.error(`GetValueData: Invalid array index ${r.value}`),null;a=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof be))return console.error('GetDataValue: Unknown index type',r),null;a=t.value}return a<0||a>=this.value.length?(console.error('GetDataValue: Index out of range',a),null):new be(this.value[a],s)}if(t instanceof J){const n=t.value,r=[];for(const e of n)'x'===e||'r'===e?r.push(this.value[0]):'y'===e||'g'===e?r.push(this.value[1]):'z'===e||'b'===e?r.push(this.value[2]):'w'===e||'a'===e?r.push(this.value[3]):console.error(`GetDataValue: Unknown member ${e}`);return 1===r.length?new be(r[0],s):ke(e,r,s.name)}return this}toString(){let e=`${this.value[0]}`;for(let t=1;t<this.value.length;++t)e+=`, ${this.value[t]}`;return e}}class Te extends ye{constructor(e,t){super(t),this.value=e}setDataValue(e,t,n,s){n instanceof J?console.error('TODO: Set matrix postfix'):t instanceof Te?this.value=t.value:console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){const s=this.typeInfo.name;let a=e.getTypeInfo('f32');if(this.typeInfo instanceof r)a=this.typeInfo.format;else if(s.endsWith('f'))a=e.getTypeInfo('f32');else if(s.endsWith('i'))a=e.getTypeInfo('i32');else if(s.endsWith('u'))a=e.getTypeInfo('u32');else{if(!s.endsWith('h'))return console.error(`GetDataValue: Unknown type ${s}`),null;a=e.getTypeInfo('f16')}if(t instanceof ue){const r=t.index;let i,o=-1;if(r instanceof re){if(!(r.value instanceof be))return console.error(`GetDataValue: Invalid array index ${r.value}`),null;o=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof be))return console.error('GetDataValue: Unknown index type',r),null;o=t.value}if(o<0||o>=this.value.length)return console.error('GetDataValue: Index out of range',o),null;if('mat2x2'===s||'mat2x2f'===s||'mat2x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat2x3'===s||'mat2x3f'===s||'mat2x3h'===s)i=this.value.slice(3*o,3*o+3);else if('mat2x4'===s||'mat2x4f'===s||'mat2x4h'===s)i=this.value.slice(4*o,4*o+4);else if('mat3x2'===s||'mat3x2f'===s||'mat3x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat3x3'===s||'mat3x3f'===s||'mat3x3h'===s)i=this.value.slice(3*o,3*o+3);else if('mat3x4'===s||'mat3x4f'===s||'mat3x4h'===s)i=this.value.slice(4*o,4*o+4);else if('mat4x2'===s||'mat4x2f'===s||'mat4x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat4x3'===s||'mat4x3f'===s||'mat4x3h'===s)i=this.value.slice(3*o,3*o+3);else{if('mat4x4'!==s&&'mat4x4f'!==s&&'mat4x4h'!==s)return console.error(`GetDataValue: Unknown type ${s}`),null;i=this.value.slice(4*o,4*o+4)}const u=ke(e,i,a.name);if(t.postfix)return u.getDataValue(e,t.postfix,n)}return this}toString(){let e=`${this.value[0]}`;for(let t=1;t<this.value.length;++t)e+=`, ${this.value[t]}`;return e}}class Se extends ye{constructor(e,t,n=0,s){super(t),this.textureSize=[0,0,0],this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n,void 0!==s&&(this.textureSize=s)}setDataValue(t,r,a,i){if(null===r)return void console.log('setDataValue: NULL data.');let o=this.offset,u=this.typeInfo;for(;a;){if(a instanceof ue)if(u instanceof s){const e=a.index;if(e instanceof re){if(!(e.value instanceof be))return void console.error(`SetDataValue: Invalid index type ${e.value}`);o+=e.value.value*u.stride}else{const n=t.evalExpression(e,i);if(!(n instanceof be))return void console.error('SetDataValue: Unknown index type',e);o+=n.value*u.stride}u=u.format}else console.error(`SetDataValue: Type ${t.getTypeName(u)} is not an array`);else{if(!(a instanceof J))return void console.error('SetDataValue: Unknown postfix type',a);{const s=a.value;if(u instanceof n){let e=!1;for(const t of u.members)if(t.name===s){o+=t.offset,u=t.type,e=!0;break}if(!e)return void console.error(`SetDataValue: Member ${s} not found`)}else if(u instanceof e){const e=t.getTypeName(u);let n=0;if('x'===s||'r'===s)n=0;else if('y'===s||'g'===s)n=1;else if('z'===s||'b'===s)n=2;else{if('w'!==s&&'a'!==s)return void console.error(`SetDataValue: Unknown member ${s}`);n=3}if(!(r instanceof be))return void console.error('SetDataValue: Invalid value',r);const a=r.value;return'vec2f'===e?void(new Float32Array(this.buffer,o,2)[n]=a):'vec3f'===e?void(new Float32Array(this.buffer,o,3)[n]=a):'vec4f'===e?void(new Float32Array(this.buffer,o,4)[n]=a):'vec2i'===e?void(new Int32Array(this.buffer,o,2)[n]=a):'vec3i'===e?void(new Int32Array(this.buffer,o,3)[n]=a):'vec4i'===e?void(new Int32Array(this.buffer,o,4)[n]=a):'vec2u'===e?void(new Uint32Array(this.buffer,o,2)[n]=a):'vec3u'===e?void(new Uint32Array(this.buffer,o,3)[n]=a):'vec4u'===e?void(new Uint32Array(this.buffer,o,4)[n]=a):void console.error(`SetDataValue: Type ${e} is not a struct`)}}}a=a.postfix}this.setData(t,r,u,o,i)}setData(e,t,n,s,r){const a=e.getTypeName(n);if('f32'!==a&&'f16'!==a)if('i32'!==a&&'atomic<i32>'!==a&&'x32'!==a)if('u32'!==a&&'atomic<u32>'!==a)if('bool'!==a)if('vec2f'!==a&&'vec2h'!==a)if('vec3f'!==a&&'vec3h'!==a)if('vec4f'!==a&&'vec4h'!==a)if('vec2i'!==a)if('vec3i'!==a)if('vec4i'!==a)if('vec2u'!==a)if('vec3u'!==a)if('vec4u'!==a)if('vec2b'!==a)if('vec3b'!==a)if('vec4b'!==a)if('mat2x2f'!==a&&'mat2x2h'!==a)if('mat2x3f'!==a&&'mat2x3h'!==a)if('mat2x4f'!==a&&'mat2x4h'!==a)if('mat3x2f'!==a&&'mat3x2h'!==a)if('mat3x3f'!==a&&'mat3x3h'!==a)if('mat3x4f'!==a&&'mat3x4h'!==a)if('mat4x2f'!==a&&'mat4x2h'!==a)if('mat4x3f'!==a&&'mat4x3h'!==a)if('mat4x4f'!==a&&'mat4x4h'!==a)if(t instanceof Se){if(n===t.typeInfo){return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer))}console.error('SetDataValue: Type mismatch',a,e.getTypeName(t.typeInfo))}else console.error(`SetData: Unknown type ${a}`);else{const e=new Float32Array(this.buffer,s,16);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11],e[12]=t.value[12],e[13]=t.value[13],e[14]=t.value[14],e[15]=t.value[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,9);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Int32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Int32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Int32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Float32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Float32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else t instanceof be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Float32Array(this.buffer,s,1)[0]=t.value)}getDataValue(t,a,i){let o=this.offset,u=this.typeInfo;for(;a;){if(a instanceof ue){const e=a.index,n=t.evalExpression(e,i);let r=0;if(n instanceof be?r=n.value:console.error('GetDataValue: Invalid index type',e),u instanceof s)o+=r*u.stride,u=u.format;else{const e=t.getTypeName(u);'mat4x4'===e||'mat4x4f'===e||'mat4x4h'===e?(o+=16*r,u=t.getTypeInfo('vec4f')):console.error(`getDataValue: Type ${t.getTypeName(u)} is not an array`)}}else{if(!(a instanceof J))return console.error('GetDataValue: Unknown postfix type',a),null;{const s=a.value;if(u instanceof n){let e=!1;for(const t of u.members)if(t.name===s){o+=t.offset,u=t.type,e=!0;break}if(!e)return console.error(`GetDataValue: Member ${s} not found`),null}else if(u instanceof e){const e=t.getTypeName(u);if('vec2f'===e||'vec3f'===e||'vec4f'===e||'vec2i'===e||'vec3i'===e||'vec4i'===e||'vec2u'===e||'vec3u'===e||'vec4u'===e||'vec2b'===e||'vec3b'===e||'vec4b'===e||'vec2h'===e||'vec3h'===e||'vec4h'===e||'vec2'===e||'vec3'===e||'vec4'===e){if(s.length>0&&s.length<5){let n='f32',r='f';const a=[];for(let t=0;t<s.length;++t){const i=s[t].toLocaleLowerCase();let u=0;if('x'===i||'r'===i)u=0;else if('y'===i||'g'===i)u=1;else if('z'===i||'b'===i)u=2;else{if('w'!==i&&'a'!==i)return console.error(`Unknown member ${s}`),null;u=3}if('vec2f'===e)a.push(new Float32Array(this.buffer,o,2)[u]);else if('vec3f'===e){if(o+12>=this.buffer.byteLength)return console.log('Insufficient buffer data'),null;const e=new Float32Array(this.buffer,o,3);a.push(e[u])}else if('vec4f'===e)a.push(new Float32Array(this.buffer,o,4)[u]);else if('vec2i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,2)[u]);else if('vec3i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,3)[u]);else if('vec4i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,4)[u]);else if('vec2u'===e){n='u32',r='u';const e=new Uint32Array(this.buffer,o,2);a.push(e[u])}else'vec3u'===e?(n='u32',r='u',a.push(new Uint32Array(this.buffer,o,3)[u])):'vec4u'===e&&(n='u32',r='u',a.push(new Uint32Array(this.buffer,o,4)[u]))}return 1===a.length?new be(a[0],t.getTypeInfo(n)):(2===a.length?u=t.getTypeInfo(`vec2${r}`):3===a.length?u=t.getTypeInfo(`vec3${r}`):4===a.length?u=t.getTypeInfo(`vec4${r}`):console.error(`GetDataValue: Invalid vector length ${a.length}`),new Ie(a,u))}return console.error(`GetDataValue: Unknown member ${s}`),null}return console.error(`GetDataValue: Type ${e} is not a struct`),null}}}a=a.postfix}const l=t.getTypeName(u);return'f32'===l?new be(new Float32Array(this.buffer,o,1)[0],u):'i32'===l?new be(new Int32Array(this.buffer,o,1)[0],u):'u32'===l?new be(new Uint32Array(this.buffer,o,1)[0],u):'vec2f'===l?new Ie(new Float32Array(this.buffer,o,2),u):'vec3f'===l?new Ie(new Float32Array(this.buffer,o,3),u):'vec4f'===l?new Ie(new Float32Array(this.buffer,o,4),u):'vec2i'===l?new Ie(new Int32Array(this.buffer,o,2),u):'vec3i'===l?new Ie(new Int32Array(this.buffer,o,3),u):'vec4i'===l?new Ie(new Int32Array(this.buffer,o,4),u):'vec2u'===l?new Ie(new Uint32Array(this.buffer,o,2),u):'vec3u'===l?new Ie(new Uint32Array(this.buffer,o,3),u):'vec4u'===l?new Ie(new Uint32Array(this.buffer,o,4),u):u instanceof r&&'atomic'===u.name?'u32'===u.format.name?new be(new Uint32Array(this.buffer,o,1)[0],u.format):'i32'===u.format.name?new be(new Int32Array(this.buffer,o,1)[0],u.format):(console.error(`GetDataValue: Invalid atomic format ${u.format.name}`),null):new Se(this.buffer,u,o)}toString(){let e='';if(this.typeInfo instanceof s)if('f32'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('i32'===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('u32'===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('vec2f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if('vec3f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if('vec4f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e='[...]';else this.typeInfo instanceof n?e+='{...}':e='[...]';return e}}(e=>{e[e.token=0]='token',e[e.keyword=1]='keyword',e[e.reserved=2]='reserved'})(l||(l={}));class Ee{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class Ae{}u=Ae,Ae.none=new Ee('',l.reserved,''),Ae.eof=new Ee('EOF',l.token,''),Ae.reserved={asm:new Ee('asm',l.reserved,'asm'),bf16:new Ee('bf16',l.reserved,'bf16'),do:new Ee('do',l.reserved,'do'),enum:new Ee('enum',l.reserved,'enum'),f16:new Ee('f16',l.reserved,'f16'),f64:new Ee('f64',l.reserved,'f64'),handle:new Ee('handle',l.reserved,'handle'),i8:new Ee('i8',l.reserved,'i8'),i16:new Ee('i16',l.reserved,'i16'),i64:new Ee('i64',l.reserved,'i64'),mat:new Ee('mat',l.reserved,'mat'),premerge:new Ee('premerge',l.reserved,'premerge'),regardless:new Ee('regardless',l.reserved,'regardless'),typedef:new Ee('typedef',l.reserved,'typedef'),u8:new Ee('u8',l.reserved,'u8'),u16:new Ee('u16',l.reserved,'u16'),u64:new Ee('u64',l.reserved,'u64'),unless:new Ee('unless',l.reserved,'unless'),using:new Ee('using',l.reserved,'using'),vec:new Ee('vec',l.reserved,'vec'),void:new Ee('void',l.reserved,'void')},Ae.keywords={array:new Ee('array',l.keyword,'array'),atomic:new Ee('atomic',l.keyword,'atomic'),bool:new Ee('bool',l.keyword,'bool'),f32:new Ee('f32',l.keyword,'f32'),i32:new Ee('i32',l.keyword,'i32'),mat2x2:new Ee('mat2x2',l.keyword,'mat2x2'),mat2x3:new Ee('mat2x3',l.keyword,'mat2x3'),mat2x4:new Ee('mat2x4',l.keyword,'mat2x4'),mat3x2:new Ee('mat3x2',l.keyword,'mat3x2'),mat3x3:new Ee('mat3x3',l.keyword,'mat3x3'),mat3x4:new Ee('mat3x4',l.keyword,'mat3x4'),mat4x2:new Ee('mat4x2',l.keyword,'mat4x2'),mat4x3:new Ee('mat4x3',l.keyword,'mat4x3'),mat4x4:new Ee('mat4x4',l.keyword,'mat4x4'),ptr:new Ee('ptr',l.keyword,'ptr'),sampler:new Ee('sampler',l.keyword,'sampler'),sampler_comparison:new Ee('sampler_comparison',l.keyword,'sampler_comparison'),struct:new Ee('struct',l.keyword,'struct'),texture_1d:new Ee('texture_1d',l.keyword,'texture_1d'),texture_2d:new Ee('texture_2d',l.keyword,'texture_2d'),texture_2d_array:new Ee('texture_2d_array',l.keyword,'texture_2d_array'),texture_3d:new Ee('texture_3d',l.keyword,'texture_3d'),texture_cube:new Ee('texture_cube',l.keyword,'texture_cube'),texture_cube_array:new Ee('texture_cube_array',l.keyword,'texture_cube_array'),texture_multisampled_2d:new Ee('texture_multisampled_2d',l.keyword,'texture_multisampled_2d'),texture_storage_1d:new Ee('texture_storage_1d',l.keyword,'texture_storage_1d'),texture_storage_2d:new Ee('texture_storage_2d',l.keyword,'texture_storage_2d'),texture_storage_2d_array:new Ee('texture_storage_2d_array',l.keyword,'texture_storage_2d_array'),texture_storage_3d:new Ee('texture_storage_3d',l.keyword,'texture_storage_3d'),texture_depth_2d:new Ee('texture_depth_2d',l.keyword,'texture_depth_2d'),texture_depth_2d_array:new Ee('texture_depth_2d_array',l.keyword,'texture_depth_2d_array'),texture_depth_cube:new Ee('texture_depth_cube',l.keyword,'texture_depth_cube'),texture_depth_cube_array:new Ee('texture_depth_cube_array',l.keyword,'texture_depth_cube_array'),texture_depth_multisampled_2d:new Ee('texture_depth_multisampled_2d',l.keyword,'texture_depth_multisampled_2d'),texture_external:new Ee('texture_external',l.keyword,'texture_external'),u32:new Ee('u32',l.keyword,'u32'),vec2:new Ee('vec2',l.keyword,'vec2'),vec3:new Ee('vec3',l.keyword,'vec3'),vec4:new Ee('vec4',l.keyword,'vec4'),bitcast:new Ee('bitcast',l.keyword,'bitcast'),block:new Ee('block',l.keyword,'block'),break:new Ee('break',l.keyword,'break'),case:new Ee('case',l.keyword,'case'),continue:new Ee('continue',l.keyword,'continue'),continuing:new Ee('continuing',l.keyword,'continuing'),default:new Ee('default',l.keyword,'default'),diagnostic:new Ee('diagnostic',l.keyword,'diagnostic'),discard:new Ee('discard',l.keyword,'discard'),else:new Ee('else',l.keyword,'else'),enable:new Ee('enable',l.keyword,'enable'),fallthrough:new Ee('fallthrough',l.keyword,'fallthrough'),false:new Ee('false',l.keyword,'false'),fn:new Ee('fn',l.keyword,'fn'),for:new Ee('for',l.keyword,'for'),function:new Ee('function',l.keyword,'function'),if:new Ee('if',l.keyword,'if'),let:new Ee('let',l.keyword,'let'),const:new Ee('const',l.keyword,'const'),loop:new Ee('loop',l.keyword,'loop'),while:new Ee('while',l.keyword,'while'),private:new Ee('private',l.keyword,'private'),read:new Ee('read',l.keyword,'read'),read_write:new Ee('read_write',l.keyword,'read_write'),return:new Ee('return',l.keyword,'return'),requires:new Ee('requires',l.keyword,'requires'),storage:new Ee('storage',l.keyword,'storage'),switch:new Ee('switch',l.keyword,'switch'),true:new Ee('true',l.keyword,'true'),alias:new Ee('alias',l.keyword,'alias'),type:new Ee('type',l.keyword,'type'),uniform:new Ee('uniform',l.keyword,'uniform'),var:new Ee('var',l.keyword,'var'),override:new Ee('override',l.keyword,'override'),workgroup:new Ee('workgroup',l.keyword,'workgroup'),write:new Ee('write',l.keyword,'write'),r8unorm:new Ee('r8unorm',l.keyword,'r8unorm'),r8snorm:new Ee('r8snorm',l.keyword,'r8snorm'),r8uint:new Ee('r8uint',l.keyword,'r8uint'),r8sint:new Ee('r8sint',l.keyword,'r8sint'),r16uint:new Ee('r16uint',l.keyword,'r16uint'),r16sint:new Ee('r16sint',l.keyword,'r16sint'),r16float:new Ee('r16float',l.keyword,'r16float'),rg8unorm:new Ee('rg8unorm',l.keyword,'rg8unorm'),rg8snorm:new Ee('rg8snorm',l.keyword,'rg8snorm'),rg8uint:new Ee('rg8uint',l.keyword,'rg8uint'),rg8sint:new Ee('rg8sint',l.keyword,'rg8sint'),r32uint:new Ee('r32uint',l.keyword,'r32uint'),r32sint:new Ee('r32sint',l.keyword,'r32sint'),r32float:new Ee('r32float',l.keyword,'r32float'),rg16uint:new Ee('rg16uint',l.keyword,'rg16uint'),rg16sint:new Ee('rg16sint',l.keyword,'rg16sint'),rg16float:new Ee('rg16float',l.keyword,'rg16float'),rgba8unorm:new Ee('rgba8unorm',l.keyword,'rgba8unorm'),rgba8unorm_srgb:new Ee('rgba8unorm_srgb',l.keyword,'rgba8unorm_srgb'),rgba8snorm:new Ee('rgba8snorm',l.keyword,'rgba8snorm'),rgba8uint:new Ee('rgba8uint',l.keyword,'rgba8uint'),rgba8sint:new Ee('rgba8sint',l.keyword,'rgba8sint'),bgra8unorm:new Ee('bgra8unorm',l.keyword,'bgra8unorm'),bgra8unorm_srgb:new Ee('bgra8unorm_srgb',l.keyword,'bgra8unorm_srgb'),rgb10a2unorm:new Ee('rgb10a2unorm',l.keyword,'rgb10a2unorm'),rg11b10float:new Ee('rg11b10float',l.keyword,'rg11b10float'),rg32uint:new Ee('rg32uint',l.keyword,'rg32uint'),rg32sint:new Ee('rg32sint',l.keyword,'rg32sint'),rg32float:new Ee('rg32float',l.keyword,'rg32float'),rgba16uint:new Ee('rgba16uint',l.keyword,'rgba16uint'),rgba16sint:new Ee('rgba16sint',l.keyword,'rgba16sint'),rgba16float:new Ee('rgba16float',l.keyword,'rgba16float'),rgba32uint:new Ee('rgba32uint',l.keyword,'rgba32uint'),rgba32sint:new Ee('rgba32sint',l.keyword,'rgba32sint'),rgba32float:new Ee('rgba32float',l.keyword,'rgba32float'),static_assert:new Ee('static_assert',l.keyword,'static_assert')},Ae.tokens={decimal_float_literal:new Ee('decimal_float_literal',l.token,/((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new Ee('hex_float_literal',l.token,/-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+[fh]?))/),int_literal:new Ee('int_literal',l.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new Ee('uint_literal',l.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new Ee('name',l.token,/[_a-zA-Z][0-9a-zA-Z_]*/),ident:new Ee('ident',l.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new Ee('and',l.token,'&'),and_and:new Ee('and_and',l.token,'&&'),arrow:new Ee('arrow ',l.token,'->'),attr:new Ee('attr',l.token,'@'),forward_slash:new Ee('forward_slash',l.token,'/'),bang:new Ee('bang',l.token,'!'),bracket_left:new Ee('bracket_left',l.token,'['),bracket_right:new Ee('bracket_right',l.token,']'),brace_left:new Ee('brace_left',l.token,'{'),brace_right:new Ee('brace_right',l.token,'}'),colon:new Ee('colon',l.token,':'),comma:new Ee('comma',l.token,','),equal:new Ee('equal',l.token,'='),equal_equal:new Ee('equal_equal',l.token,'=='),not_equal:new Ee('not_equal',l.token,'!='),greater_than:new Ee('greater_than',l.token,'>'),greater_than_equal:new Ee('greater_than_equal',l.token,'>='),shift_right:new Ee('shift_right',l.token,'>>'),less_than:new Ee('less_than',l.token,'<'),less_than_equal:new Ee('less_than_equal',l.token,'<='),shift_left:new Ee('shift_left',l.token,'<<'),modulo:new Ee('modulo',l.token,'%'),minus:new Ee('minus',l.token,'-'),minus_minus:new Ee('minus_minus',l.token,'--'),period:new Ee('period',l.token,'.'),plus:new Ee('plus',l.token,'+'),plus_plus:new Ee('plus_plus',l.token,'++'),or:new Ee('or',l.token,'|'),or_or:new Ee('or_or',l.token,'||'),paren_left:new Ee('paren_left',l.token,'('),paren_right:new Ee('paren_right',l.token,')'),semicolon:new Ee('semicolon',l.token,';'),star:new Ee('star',l.token,'*'),tilde:new Ee('tilde',l.token,'~'),underscore:new Ee('underscore',l.token,'_'),xor:new Ee('xor',l.token,'^'),plus_equal:new Ee('plus_equal',l.token,'+='),minus_equal:new Ee('minus_equal',l.token,'-='),times_equal:new Ee('times_equal',l.token,'*='),division_equal:new Ee('division_equal',l.token,'/='),modulo_equal:new Ee('modulo_equal',l.token,'%='),and_equal:new Ee('and_equal',l.token,'&='),or_equal:new Ee('or_equal',l.token,'|='),xor_equal:new Ee('xor_equal',l.token,'^='),shift_right_equal:new Ee('shift_right_equal',l.token,'>>='),shift_left_equal:new Ee('shift_left_equal',l.token,'<<=')},Ae.simpleTokens={'@':u.tokens.attr,'{':u.tokens.brace_left,'}':u.tokens.brace_right,':':u.tokens.colon,',':u.tokens.comma,'(':u.tokens.paren_left,')':u.tokens.paren_right,';':u.tokens.semicolon},Ae.literalTokens={'&':u.tokens.and,'&&':u.tokens.and_and,'->':u.tokens.arrow,'/':u.tokens.forward_slash,'!':u.tokens.bang,'[':u.tokens.bracket_left,']':u.tokens.bracket_right,'=':u.tokens.equal,'==':u.tokens.equal_equal,'!=':u.tokens.not_equal,'>':u.tokens.greater_than,'>=':u.tokens.greater_than_equal,'>>':u.tokens.shift_right,'<':u.tokens.less_than,'<=':u.tokens.less_than_equal,'<<':u.tokens.shift_left,'%':u.tokens.modulo,'-':u.tokens.minus,'--':u.tokens.minus_minus,'.':u.tokens.period,'+':u.tokens.plus,'++':u.tokens.plus_plus,'|':u.tokens.or,'||':u.tokens.or_or,'*':u.tokens.star,'~':u.tokens.tilde,_:u.tokens.underscore,'^':u.tokens.xor,'+=':u.tokens.plus_equal,'-=':u.tokens.minus_equal,'*=':u.tokens.times_equal,'/=':u.tokens.division_equal,'%=':u.tokens.modulo_equal,'&=':u.tokens.and_equal,'|=':u.tokens.or_equal,'^=':u.tokens.xor_equal,'>>=':u.tokens.shift_right_equal,'<<=':u.tokens.shift_left_equal},Ae.regexTokens={decimal_float_literal:u.tokens.decimal_float_literal,hex_float_literal:u.tokens.hex_float_literal,int_literal:u.tokens.int_literal,uint_literal:u.tokens.uint_literal,ident:u.tokens.ident},Ae.storage_class=[u.keywords.function,u.keywords.private,u.keywords.workgroup,u.keywords.uniform,u.keywords.storage],Ae.access_mode=[u.keywords.read,u.keywords.write,u.keywords.read_write],Ae.sampler_type=[u.keywords.sampler,u.keywords.sampler_comparison],Ae.sampled_texture_type=[u.keywords.texture_1d,u.keywords.texture_2d,u.keywords.texture_2d_array,u.keywords.texture_3d,u.keywords.texture_cube,u.keywords.texture_cube_array],Ae.multisampled_texture_type=[u.keywords.texture_multisampled_2d],Ae.storage_texture_type=[u.keywords.texture_storage_1d,u.keywords.texture_storage_2d,u.keywords.texture_storage_2d_array,u.keywords.texture_storage_3d],Ae.depth_texture_type=[u.keywords.texture_depth_2d,u.keywords.texture_depth_2d_array,u.keywords.texture_depth_cube,u.keywords.texture_depth_cube_array,u.keywords.texture_depth_multisampled_2d],Ae.texture_external_type=[u.keywords.texture_external],Ae.any_texture_type=[...u.sampled_texture_type,...u.multisampled_texture_type,...u.storage_texture_type,...u.depth_texture_type,...u.texture_external_type],Ae.texel_format=[u.keywords.r8unorm,u.keywords.r8snorm,u.keywords.r8uint,u.keywords.r8sint,u.keywords.r16uint,u.keywords.r16sint,u.keywords.r16float,u.keywords.rg8unorm,u.keywords.rg8snorm,u.keywords.rg8uint,u.keywords.rg8sint,u.keywords.r32uint,u.keywords.r32sint,u.keywords.r32float,u.keywords.rg16uint,u.keywords.rg16sint,u.keywords.rg16float,u.keywords.rgba8unorm,u.keywords.rgba8unorm_srgb,u.keywords.rgba8snorm,u.keywords.rgba8uint,u.keywords.rgba8sint,u.keywords.bgra8unorm,u.keywords.bgra8unorm_srgb,u.keywords.rgb10a2unorm,u.keywords.rg11b10float,u.keywords.rg32uint,u.keywords.rg32sint,u.keywords.rg32float,u.keywords.rgba16uint,u.keywords.rgba16sint,u.keywords.rgba16float,u.keywords.rgba32uint,u.keywords.rgba32sint,u.keywords.rgba32float],Ae.const_literal=[u.tokens.int_literal,u.tokens.uint_literal,u.tokens.decimal_float_literal,u.tokens.hex_float_literal,u.keywords.true,u.keywords.false],Ae.literal_or_ident=[u.tokens.ident,u.tokens.int_literal,u.tokens.uint_literal,u.tokens.decimal_float_literal,u.tokens.hex_float_literal,u.tokens.name],Ae.element_count_expression=[u.tokens.int_literal,u.tokens.uint_literal,u.tokens.ident],Ae.template_types=[u.keywords.vec2,u.keywords.vec3,u.keywords.vec4,u.keywords.mat2x2,u.keywords.mat2x3,u.keywords.mat2x4,u.keywords.mat3x2,u.keywords.mat3x3,u.keywords.mat3x4,u.keywords.mat4x2,u.keywords.mat4x3,u.keywords.mat4x4,u.keywords.atomic,u.keywords.bitcast,...u.any_texture_type],Ae.attribute_name=[u.tokens.ident,u.keywords.block,u.keywords.diagnostic],Ae.assignment_operators=[u.tokens.equal,u.tokens.plus_equal,u.tokens.minus_equal,u.tokens.times_equal,u.tokens.division_equal,u.tokens.modulo_equal,u.tokens.and_equal,u.tokens.or_equal,u.tokens.xor_equal,u.tokens.shift_right_equal,u.tokens.shift_left_equal],Ae.increment_operators=[u.tokens.plus_plus,u.tokens.minus_minus];class $e{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=Ae.template_types.indexOf(this.type)}isArrayType(){return this.type==Ae.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class Ve{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:''}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new $e(Ae.eof,'',this._line)),this._tokens}scanToken(){let e=this._advance();if('\\n'==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if('/'==e){if('/'==this._peekAhead()){for(;'\\n'!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if('*'==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),'\\n'==e)this._line++;else if('*'==e){if('/'==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else'/'==e&&'*'==this._peekAhead()&&(this._advance(),t++)}return!0}}const t=Ae.simpleTokens[e];if(t)return this._addToken(t),!0;let n=Ae.none;const s=this._isAlpha(e),r='_'===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead()}if(s){const t=Ae.keywords[e];if(t)return this._addToken(t),!0}if(s||r)return this._addToken(Ae.tokens.ident),!0;for(;;){let t=this._findType(e);const s=this._peekAhead();if('-'==e&&this._tokens.length>0){if('='==s)return this._current++,e+=s,this._addToken(Ae.tokens.minus_equal),!0;if('-'==s)return this._current++,e+=s,this._addToken(Ae.tokens.minus_minus),!0;const n=this._tokens.length-1;if((-1!=Ae.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==Ae.tokens.paren_right)&&'>'!=s)return this._addToken(t),!0}if('>'==e&&('>'==s||'='==s)){let e=!1,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===Ae.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===Ae.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(t),!0}if(t===Ae.none){let s=e,r=0;const a=2;for(let e=0;e<a;++e)if(s+=this._peekAhead(e),t=this._findType(s),t!==Ae.none){r=e;break}if(t===Ae.none)return n!==Ae.none&&(this._current--,this._addToken(n),!0);e=s,this._current+=r+1}if(n=t,this._isAtEnd())break;e+=this._advance()}return n!==Ae.none&&(this._addToken(n),!0)}_findType(e){for(const t in Ae.regexTokens){const n=Ae.regexTokens[t];if(this._match(e,n.rule))return n}const t=Ae.literalTokens[e];return t||Ae.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return e>='a'&&e<='z'||e>='A'&&e<='Z'}_isAlphaNumeric(e){return e>='a'&&e<='z'||e>='A'&&e<='Z'||'_'==e||e>='0'&&e<='9'}_isWhitespace(e){return' '==e||'\\t'==e||'\\r'==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?'\\0':this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new $e(e,t,this._line))}}class Ne{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class Le{constructor(e,t){this.align=e,this.size=t}}class Oe{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new v,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return'texture_storage_1d'==e.name||'texture_storage_2d'==e.name||'texture_storage_2d_array'==e.name||'texture_storage_3d'==e.name}updateAST(e){for(const t of e)t instanceof k&&this._functions.set(t.name,new Ne(t));for(const t of e)if(t instanceof Z){const e=this.getTypeInfo(t,null);e instanceof n&&this.structs.push(e)}for(const t of e)if(t instanceof R)this.aliases.push(this._getAliasInfo(t));else if(t instanceof $){const e=t,n=this._getAttributeNum(e.attributes,'id',0),s=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new m(e.name,s,e.attributes,n))}else if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=new c(e.name,r,n,s,e.attributes,a.Uniform,e.access);this.uniforms.push(i)}else if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=this._isStorageTexture(r),o=new c(e.name,r,n,s,e.attributes,i?a.StorageTexture:a.Storage,e.access);this.storage.push(o)}else if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=this._isStorageTexture(r),o=new c(e.name,r,n,s,e.attributes,i?a.StorageTexture:a.Texture,e.access);i?this.storage.push(o):this.textures.push(o)}else if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=new c(e.name,r,n,s,e.attributes,a.Sampler,e.access);this.samplers.push(i)}else if(t instanceof k){const e=this._getAttribute(t,'vertex'),n=this._getAttribute(t,'fragment'),s=this._getAttribute(t,'compute'),r=e||n||s,a=new _(t.name,null==r?void 0:r.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,r&&(this._functions.get(t.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(t,!!r),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(a)),a.arguments=t.args.map((e=>new d(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes))),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null}else;for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search((t=>{var n;if('varExpr'===t.astNodeType){const s=t;for(const t of this.overrides)s.name==t.name&&(null===(n=e.info)||void 0===n||n.overrides.push(t))}}));for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type)}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const s of e.calls){const e=null===(n=this._functions.get(s.name))||void 0===n?void 0:n.info;e&&t.add(e)}}findResource(e,t){for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],s=this,r=[];return e.search((a=>{if(a instanceof y)r.push({});else if(a instanceof w)r.pop();else if(a instanceof A){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof ee){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type)}else if(a instanceof V){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof ne){const e=a;if(r.length>0){if(r[r.length-1][e.name])return}const t=s._findResource(e.name);t&&n.push(t)}else if(a instanceof te){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}else if(a instanceof D){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}})),[...new Map(n.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=n}return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof Z)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Z)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,'location')||this._getAttribute(n,'builtin');if(null!==e){const s=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),a=new p(n.name,s,e.name,r);t.push(a)}}}_getOutputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new p('',n,t.name,s)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof Z)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Z)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this._getAttribute(e,'interpolation'),s=this.getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),a=new f(e.name,s,t.name,r);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new h(e.name,this.getTypeInfo(e.type,null))}getTypeInfo(a,i=null){if(this._types.has(a))return this._types.get(a);if(a instanceof Y){const e=a,t=e.format?this.getTypeInfo(e.format,e.attributes):null,n=new s(e.name,i);return n.format=t,n.count=e.count,this._types.set(a,n),this._updateTypeInfo(n),n}if(a instanceof Z){const e=a,s=new n(e.name,i);s.startLine=e.startLine,s.endLine=e.endLine;for(const n of e.members){const e=this.getTypeInfo(n.type,n.attributes);s.members.push(new t(n.name,e,n.attributes))}return this._types.set(a,s),this._updateTypeInfo(s),s}if(a instanceof K){const t=a,n=t.format instanceof X,s=t.format?n?this.getTypeInfo(t.format,null):new e(t.format,null):null,o=new r(t.name,s,i,t.access);return this._types.set(a,o),this._updateTypeInfo(o),o}if(a instanceof j){const e=a,t=e.format?this.getTypeInfo(e.format,null):null,n=new r(e.name,t,i,e.access);return this._types.set(a,n),this._updateTypeInfo(n),n}const o=new e(a.name,i);return this._types.set(a,o),this._updateTypeInfo(o),o}_updateTypeInfo(e){var t,r,a;const i=this._getTypeSize(e);if(e.size=null!==(t=null==i?void 0:i.size)&&void 0!==t?t:0,e instanceof s&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(r=null==t?void 0:t.size)&&void 0!==r?r:0,null!==(a=null==t?void 0:t.align)&&void 0!==a?a:0),this._updateTypeInfo(e.format)}e instanceof n&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,s=0,r=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],u=this._getTypeSize(o);if(!u)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const l=u.align,c=u.size;n=this._roundUp(l,n+s),s=c,r=n,a=Math.max(a,l),o.offset=n,o.size=c,this._updateTypeInfo(o.type)}e.size=this._roundUp(a,r+s),e.align=a}_getTypeSize(r){var a,i;if(null==r)return null;const o=this._getAttributeNum(r.attributes,'size',0),u=this._getAttributeNum(r.attributes,'align',0);if(r instanceof t&&(r=r.type),r instanceof e){const e=this._getAlias(r.name);null!==e&&(r=e)}{const e=Oe._typeInfo[r.name];if(void 0!==e){const t='f16'===(null===(a=r.format)||void 0===a?void 0:a.name)?2:1;return new Le(Math.max(u,e.align/t),Math.max(o,e.size/t))}}{const e=Oe._typeInfo[r.name.substring(0,r.name.length-1)];if(e){const t='h'===r.name[r.name.length-1]?2:1;return new Le(Math.max(u,e.align/t),Math.max(o,e.size/t))}}if(r instanceof s){let e=r,t=8,n=8;const s=this._getTypeSize(e.format);null!==s&&(n=s.size,t=s.align);return n=e.count*this._getAttributeNum(null!==(i=null==r?void 0:r.attributes)&&void 0!==i?i:null,'stride',this._roundUp(t,n)),o&&(n=o),new Le(Math.max(u,t),Math.max(o,n))}if(r instanceof n){let e=0,t=0,n=0,s=0,a=0;for(const t of r.members){const r=this._getTypeSize(t.type);null!==r&&(e=Math.max(r.align,e),n=this._roundUp(r.align,n+s),s=r.size,a=n)}return t=this._roundUp(e,a+s),new Le(Math.max(u,e),Math.max(o,t))}return null}_isUniformVar(e){return e instanceof A&&'uniform'==e.storage}_isStorageVar(e){return e instanceof A&&'storage'==e.storage}_isTextureVar(e){return e instanceof A&&null!==e.type&&-1!=Oe._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof A&&null!==e.type&&-1!=Oe._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let e of s)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let s of e)if(s.name==t){let e=null!==s&&null!==s.value?s.value:n;return e instanceof Array&&(e=e[0]),'number'==typeof e?e:'string'==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}Oe._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Oe._textureTypes=Ae.any_texture_type.map((e=>e.name)),Oe._samplerTypes=Ae.sampler_type.map((e=>e.name));class De{constructor(e,t,n){this.name=e,this.value=t,this.node=n}clone(){return new De(this.name,this.value,this.node)}}class Ce{constructor(e){this.name=e.name,this.node=e}clone(){return new Ce(this.node)}}class Me{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName='',e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&void 0!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&void 0!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new De(e,t,null!=n?n:null))}setVariable(e,t,n){const s=this.getVariable(e);null!==s?s.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?void 0:n.value)&&void 0!==t?t:null}clone(){return new Me(this)}}class Fe{evalExpression(e,t){return null}getTypeName(e){return''}getTypeInfo(e){return null}getVariableName(e,t){return''}}class Ue{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=!0;if(n instanceof Ie)return n.value.forEach((e=>{e||(s=!1)})),new be(s?1:0,this.getTypeInfo('bool'));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){const e=n.value.some((e=>e));return new be(e?1:0,this.getTypeInfo('bool'))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof be))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof Se&&0===s.typeInfo.size){const e=s.typeInfo,t=s.buffer.byteLength/e.stride;return new be(t,this.getTypeInfo('u32'))}return new be(s.typeInfo.size,this.getTypeInfo('u32'))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.abs(e))),n.typeInfo);const s=n;return new be(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.acos(e))),n.typeInfo);const s=n;return new be(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.acosh(e))),n.typeInfo);const s=n;return new be(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.asin(e))),n.typeInfo);const s=n;return new be(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.asinh(e))),n.typeInfo);const s=n;return new be(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.atan(e))),n.typeInfo);const s=n;return new be(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.atanh(e))),n.typeInfo);const s=n;return new be(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.atan2(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.atan2(r.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.ceil(e))),n.typeInfo);const s=n;return new be(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return new Ie(n.value.map(((e,t)=>this._clamp(e,s.value[t],r.value[t]))),n.typeInfo);const a=n,i=s,o=r;return new be(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.cos(e))),n.typeInfo);const s=n;return new be(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.cosh(e))),n.typeInfo);const s=n;return new be(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.clz32(e))),n.typeInfo);const s=n;return new be(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._countOneBits(e))),n.typeInfo);const s=n;return new be(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._countTrailingZeros(e))),n.typeInfo);const s=n;return new be(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){if(3!==n.value.length||3!==s.value.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.value,r=s.value;return new Ie([t[1]*r[2]-r[1]*t[2],t[2]*r[0]-r[2]*t[0],t[0]*r[1]-r[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;if(n instanceof Ie)return new Ie(n.value.map((e=>e*s)),n.typeInfo);return new be(n.value*s,n.typeInfo)}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Te){const e=n.value,t=this.exec.getTypeName(n.typeInfo),s=t.endsWith('h')?this.getTypeInfo('f16'):this.getTypeInfo('f32');if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t)return new be(e[0]*e[3]-e[1]*e[2],s);if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t)return new be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t)console.error(`TODO: Determinant for ${t}`);else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t)console.error(`TODO: Determinant for ${t}`);else{if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t)return new be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);'mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t||'mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t||'mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t?console.error(`TODO: Determinant for ${t}`):'mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t||console.error(`TODO: Determinant for ${t}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){let e=0;for(let t=0;t<n.value.length;++t)e+=(n.value[t]-s.value[t])*(n.value[t]-s.value[t]);return new be(Math.sqrt(e),this.getTypeInfo('f32'))}const r=n,a=s;return new be(Math.abs(r.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof Ie&&s instanceof Ie?new be(this._dot(n.value,s.value),this.getTypeInfo('f32')):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.exp(e))),n.typeInfo);const s=n;return new be(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.pow(2,e))),n.typeInfo);const s=n;return new be(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if('u32'!==s.typeInfo.name&&'x32'!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=s.value,i=r.value;if(n instanceof Ie)return new Ie(n.value.map((e=>e>>a&(1<<i)-1)),n.typeInfo);if('i32'!==n.typeInfo.name&&'x32'!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new be(o>>a&(1<<i)-1,this.getTypeInfo('i32'))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie){const e=this._dot(s.value,r.value);return new Ie(e<0?n.value:n.value.map((e=>-e)),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._firstLeadingBit(e))),n.typeInfo);const s=n;return new be(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._firstTrailingBit(e))),n.typeInfo);const s=n;return new be(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.floor(e))),n.typeInfo);const s=n;return new be(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return n.value.length!==s.value.length||n.value.length!==r.value.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new Ie(n.value.map(((e,t)=>e*s.value[t]+r.value[t])),n.typeInfo);const a=n,i=s,o=r;return new be(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e-Math.floor(e))),n.typeInfo);const s=n;return new be(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=r.value,o=(1<<a.value)-1<<i,u=~o;if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>e&u|s.value[t]<<i&o)),n.typeInfo);const l=n.value,c=s.value;return new be(l&u|c<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>1/Math.sqrt(e))),n.typeInfo);const s=n;return new be(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){let e=0;return n.value.forEach((t=>{e+=t*t})),new be(Math.sqrt(e),this.getTypeInfo('f32'))}const s=n;return new be(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.log(e))),n.typeInfo);const s=n;return new be(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.log2(e))),n.typeInfo);const s=n;return new be(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.max(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.max(r.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.min(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.min(r.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return new Ie(n.value.map(((e,t)=>n.value[t]*(1-r.value[t])+s.value[t]*r.value[t])),n.typeInfo);const a=s,i=r;return new be(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>e%s.value[t])),n.typeInfo);const r=s;return new be(n.value%r.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){const s=this.Length(e,t).value;return new Ie(n.value.map((e=>e/s)),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.pow(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.pow(r.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e)),n.typeInfo);return new be(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e*Math.PI/180)),n.typeInfo);return new be(n.value*Math.PI/180,n.typeInfo)}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){const e=this._dot(n.value,s.value);return new Ie(n.value.map(((t,n)=>t-2*e*s.value[n])),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof be){const e=this._dot(s.value,n.value);return new Ie(n.value.map(((t,n)=>{const a=1-r.value*r.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return r.value*t-(r.value*e+i)*s.value[n]})),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.round(e))),n.typeInfo);const s=n;return new be(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.min(Math.max(e,0),1))),n.typeInfo);const s=n;return new be(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sign(e))),n.typeInfo);const s=n;return new be(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sin(e))),n.typeInfo);const s=n;return new be(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sinh(e))),n.typeInfo);const s=n;return new be(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(r instanceof Ie&&n instanceof Ie&&s instanceof Ie)return new Ie(r.value.map(((e,t)=>this._smoothstep(n.value[t],s.value[t],e))),r.typeInfo);const a=n,i=s,o=r;return new be(this._smoothstep(a.value,i.value,o.value),r.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sqrt(e))),n.typeInfo);const s=n;return new be(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof Ie&&n instanceof Ie)return new Ie(s.value.map(((e,t)=>e<n.value[t]?0:1)),s.typeInfo);const r=n;return new be(s.value<r.value?0:1,r.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.tan(e))),n.typeInfo);const s=n;return new be(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.tanh(e))),n.typeInfo);const s=n;return new be(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=this.exec.getTypeName(e);return'mat2x2f'===t||'mat2x2h'===t?e:'mat2x3f'===t?this.getTypeInfo('mat3x2f'):'mat2x3h'===t?this.getTypeInfo('mat3x2h'):'mat2x4f'===t?this.getTypeInfo('mat4x2f'):'mat2x4h'===t?this.getTypeInfo('mat4x2h'):'mat3x2f'===t?this.getTypeInfo('mat2x3f'):'mat3x2h'===t?this.getTypeInfo('mat2x3h'):'mat3x3f'===t||'mat3x3h'===t?e:'mat3x4f'===t?this.getTypeInfo('mat4x3f'):'mat3x4h'===t?this.getTypeInfo('mat4x3h'):'mat4x2f'===t?this.getTypeInfo('mat2x4f'):'mat4x2h'===t?this.getTypeInfo('mat2x4h'):'mat4x3f'===t?this.getTypeInfo('mat3x4f'):'mat4x3h'===t?this.getTypeInfo('mat3x4h'):('mat4x4f'===t||'mat4x4h'===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof Te))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if('mat2x2'===n.typeInfo.name||'mat2x2f'===n.typeInfo.name||'mat2x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[2],e[1],e[3]],s)}if('mat2x3'===n.typeInfo.name||'mat2x3f'===n.typeInfo.name||'mat2x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[6],e[1],e[4],e[7]],s)}if('mat2x4'===n.typeInfo.name||'mat2x4f'===n.typeInfo.name||'mat2x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],s)}if('mat3x2'===n.typeInfo.name||'mat3x2f'===n.typeInfo.name||'mat3x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[1],e[4],e[2],e[5]],s)}if('mat3x3'===n.typeInfo.name||'mat3x3f'===n.typeInfo.name||'mat3x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],s)}if('mat3x4'===n.typeInfo.name||'mat3x4f'===n.typeInfo.name||'mat3x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],s)}if('mat4x2'===n.typeInfo.name||'mat4x2f'===n.typeInfo.name||'mat4x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[1],e[5],e[2],e[6]],s)}if('mat4x3'===n.typeInfo.name||'mat4x3f'===n.typeInfo.name||'mat4x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],s)}if('mat4x4'===n.typeInfo.name||'mat4x4f'===n.typeInfo.name||'mat4x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.trunc(e))),n.typeInfo);const s=n;return new be(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error('TODO: dpdxFine'),null}Dpdy(e,t){return console.error('TODO: dpdy'),null}DpdyCoarse(e,t){return console.error('TODO: dpdyCoarse'),null}DpdyFine(e,t){return console.error('TODO: dpdyFine'),null}Fwidth(e,t){return console.error('TODO: fwidth'),null}FwidthCoarse(e,t){return console.error('TODO: fwidthCoarse'),null}FwidthFine(e,t){return console.error('TODO: fwidthFine'),null}TextureDimensions(e,t){const n=e.args[0];if((e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0)>0)return console.error(`TODO: Mip levels. Line ${e.line}`),null;if(n instanceof ne){const s=n.name,r=t.getVariableValue(s);return r instanceof Se?new Ie(r.textureSize,this.getTypeInfo('vec2u')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error('TODO: textureGather'),null}TextureGatherCompare(e,t){return console.error('TODO: textureGatherCompare'),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t);if((e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0)>0)return console.error(`TODO: Mip levels. Line ${e.line}`),null;if(!(s instanceof Ie)||2!==s.value.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof ne){const r=n.name,a=t.getVariableValue(r);if(a instanceof Se){const t=a.textureSize,n=Math.floor(s.value[0]),i=Math.floor(s.value[1]);if(n<0||n>=t[0]||i<0||i>=t[1])return console.error(`Texture ${r} out of bounds. Line ${e.line}`),null;const o=4*(i*t[0]+n),u=new Uint8Array(a.buffer,o,4);return new Ie([u[0]/255,u[1]/255,u[2]/255,u[3]/255],this.getTypeInfo('vec4f'))}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){return console.error('TODO: textureNumLayers'),null}TextureNumLevels(e,t){return console.error('TODO: textureNumLevels'),null}TextureNumSamples(e,t){return console.error('TODO: textureNumSamples'),null}TextureSample(e,t){return console.error('TODO: textureSample'),null}TextureSampleBias(e,t){return console.error('TODO: textureSampleBias'),null}TextureSampleCompare(e,t){return console.error('TODO: textureSampleCompare'),null}TextureSampleCompareLevel(e,t){return console.error('TODO: textureSampleCompareLevel'),null}TextureSampleGrad(e,t){return console.error('TODO: textureSampleGrad'),null}TextureSampleLevel(e,t){return console.error('TODO: textureSampleLevel'),null}TextureSampleBaseClampToEdge(e,t){return console.error('TODO: textureSampleBaseClampToEdge'),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t).value;if(4!==r.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof Ie)||2!==s.value.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof ne){const a=n.name,i=t.getVariableValue(a);if(i instanceof Se){const t=i.textureSize,n=Math.floor(s.value[0]),o=Math.floor(s.value[1]);if(n<0||n>=t[0]||o<0||o>=t[1])return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const u=4*(o*t[0]+n),l=new Uint8Array(i.buffer,u,4);return l[0]=255*r[0],l[1]=255*r[1],l[2]=255*r[2],l[3]=255*r[3],null}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getDataValue(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value+=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicSub(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value-=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicMax(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=Math.max(o.value,i.value)),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicMin(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=Math.min(o.value,i.value)),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicAnd(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value&i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicOr(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value|i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicXor(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value^i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicExchange(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicCompareExchangeWeak(e,t){return console.error('TODO: atomicCompareExchangeWeak'),null}Pack4x8snorm(e,t){return console.error('TODO: pack4x8snorm'),null}Pack4x8unorm(e,t){return console.error('TODO: pack4x8unorm'),null}Pack4xI8(e,t){return console.error('TODO: pack4xI8'),null}Pack4xU8(e,t){return console.error('TODO: pack4xU8'),null}Pack4x8Clamp(e,t){return console.error('TODO: pack4x8Clamp'),null}Pack4xU8Clamp(e,t){return console.error('TODO: pack4xU8Clamp'),null}Pack2x16snorm(e,t){return console.error('TODO: pack2x16snorm'),null}Pack2x16unorm(e,t){return console.error('TODO: pack2x16unorm'),null}Pack2x16float(e,t){return console.error('TODO: pack2x16float'),null}Unpack4x8snorm(e,t){return console.error('TODO: unpack4x8snorm'),null}Unpack4x8unorm(e,t){return console.error('TODO: unpack4x8unorm'),null}Unpack4xI8(e,t){return console.error('TODO: unpack4xI8'),null}Unpack4xU8(e,t){return console.error('TODO: unpack4xU8'),null}Unpack2x16snorm(e,t){return console.error('TODO: unpack2x16snorm'),null}Unpack2x16unorm(e,t){return console.error('TODO: unpack2x16unorm'),null}Unpack2x16float(e,t){return console.error('TODO: unpack2x16float'),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error('TODO: subgroupAdd'),null}SubgroupExclusiveAdd(e,t){return console.error('TODO: subgroupExclusiveAdd'),null}SubgroupInclusiveAdd(e,t){return console.error('TODO: subgroupInclusiveAdd'),null}SubgroupAll(e,t){return console.error('TODO: subgroupAll'),null}SubgroupAnd(e,t){return console.error('TODO: subgroupAnd'),null}SubgroupAny(e,t){return console.error('TODO: subgroupAny'),null}SubgroupBallot(e,t){return console.error('TODO: subgroupBallot'),null}SubgroupBroadcast(e,t){return console.error('TODO: subgroupBroadcast'),null}SubgroupBroadcastFirst(e,t){return console.error('TODO: subgroupBroadcastFirst'),null}SubgroupElect(e,t){return console.error('TODO: subgroupElect'),null}SubgroupMax(e,t){return console.error('TODO: subgroupMax'),null}SubgroupMin(e,t){return console.error('TODO: subgroupMin'),null}SubgroupMul(e,t){return console.error('TODO: subgroupMul'),null}SubgroupExclusiveMul(e,t){return console.error('TODO: subgroupExclusiveMul'),null}SubgroupInclusiveMul(e,t){return console.error('TODO: subgroupInclusiveMul'),null}SubgroupOr(e,t){return console.error('TODO: subgroupOr'),null}SubgroupShuffle(e,t){return console.error('TODO: subgroupShuffle'),null}SubgroupShuffleDown(e,t){return console.error('TODO: subgroupShuffleDown'),null}SubgroupShuffleUp(e,t){return console.error('TODO: subgroupShuffleUp'),null}SubgroupShuffleXor(e,t){return console.error('TODO: subgroupShuffleXor'),null}SubgroupXor(e,t){return console.error('TODO: subgroupXor'),null}QuadBroadcast(e,t){return console.error('TODO: quadBroadcast'),null}QuadSwapDiagonal(e,t){return console.error('TODO: quadSwapDiagonal'),null}QuadSwapX(e,t){return console.error('TODO: quadSwapX'),null}QuadSwapY(e,t){return console.error('TODO: quadSwapY'),null}}function qe(e){return Array.isArray(e)||(null==e?void 0:e.buffer)instanceof ArrayBuffer}const Be=new Float32Array(1),ze=new Uint32Array(Be.buffer),Re=new Uint32Array(Be.buffer),Ge=new Int32Array(1),We=new Float32Array(Ge.buffer),Pe=new Uint32Array(Ge.buffer),Xe=new Uint32Array(1),Ze=new Float32Array(Xe.buffer),je=new Int32Array(Xe.buffer);function Qe(e,t,n){if(t===n)return e;if('f32'===t){if('i32'===n||'x32'===n)return Be[0]=e,ze[0];if('u32'===n)return Be[0]=e,Re[0]}else if('i32'===t||'x32'===t){if('f32'===n)return Ge[0]=e,We[0];if('u32'===n)return Ge[0]=e,Pe[0]}else if('u32'===t){if('f32'===n)return Xe[0]=e,Ze[0];if('i32'===n||'x32'===n)return Xe[0]=e,je[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class Ye extends Fe{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new Oe,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?void 0:t.clone())&&void 0!==n?n:new Me,this.builtins=new Ue(this),this.typeInfo={bool:this.getTypeInfo(X.bool),i32:this.getTypeInfo(X.i32),u32:this.getTypeInfo(X.u32),f32:this.getTypeInfo(X.f32),f16:this.getTypeInfo(X.f16),vec2f:this.getTypeInfo(j.vec2f),vec2u:this.getTypeInfo(j.vec2u),vec2i:this.getTypeInfo(j.vec2i),vec2h:this.getTypeInfo(j.vec2h),vec3f:this.getTypeInfo(j.vec3f),vec3u:this.getTypeInfo(j.vec3u),vec3i:this.getTypeInfo(j.vec3i),vec3h:this.getTypeInfo(j.vec3h),vec4f:this.getTypeInfo(j.vec4f),vec4u:this.getTypeInfo(j.vec4u),vec4i:this.getTypeInfo(j.vec4i),vec4h:this.getTypeInfo(j.vec4h),mat2x2f:this.getTypeInfo(j.mat2x2f),mat2x3f:this.getTypeInfo(j.mat2x3f),mat2x4f:this.getTypeInfo(j.mat2x4f),mat3x2f:this.getTypeInfo(j.mat3x2f),mat3x3f:this.getTypeInfo(j.mat3x3f),mat3x4f:this.getTypeInfo(j.mat3x4f),mat4x2f:this.getTypeInfo(j.mat4x2f),mat4x3f:this.getTypeInfo(j.mat4x3f),mat4x4f:this.getTypeInfo(j.mat4x4f)}}getVariableValue(e){var t,n;const s=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;return null===s?null:s instanceof be||s instanceof Ie||s instanceof Te?s.value:(console.error(`Unsupported return variable type ${s.typeInfo.name}`),null)}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,s){const r=this.context.clone();(s=null!=s?s:{}).constants&&this._setOverrides(s.constants,r),this._execStatements(this.ast,r);const a=r.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if('number'==typeof t)t=[t,1,1];else{if(0===t.length)return void console.error('Invalid dispatch count');1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const i=t[0],o=t[1],u=t[2],l=this.getTypeInfo('vec3u');r.setVariable('@num_workgroups',new Ie(t,l));for(const e in n)for(const t in n[e]){const s=n[e][t];r.variables.forEach((n=>{const r=n.node;if(null==r?void 0:r.attributes){let a=null,i=null;for(const e of r.attributes)'binding'===e.name?a=e.value:'group'===e.name&&(i=e.value);t==a&&e==i&&(void 0!==s.texture&&void 0!==s.size?n.value=new Se(s.texture,this.getTypeInfo(r.type),0,s.size):void 0!==s.uniform?n.value=new Se(s.uniform,this.getTypeInfo(r.type)):n.value=new Se(s,this.getTypeInfo(r.type)))}}))}for(let e=0;e<u;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)r.setVariable('@workgroup_id',new Ie([n,t,e],this.getTypeInfo('vec3u'))),this._dispatchWorkgroup(a,[n,t,e],r)}execStatement(e,t){if(e instanceof U)return this.evalExpression(e.value,t);if(e instanceof W){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof be))throw new Error('Invalid break-if condition');if(!n.value)return null}return Ye._breakObj}if(e instanceof P)return Ye._continueObj;if(e instanceof V)this._let(e,t);else if(e instanceof A)this._var(e,t);else if(e instanceof N)this._const(e,t);else if(e instanceof k)this._function(e,t);else{if(e instanceof F)return this._if(e,t);if(e instanceof M)return this._switch(e,t);if(e instanceof E)return this._for(e,t);if(e instanceof T)return this._while(e,t);if(e instanceof C)return this._loop(e,t);if(e instanceof S){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof O)this._assign(e,t);else if(e instanceof L)this._increment(e,t);else{if(e instanceof Z)return null;if(e instanceof $){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new be(0,this.getTypeInfo('u32')))}else if(e instanceof D)this._call(e,t);else{if(e instanceof z)return null;if(e instanceof R)return null;console.error('Invalid statement type.',e,`Line ${e.line}`)}}}return null}evalExpression(e,t){for(;e instanceof oe;)e=e.contents[0];return e instanceof he?this._evalBinaryOp(e,t):e instanceof re?this._evalLiteral(e,t):e instanceof ne?this._evalVariable(e,t):e instanceof te?this._evalCall(e,t):e instanceof ee?this._evalCreate(e,t):e instanceof se?this._evalConst(e,t):e instanceof ae?this._evalBitcast(e,t):e instanceof ce?this._evalUnaryOp(e,t):(console.error('Invalid expression type',e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof X){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}const n=null!==(t=this.typeInfo[e])&&void 0!==t?t:null;return null!==n?n:null}getTypeName(e){if(null===e)return console.error('Type is null.'),'unknown';let t=e.name;if(e instanceof r||e instanceof j)if(null!==e.format){if('vec2'===t||'vec3'===t||'vec4'===t||'mat2x2'===t||'mat2x3'===t||'mat2x4'===t||'mat3x2'===t||'mat3x3'===t||'mat3x4'===t||'mat4x2'===t||'mat4x3'===t||'mat4x4'===t){if('f32'===e.format.name)return t+='f',t;if('i32'===e.format.name)return t+='i',t;if('u32'===e.format.name)return t+='u',t;if('bool'===e.format.name)return t+='b',t;if('f16'===e.format.name)return t+='h',t}t+=`<${e.format.name}>`}else if('vec2'===t||'vec3'===t||'vec4'===t)return t;return t}_setOverrides(e,t){for(const n in e){const s=e[n],r=this.reflection.getOverrideInfo(n);null!==r?'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Ie(s,r.type)):console.error(`Invalid constant type for ${n}`):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof be?e.value:parseInt(t.value[2])}}const r=this.getTypeInfo('vec3u'),a=this.getTypeInfo('u32');n.setVariable('@workgroup_size',new Ie(s,r));const i=s[0],o=s[1],u=s[2];for(let l=0,c=0;l<u;++l)for(let u=0;u<o;++u)for(let o=0;o<i;++o,++c){const i=[o,u,l],h=[o+t[0]*s[0],u+t[1]*s[1],l+t[2]*s[2]];n.setVariable('@local_invocation_id',new Ie(i,r)),n.setVariable('@global_invocation_id',new Ie(h,r)),n.setVariable('@local_invocation_index',new be(c,a)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);void 0!==r&&t.variables.set(n.name,r)}this._execStatements(e.node.body,t)}getVariableName(e,t){return e instanceof ne?e.name:(console.error('Unknown variable type',e,'Line',e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),s=this._execStatements(n,e);if(s)return s;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(r.name,a,r)}this._execStatements(s.node.body,n)}else this._callBuiltinFunction(e,n)}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?'++'===e.operator?s.value instanceof be?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):'--'===e.operator?s.value instanceof be?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_assign(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);if(null===s)return void console.error(`Variable ${n} not found. Line ${e.line}`);const r=this.evalExpression(e.value,t),a=e.operator;if('='===a)if(s.value instanceof Se)s.value.setDataValue(this,r,e.variable.postfix,t);else if(e.variable.postfix){if(!(s.value instanceof Ie||s.value instanceof Te))return void console.error(`Variable ${s.name} is not a vector or matrix. Line ${e.line}`);if(e.variable.postfix instanceof ue){const n=this.evalExpression(e.variable.postfix.index,t).value;if(s.value instanceof Ie){if(!(r instanceof be))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[n]=r.value}else{if(!(s.value instanceof Te))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);{const n=this.evalExpression(e.variable.postfix.index,t).value;if(n<0)return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(!(r instanceof Ie))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);{const t=this.getTypeName(s.value.typeInfo);if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t){if(!(n<2&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t){if(!(n<2&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t){if(!(n<2&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t){if(!(n<3&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t){if(!(n<3&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else if('mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t){if(!(n<3&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}else if('mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t){if(!(n<4&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t){if(!(n<4&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else{if('mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t)return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(!(n<4&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}}}}}else if(e.variable.postfix instanceof J){const t=e.variable.postfix.value;if(!(s.value instanceof Ie))return void console.error(`Invalid assignment to ${t}. Variable ${s.name} is not a vector. Line ${e.line}`);if(r instanceof be){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);if('x'===t)s.value.value[0]=r.value;else if('y'===t){if(s.value.value.length<2)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[1]=r.value}else if('z'===t){if(s.value.value.length<3)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[2]=r.value}else if('w'===t){if(s.value.value.length<4)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[3]=r.value}}else{if(!(r instanceof Ie))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(t.length!==r.value.length)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);for(let n=0;n<t.length;++n){const a=t[n];if('x'===a||'r'===a)s.value.value[0]=r.value[n];else if('y'===a||'g'===a){if(r.value.length<2)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[1]=r.value[n]}else if('z'===a||'b'===a){if(r.value.length<3)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[2]=r.value[n]}else{if('w'!==a&&'a'!==a)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);if(r.value.length<4)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[3]=r.value[n]}}}}}else s.value=r;else{const n=s.value.getDataValue(this,e.variable.postfix,t);if(n instanceof Ie&&r instanceof be){const t=n.value,s=r.value;if('+='===a)for(let e=0;e<t.length;++e)t[e]+=s;else if('-='===a)for(let e=0;e<t.length;++e)t[e]-=s;else if('*='===a)for(let e=0;e<t.length;++e)t[e]*=s;else if('/='===a)for(let e=0;e<t.length;++e)t[e]/=s;else if('%='===a)for(let e=0;e<t.length;++e)t[e]%=s;else if('&='===a)for(let e=0;e<t.length;++e)t[e]&=s;else if('|='===a)for(let e=0;e<t.length;++e)t[e]|=s;else if('^='===a)for(let e=0;e<t.length;++e)t[e]^=s;else if('<<='===a)for(let e=0;e<t.length;++e)t[e]<<=s;else if('>>='===a)for(let e=0;e<t.length;++e)t[e]>>=s;else console.error(`Invalid operator ${a}. Line ${e.line}`)}else if(n instanceof Ie&&r instanceof Ie){const t=n.value,s=r.value;if(t.length!==s.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if('+='===a)for(let e=0;e<t.length;++e)t[e]+=s[e];else if('-='===a)for(let e=0;e<t.length;++e)t[e]-=s[e];else if('*='===a)for(let e=0;e<t.length;++e)t[e]*=s[e];else if('/='===a)for(let e=0;e<t.length;++e)t[e]/=s[e];else if('%='===a)for(let e=0;e<t.length;++e)t[e]%=s[e];else if('&='===a)for(let e=0;e<t.length;++e)t[e]&=s[e];else if('|='===a)for(let e=0;e<t.length;++e)t[e]|=s[e];else if('^='===a)for(let e=0;e<t.length;++e)t[e]^=s[e];else if('<<='===a)for(let e=0;e<t.length;++e)t[e]<<=s[e];else if('>>='===a)for(let e=0;e<t.length;++e)t[e]>>=s[e];else console.error(`Invalid operator ${a}. Line ${e.line}`)}else{if(!(n instanceof be&&r instanceof be))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);'+='===a?n.value+=r.value:'-='===a?n.value-=r.value:'*='===a?n.value*=r.value:'/='===a?n.value/=r.value:'%='===a?n.value%=r.value:'&='===a?n.value&=r.value:'|='===a?n.value|=r.value:'^='===a?n.value^=r.value:'<<='===a?n.value<<=r.value:'>>='===a?n.value>>=r.value:console.error(`Invalid operator ${a}. Line ${e.line}`)}s.value instanceof Se&&s.value.setDataValue(this,n,e.variable.postfix,t)}}_function(e,t){const n=new Ce(e);t.functions.set(e.name,n)}_const(e,t){let n=null;null!=e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;null!=e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(null!==e.value)n=this.evalExpression(e.value,t);else{if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);if('f32'===e.type.name||'i32'===e.type.name||'u32'===e.type.name||'bool'===e.type.name||'f16'===e.type.name||'vec2'===e.type.name||'vec3'===e.type.name||'vec4'===e.type.name||'vec2f'===e.type.name||'vec3f'===e.type.name||'vec4f'===e.type.name||'vec2i'===e.type.name||'vec3i'===e.type.name||'vec4i'===e.type.name||'vec2u'===e.type.name||'vec3u'===e.type.name||'vec4u'===e.type.name||'vec2h'===e.type.name||'vec3h'===e.type.name||'vec4h'===e.type.name||'mat2x2'===e.type.name||'mat2x3'===e.type.name||'mat2x4'===e.type.name||'mat3x2'===e.type.name||'mat3x3'===e.type.name||'mat3x4'===e.type.name||'mat4x2'===e.type.name||'mat4x3'===e.type.name||'mat4x4'===e.type.name||'mat2x2f'===e.type.name||'mat2x3f'===e.type.name||'mat2x4f'===e.type.name||'mat3x2f'===e.type.name||'mat3x3f'===e.type.name||'mat3x4f'===e.type.name||'mat4x2f'===e.type.name||'mat4x3f'===e.type.name||'mat4x4f'===e.type.name||'mat2x2h'===e.type.name||'mat2x3h'===e.type.name||'mat2x4h'===e.type.name||'mat3x2h'===e.type.name||'mat3x3h'===e.type.name||'mat3x4h'===e.type.name||'mat4x2h'===e.type.name||'mat4x3h'===e.type.name||'mat4x4h'===e.type.name){const s=new ee(e.type,[]);n=this._evalCreate(s,t)}if('array'===e.type.name){const s=new ee(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const r of e.cases)if(r instanceof me)for(const a of r.selectors){if(a instanceof pe){s=r;continue}const i=this.evalExpression(a,t);if(!(i instanceof be))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(r.body,t)}else r instanceof de&&(s=r);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const s=this.evalExpression(n.condition,t);if(!(s instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(s.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof be?e.value:(console.error('Expected scalar value.',e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(null!==n&&n!==Ye._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(n===Ye._continueObj){if(e.continuing){if(this._execStatements(e.continuing.body,t)===Ye._breakObj)break}}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(n!==Ye._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof be){const e=Qe(n.value,n.typeInfo.name,s.name);return new be(e,this.getTypeInfo(s))}if(n instanceof Ie){const t=this.getTypeName(n.typeInfo);let r='';if(t.endsWith('f'))r='f32';else if(t.endsWith('i'))r='i32';else if(t.endsWith('u'))r='u32';else if(t.endsWith('b'))r='bool';else{if(!t.endsWith('h'))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;r='f16'}const a=this.getTypeName(s);let i='';if(a.endsWith('f'))i='f32';else if(a.endsWith('i'))i='i32';else if(a.endsWith('u'))i='u32';else if(a.endsWith('b'))i='bool';else{if(!a.endsWith('h'))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i='f16'}const o=function(e,t,n){if(t===n)return e;const s=new Array(e.length);for(let r=0;r<e.length;r++)s[r]=Qe(e[r],t,n);return s}(n.value,r,i);return new Ie(o,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){const n=t.getVariableValue(e.name);return e.postfix?n.getDataValue(this,e.postfix,t):n}_evalCreate(e,t){var r;if(null===e.type)return we.void;const a=this.getTypeName(e.type);switch(a){case'bool':case'i32':case'u32':case'f32':case'f16':return this._callConstructorValue(e,t);case'vec2':case'vec3':case'vec4':case'vec2f':case'vec3f':case'vec4f':case'vec2h':case'vec3h':case'vec4h':case'vec2i':case'vec3i':case'vec4i':case'vec2u':case'vec3u':case'vec4u':case'vec2b':case'vec3b':case'vec4b':return this._callConstructorVec(e,t);case'mat2x2':case'mat2x2f':case'mat2x2h':case'mat2x3':case'mat2x3f':case'mat2x3h':case'mat2x4':case'mat2x4f':case'mat2x4h':case'mat3x2':case'mat3x2f':case'mat3x2h':case'mat3x3':case'mat3x3f':case'mat3x3h':case'mat3x4':case'mat3x4f':case'mat3x4h':case'mat4x2':case'mat4x2f':case'mat4x2h':case'mat4x3':case'mat4x3f':case'mat4x3h':case'mat4x4':case'mat4x4f':case'mat4x4h':return this._callConstructorMatrix(e,t)}const i=this.getTypeInfo(e.type);if(null===i)return console.error(`Unknown type ${a}. Line ${e.line}`),null;if(0===i.size)return null;const o=new Se(new ArrayBuffer(i.size),i,0);if(i instanceof n){if(e.args)for(let n=0;n<e.args.length;++n){const s=i.members[n],r=e.args[n],a=this.evalExpression(r,t);o.setData(this,a,s.type,s.offset,t)}}else if(i instanceof s){let n=0;if(e.args)for(let s=0;s<e.args.length;++s){const a=e.args[s],u=this.evalExpression(a,t);null===i.format&&('x32'===(null===(r=u.typeInfo)||void 0===r?void 0:r.name)?i.format=this.getTypeInfo('i32'):i.format=u.typeInfo),o.setData(this,u,i.format,n,t),n+=i.stride}}else console.error(`Unknown type \"${a}\". Line ${e.line}`);return o}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;if('x32'===s||'u32'===s||'f32'===s||'f16'===s||'i32'===s||'bool'===s){return new be(e.scalarValue,n)}return'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s?this._callConstructorVec(e,t):'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:(null==e?void 0:e.postfix)?n.getDataValue(this,e.postfix,t):n}_maxFormatTypeInfo(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=Ye._priority.get(t.name);Ye._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?this.getTypeInfo('i32'):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t),s=n instanceof be||n instanceof Ie?n.value:null;switch(e.operator){case'+':{if(qe(s)){const e=s.map(((e,t)=>+e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(+e,t)}case'-':{if(qe(s)){const e=s.map(((e,t)=>-e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(-e,t)}case'!':{if(qe(s)){const e=s.map(((e,t)=>e?0:1));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(e?0:1,t)}case'~':{if(qe(s)){const e=s.map(((e,t)=>~e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),r=n instanceof be||n instanceof Ie||n instanceof Te?n.value:null,a=s instanceof be||s instanceof Ie||s instanceof Te?s.value:null;switch(e.operator){case'+':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e+s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t+e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e+t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t+i,o)}case'-':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e-s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t-e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e-t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t-i,o)}case'*':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e*s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t*e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e*t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t*i,o)}case'%':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e%s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t%e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e%t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t%i,o)}case'/':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e/s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t/e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e/t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t/i,o)}case'&':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t&e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e&t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t&i,o)}case'|':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e|s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t|e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e|t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t|i,o)}case'^':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e^s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t^e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e^t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t^i,o)}case'<<':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<<s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<<e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<<t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t<<i,o)}case'>>':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>>s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>>e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>>t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t>>i,o)}case'>':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>t?1:0));return new Ie(t,s.typeInfo)}return new be(r>a?1:0,this.getTypeInfo('bool'));case'<':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<t?1:0));return new Ie(t,s.typeInfo)}return new be(r<a?1:0,this.getTypeInfo('bool'));case'==':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e===s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t==e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e==t?1:0));return new Ie(t,s.typeInfo)}return new be(r===a?1:0,this.getTypeInfo('bool'));case'!=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e!==s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t!==e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e!==t?1:0));return new Ie(t,s.typeInfo)}return new be(r!==a?1:0,this.getTypeInfo('bool'));case'>=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>=s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>=e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>=t?1:0));return new Ie(t,s.typeInfo)}return new be(r>=a?1:0,this.getTypeInfo('bool'));case'<=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<=s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<=e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<=t?1:0));return new Ie(t,s.typeInfo)}return new be(r<=a?1:0,this.getTypeInfo('bool'));case'&&':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&&s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t&&e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e&&t?1:0));return new Ie(t,s.typeInfo)}return new be(r&&a?1:0,this.getTypeInfo('bool'));case'||':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e||s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t||e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e||t?1:0));return new Ie(t,s.typeInfo)}return new be(r||a?1:0,this.getTypeInfo('bool'))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s)return this._callBuiltinFunction(e,n);for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(r.name,a,r)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case'all':return this.builtins.All(e,t);case'any':return this.builtins.Any(e,t);case'select':return this.builtins.Select(e,t);case'arrayLength':return this.builtins.ArrayLength(e,t);case'abs':return this.builtins.Abs(e,t);case'acos':return this.builtins.Acos(e,t);case'acosh':return this.builtins.Acosh(e,t);case'asin':return this.builtins.Asin(e,t);case'asinh':return this.builtins.Asinh(e,t);case'atan':return this.builtins.Atan(e,t);case'atanh':return this.builtins.Atanh(e,t);case'atan2':return this.builtins.Atan2(e,t);case'ceil':return this.builtins.Ceil(e,t);case'clamp':return this.builtins.Clamp(e,t);case'cos':return this.builtins.Cos(e,t);case'cosh':return this.builtins.Cosh(e,t);case'countLeadingZeros':return this.builtins.CountLeadingZeros(e,t);case'countOneBits':return this.builtins.CountOneBits(e,t);case'countTrailingZeros':return this.builtins.CountTrailingZeros(e,t);case'cross':return this.builtins.Cross(e,t);case'degrees':return this.builtins.Degrees(e,t);case'determinant':return this.builtins.Determinant(e,t);case'distance':return this.builtins.Distance(e,t);case'dot':return this.builtins.Dot(e,t);case'dot4U8Packed':return this.builtins.Dot4U8Packed(e,t);case'dot4I8Packed':return this.builtins.Dot4I8Packed(e,t);case'exp':return this.builtins.Exp(e,t);case'exp2':return this.builtins.Exp2(e,t);case'extractBits':return this.builtins.ExtractBits(e,t);case'faceForward':return this.builtins.FaceForward(e,t);case'firstLeadingBit':return this.builtins.FirstLeadingBit(e,t);case'firstTrailingBit':return this.builtins.FirstTrailingBit(e,t);case'floor':return this.builtins.Floor(e,t);case'fma':return this.builtins.Fma(e,t);case'fract':return this.builtins.Fract(e,t);case'frexp':return this.builtins.Frexp(e,t);case'insertBits':return this.builtins.InsertBits(e,t);case'inverseSqrt':return this.builtins.InverseSqrt(e,t);case'ldexp':return this.builtins.Ldexp(e,t);case'length':return this.builtins.Length(e,t);case'log':return this.builtins.Log(e,t);case'log2':return this.builtins.Log2(e,t);case'max':return this.builtins.Max(e,t);case'min':return this.builtins.Min(e,t);case'mix':return this.builtins.Mix(e,t);case'modf':return this.builtins.Modf(e,t);case'normalize':return this.builtins.Normalize(e,t);case'pow':return this.builtins.Pow(e,t);case'quantizeToF16':return this.builtins.QuantizeToF16(e,t);case'radians':return this.builtins.Radians(e,t);case'reflect':return this.builtins.Reflect(e,t);case'refract':return this.builtins.Refract(e,t);case'reverseBits':return this.builtins.ReverseBits(e,t);case'round':return this.builtins.Round(e,t);case'saturate':return this.builtins.Saturate(e,t);case'sign':return this.builtins.Sign(e,t);case'sin':return this.builtins.Sin(e,t);case'sinh':return this.builtins.Sinh(e,t);case'smoothStep':return this.builtins.SmoothStep(e,t);case'sqrt':return this.builtins.Sqrt(e,t);case'step':return this.builtins.Step(e,t);case'tan':return this.builtins.Tan(e,t);case'tanh':return this.builtins.Tanh(e,t);case'transpose':return this.builtins.Transpose(e,t);case'trunc':return this.builtins.Trunc(e,t);case'dpdx':return this.builtins.Dpdx(e,t);case'dpdxCoarse':return this.builtins.DpdxCoarse(e,t);case'dpdxFine':return this.builtins.DpdxFine(e,t);case'dpdy':return this.builtins.Dpdy(e,t);case'dpdyCoarse':return this.builtins.DpdyCoarse(e,t);case'dpdyFine':return this.builtins.DpdyFine(e,t);case'fwidth':return this.builtins.Fwidth(e,t);case'fwidthCoarse':return this.builtins.FwidthCoarse(e,t);case'fwidthFine':return this.builtins.FwidthFine(e,t);case'textureDimensions':return this.builtins.TextureDimensions(e,t);case'textureGather':return this.builtins.TextureGather(e,t);case'textureGatherCompare':return this.builtins.TextureGatherCompare(e,t);case'textureLoad':return this.builtins.TextureLoad(e,t);case'textureNumLayers':return this.builtins.TextureNumLayers(e,t);case'textureNumLevels':return this.builtins.TextureNumLevels(e,t);case'textureNumSamples':return this.builtins.TextureNumSamples(e,t);case'textureSample':return this.builtins.TextureSample(e,t);case'textureSampleBias':return this.builtins.TextureSampleBias(e,t);case'textureSampleCompare':return this.builtins.TextureSampleCompare(e,t);case'textureSampleCompareLevel':return this.builtins.TextureSampleCompareLevel(e,t);case'textureSampleGrad':return this.builtins.TextureSampleGrad(e,t);case'textureSampleLevel':return this.builtins.TextureSampleLevel(e,t);case'textureSampleBaseClampToEdge':return this.builtins.TextureSampleBaseClampToEdge(e,t);case'textureStore':return this.builtins.TextureStore(e,t);case'atomicLoad':return this.builtins.AtomicLoad(e,t);case'atomicStore':return this.builtins.AtomicStore(e,t);case'atomicAdd':return this.builtins.AtomicAdd(e,t);case'atomicSub':return this.builtins.AtomicSub(e,t);case'atomicMax':return this.builtins.AtomicMax(e,t);case'atomicMin':return this.builtins.AtomicMin(e,t);case'atomicAnd':return this.builtins.AtomicAnd(e,t);case'atomicOr':return this.builtins.AtomicOr(e,t);case'atomicXor':return this.builtins.AtomicXor(e,t);case'atomicExchange':return this.builtins.AtomicExchange(e,t);case'atomicCompareExchangeWeak':return this.builtins.AtomicCompareExchangeWeak(e,t);case'pack4x8snorm':return this.builtins.Pack4x8snorm(e,t);case'pack4x8unorm':return this.builtins.Pack4x8unorm(e,t);case'pack4xI8':return this.builtins.Pack4xI8(e,t);case'pack4xU8':return this.builtins.Pack4xU8(e,t);case'pack4x8Clamp':return this.builtins.Pack4x8Clamp(e,t);case'pack4xU8Clamp':return this.builtins.Pack4xU8Clamp(e,t);case'pack2x16snorm':return this.builtins.Pack2x16snorm(e,t);case'pack2x16unorm':return this.builtins.Pack2x16unorm(e,t);case'pack2x16float':return this.builtins.Pack2x16float(e,t);case'unpack4x8snorm':return this.builtins.Unpack4x8snorm(e,t);case'unpack4x8unorm':return this.builtins.Unpack4x8unorm(e,t);case'unpack4xI8':return this.builtins.Unpack4xI8(e,t);case'unpack4xU8':return this.builtins.Unpack4xU8(e,t);case'unpack2x16snorm':return this.builtins.Unpack2x16snorm(e,t);case'unpack2x16unorm':return this.builtins.Unpack2x16unorm(e,t);case'unpack2x16float':return this.builtins.Unpack2x16float(e,t);case'storageBarrier':return this.builtins.StorageBarrier(e,t);case'textureBarrier':return this.builtins.TextureBarrier(e,t);case'workgroupBarrier':return this.builtins.WorkgroupBarrier(e,t);case'workgroupUniformLoad':return this.builtins.WorkgroupUniformLoad(e,t);case'subgroupAdd':return this.builtins.SubgroupAdd(e,t);case'subgroupExclusiveAdd':return this.builtins.SubgroupExclusiveAdd(e,t);case'subgroupInclusiveAdd':return this.builtins.SubgroupInclusiveAdd(e,t);case'subgroupAll':return this.builtins.SubgroupAll(e,t);case'subgroupAnd':return this.builtins.SubgroupAnd(e,t);case'subgroupAny':return this.builtins.SubgroupAny(e,t);case'subgroupBallot':return this.builtins.SubgroupBallot(e,t);case'subgroupBroadcast':return this.builtins.SubgroupBroadcast(e,t);case'subgroupBroadcastFirst':return this.builtins.SubgroupBroadcastFirst(e,t);case'subgroupElect':return this.builtins.SubgroupElect(e,t);case'subgroupMax':return this.builtins.SubgroupMax(e,t);case'subgroupMin':return this.builtins.SubgroupMin(e,t);case'subgroupMul':return this.builtins.SubgroupMul(e,t);case'subgroupExclusiveMul':return this.builtins.SubgroupExclusiveMul(e,t);case'subgroupInclusiveMul':return this.builtins.SubgroupInclusiveMul(e,t);case'subgroupOr':return this.builtins.SubgroupOr(e,t);case'subgroupShuffle':return this.builtins.SubgroupShuffle(e,t);case'subgroupShuffleDown':return this.builtins.SubgroupShuffleDown(e,t);case'subgroupShuffleUp':return this.builtins.SubgroupShuffleUp(e,t);case'subgroupShuffleXor':return this.builtins.SubgroupShuffleXor(e,t);case'subgroupXor':return this.builtins.SubgroupXor(e,t);case'quadBroadcast':return this.builtins.QuadBroadcast(e,t);case'quadSwapDiagonal':return this.builtins.QuadSwapDiagonal(e,t);case'quadSwapX':return this.builtins.QuadSwapX(e,t);case'quadSwapY':return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this.evalExpression(e.args[t],s);s.setVariable(r.name,a,r)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new be(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=this.getTypeName(e.type),r={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4}[s];if(void 0===r)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const a=s.endsWith('i')||s.endsWith('u'),i=[];if(e instanceof re)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Ie){const t=e.value;for(let e=0;e<t.length;++e){let n=t[e];a&&(n=Math.floor(n)),i.push(n)}}else if(e instanceof be){let t=e.value;a&&(t=Math.floor(t)),i.push(t)}}if(e.type instanceof j&&null===e.type.format&&(e.type.format=j.f32),0===i.length){const e=new Array(r).fill(0);return new Ie(e,n)}if(1===i.length)for(;i.length<r;)i.push(i[0]);return i.length<r?(console.error(`Invalid vec constructor. Line ${e.line}`),null):new Ie(i.length>r?i.slice(0,r):i,n)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=this.getTypeName(e.type),a={mat2x2:4,mat2x2f:4,mat2x2h:4,mat2x3:6,mat2x3f:6,mat2x3h:6,mat2x4:8,mat2x4f:8,mat2x4h:8,mat3x2:6,mat3x2f:6,mat3x2h:6,mat3x3:9,mat3x3f:9,mat3x3h:9,mat3x4:12,mat3x4f:12,mat3x4h:12,mat4x2:8,mat4x2f:8,mat4x2h:8,mat4x3:12,mat4x3f:12,mat4x3h:12,mat4x4:16,mat4x4f:16,mat4x4h:16}[s];if(void 0===a)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const i=[];if(e instanceof re)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Ie){const t=e.value;for(let e=0;e<t.length;++e)i.push(t[e])}else e instanceof be?i.push(e.value):e instanceof Te&&i.push(...e.value)}if(n instanceof r&&null===n.format&&(n.format=this.getTypeInfo('f32')),0===i.length){const e=new Array(a).fill(0);return new Te(e,n)}return i.length!==a?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new Te(i,n)}}Ye._breakObj=new ye(new e('BREAK',null)),Ye._continueObj=new ye(new e('CONTINUE',null)),Ye._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class Ke{constructor(){this._tokens=[],this._current=0,this._currentLine=0,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new x,this._exec=new Ye}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}if(this._deferArrayCountEval.length>0){for(const e of this._deferArrayCountEval){const t=e.arrayType,n=e.countNode;if(n instanceof ne){const e=n.name,s=this._context.constants.get(e);if(s)try{const e=s.constEvaluate(this._exec);t.count=e}catch(e){}}}this._deferArrayCountEval.length=0}return t}_initialize(e){if(e)if('string'==typeof e){const t=new Ve(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==Ae.eof}_match(e){if(e instanceof Ee)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let s=!1;for(const t of e){if(n===t)return!0;t===Ae.tokens.name&&(s=!0)}if(s){const e=Ae.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===Ae.tokens.name){const e=Ae.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||void 0===e?void 0:e.line)&&void 0!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(Ae.tokens.semicolon)&&!this._isAtEnd(););if(this._match(Ae.keywords.alias)){const e=this._type_alias();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.diagnostic)){const e=this._diagnostic();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.requires)){const e=this._requires_directive();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.enable)){const e=this._enable_directive();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(Ae.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(Ae.keywords.fn))return null;const e=this._currentLine,t=this._consume(Ae.tokens.ident,'Expected function name.').toString();this._consume(Ae.tokens.paren_left,'Expected \\'(\\' for function arguments.');const n=[];if(!this._check(Ae.tokens.paren_right))do{if(this._check(Ae.tokens.paren_right))break;const e=this._attribute(),t=this._consume(Ae.tokens.name,'Expected argument name.').toString();this._consume(Ae.tokens.colon,'Expected \\':\\' for argument type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s,n.push(this._updateNode(new _e(t,r,e))))}while(this._match(Ae.tokens.comma));this._consume(Ae.tokens.paren_right,'Expected \\')\\' after function arguments.');let s=null;if(this._match(Ae.tokens.arrow)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}const r=this._compound_statement(),a=this._currentLine;return this._updateNode(new k(t,n,s,r,e,a),e)}_compound_statement(){const e=[];for(this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for block.');!this._check(Ae.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for block.'),e}_statement(){for(;this._match(Ae.tokens.semicolon)&&!this._isAtEnd(););if(this._check(Ae.tokens.attr)&&this._attribute(),this._check(Ae.keywords.if))return this._if_statement();if(this._check(Ae.keywords.switch))return this._switch_statement();if(this._check(Ae.keywords.loop))return this._loop_statement();if(this._check(Ae.keywords.for))return this._for_statement();if(this._check(Ae.keywords.while))return this._while_statement();if(this._check(Ae.keywords.continuing))return this._continuing_statement();if(this._check(Ae.keywords.static_assert))return this._static_assert_statement();if(this._check(Ae.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(Ae.keywords.return))e=this._return_statement();else if(this._check([Ae.keywords.var,Ae.keywords.let,Ae.keywords.const]))e=this._variable_statement();else if(this._match(Ae.keywords.discard))e=this._updateNode(new G);else if(this._match(Ae.keywords.break)){const t=this._updateNode(new W);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t,this._check(Ae.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression(),t.condition instanceof oe&&1===t.condition.contents.length&&(t.condition=t.condition.contents[0]))}else if(this._match(Ae.keywords.continue)){const t=this._updateNode(new P);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(Ae.tokens.semicolon,'Expected \\';\\' after statement.'),e}_static_assert_statement(){if(!this._match(Ae.keywords.static_assert))return null;const e=this._optional_paren_expression();return this._updateNode(new I(e))}_while_statement(){if(!this._match(Ae.keywords.while))return null;const e=this._updateNode(new T(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(Ae.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){if(!this._match(Ae.keywords.continuing))return null;const e=this._compound_statement();return this._updateNode(new S(e))}_for_statement(){if(!this._match(Ae.keywords.for))return null;this._consume(Ae.tokens.paren_left,'Expected \\'(\\'.');const e=this._updateNode(new E(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(Ae.tokens.semicolon)?null:this._for_init(),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),e.condition=this._check(Ae.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),e.increment=this._check(Ae.tokens.paren_right)?null:this._for_increment(),this._consume(Ae.tokens.paren_right,'Expected \\')\\'.'),this._check(Ae.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(Ae.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),'Variable declaration expected.');let t=null;return this._match(Ae.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new A(e.name,e.type,e.storage,e.access,t))}if(this._match(Ae.keywords.let)){const e=this._consume(Ae.tokens.name,'Expected name for let.').toString();let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Ae.tokens.equal,'Expected \\'=\\' for let.');const n=this._short_circuit_or_expression();return this._updateNode(new V(e,t,null,null,n))}if(this._match(Ae.keywords.const)){const e=this._consume(Ae.tokens.name,'Expected name for const.').toString();let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Ae.tokens.equal,'Expected \\'=\\' for const.');const n=this._short_circuit_or_expression();return null===t&&n instanceof re&&(t=n.type),this._updateNode(new N(e,t,null,null,n))}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(Ae.increment_operators))return this._current=e,null;const n=this._consume(Ae.increment_operators,'Expected increment operator');return this._updateNode(new L(n.type===Ae.tokens.plus_plus?i.increment:i.decrement,t))}_assignment_statement(){let e=null;if(this._check(Ae.tokens.brace_right))return null;let t=this._match(Ae.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(Ae.assignment_operators,'Expected assignment operator.'),s=this._short_circuit_or_expression();return this._updateNode(new O(o.parse(n.lexeme),e,s))}_func_call_statement(){if(!this._check(Ae.tokens.ident))return null;const e=this._current,t=this._consume(Ae.tokens.ident,'Expected function name.'),n=this._argument_expression_list();return null===n?(this._current=e,null):this._updateNode(new D(t.lexeme,n))}_loop_statement(){if(!this._match(Ae.keywords.loop))return null;this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for loop.');const e=this._updateNode(new C([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof S){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for loop.'),e}_switch_statement(){if(!this._match(Ae.keywords.switch))return null;const e=this._updateNode(new M(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for switch.'),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),'Expected \\'case\\' or \\'default\\'.');return this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for switch.'),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([Ae.keywords.default,Ae.keywords.case]);){if(this._match(Ae.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof pe){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');t=!0;break}this._match(Ae.tokens.colon),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Exected \\'{\\' for switch case.');const s=this._case_body();this._consume(Ae.tokens.brace_right,'Exected \\'}\\' for switch case.'),e.push(this._updateNode(new me(n,s)))}if(this._match(Ae.keywords.default)){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');this._match(Ae.tokens.colon),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Exected \\'{\\' for switch default.');const n=this._case_body();this._consume(Ae.tokens.brace_right,'Exected \\'}\\' for switch default.'),e.push(this._updateNode(new de(n)))}}return e}_case_selectors(){const e=[];for(this._match(Ae.keywords.default)?e.push(this._updateNode(new pe)):e.push(this._shift_expression());this._match(Ae.tokens.comma);)this._match(Ae.keywords.default)?e.push(this._updateNode(new pe)):e.push(this._shift_expression());return e}_case_body(){if(this._match(Ae.keywords.fallthrough))return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(Ae.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(Ae.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(Ae.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let r=null;return this._match(Ae.keywords.else)&&(this._check(Ae.tokens.attr)&&this._attribute(),r=this._compound_statement()),this._updateNode(new F(t,n,s,r),e)}_match_elseif(){return this._tokens[this._current].type===Ae.keywords.else&&this._tokens[this._current+1].type===Ae.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new ve(t,n))),this._match_elseif()&&(this._check(Ae.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(Ae.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new U(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(Ae.tokens.or_or);)e=this._updateNode(new he(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(Ae.tokens.and_and);)e=this._updateNode(new he(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(Ae.tokens.or);)e=this._updateNode(new he(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(Ae.tokens.xor);)e=this._updateNode(new he(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(Ae.tokens.and);)e=this._updateNode(new he(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([Ae.tokens.equal_equal,Ae.tokens.not_equal])?this._updateNode(new he(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([Ae.tokens.less_than,Ae.tokens.greater_than,Ae.tokens.less_than_equal,Ae.tokens.greater_than_equal]);)e=this._updateNode(new he(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([Ae.tokens.shift_left,Ae.tokens.shift_right]);)e=this._updateNode(new he(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([Ae.tokens.plus,Ae.tokens.minus]);)e=this._updateNode(new he(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([Ae.tokens.star,Ae.tokens.forward_slash,Ae.tokens.modulo]);)e=this._updateNode(new he(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([Ae.tokens.minus,Ae.tokens.bang,Ae.tokens.tilde,Ae.tokens.star,Ae.tokens.and])?this._updateNode(new ce(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(Ae.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(Ae.tokens.bracket_right,'Expected \\']\\'.');const t=this._updateNode(new ue(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(Ae.tokens.period)){const e=this._consume(Ae.tokens.name,'Expected member name.'),t=this._postfix_expression(),n=this._updateNode(new J(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){if(this._context.aliases.has(e)){return this._context.aliases.get(e).type}if(this._context.structs.has(e)){return this._context.structs.get(e)}return null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case'bool':return X.bool;case'i32':return X.i32;case'u32':return X.u32;case'f32':return X.f32;case'f16':return X.f16;case'vec2f':return j.vec2f;case'vec3f':return j.vec3f;case'vec4f':return j.vec4f;case'vec2i':return j.vec2i;case'vec3i':return j.vec3i;case'vec4i':return j.vec4i;case'vec2u':return j.vec2u;case'vec3u':return j.vec3u;case'vec4u':return j.vec4u;case'vec2h':return j.vec2h;case'vec3h':return j.vec3h;case'vec4h':return j.vec4h;case'mat2x2f':return j.mat2x2f;case'mat2x3f':return j.mat2x3f;case'mat2x4f':return j.mat2x4f;case'mat3x2f':return j.mat3x2f;case'mat3x3f':return j.mat3x3f;case'mat3x4f':return j.mat3x4f;case'mat4x2f':return j.mat4x2f;case'mat4x3f':return j.mat4x3f;case'mat4x4f':return j.mat4x4f;case'mat2x2h':return j.mat2x2h;case'mat2x3h':return j.mat2x3h;case'mat2x4h':return j.mat2x4h;case'mat3x2h':return j.mat3x2h;case'mat3x3h':return j.mat3x3h;case'mat3x4h':return j.mat3x4h;case'mat4x2h':return j.mat4x2h;case'mat4x3h':return j.mat4x3h;case'mat4x4h':return j.mat4x4h}return null}_validateTypeRange(e,t){if('i32'===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if('u32'===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(Ae.tokens.ident)){const e=this._previous().toString();if(this._check(Ae.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new ee(n,t)):this._updateNode(new te(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new se(e,t.value))}return this._updateNode(new ne(e))}if(this._match(Ae.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith('i')||e.endsWith('i')?X.i32:e.endsWith('u')||e.endsWith('U')?X.u32:X.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new re(new be(n,this._exec.getTypeInfo(t)),t))}if(this._match(Ae.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,X.u32),this._updateNode(new re(new be(e,this._exec.getTypeInfo(X.u32)),X.u32))}if(this._match([Ae.tokens.decimal_float_literal,Ae.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith('h');t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?X.f16:X.f32);const s=t?X.f16:X.f32;return this._updateNode(new re(new be(n,this._exec.getTypeInfo(s)),s))}if(this._match([Ae.keywords.true,Ae.keywords.false])){let e=this._previous().toString()===Ae.keywords.true.rule;return this._updateNode(new re(new be(e?1:0,this._exec.getTypeInfo(X.bool)),X.bool))}if(this._check(Ae.tokens.paren_left))return this._paren_expression();if(this._match(Ae.keywords.bitcast)){this._consume(Ae.tokens.less_than,'Expected \\'<\\'.');const e=this._type_decl();this._consume(Ae.tokens.greater_than,'Expected \\'>\\'.');const t=this._paren_expression();return this._updateNode(new ae(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new ee(e,t))}_argument_expression_list(){if(!this._match(Ae.tokens.paren_left))return null;const e=[];do{if(this._check(Ae.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(Ae.tokens.comma));return this._consume(Ae.tokens.paren_right,'Expected \\')\\' for agument list'),e}_optional_paren_expression(){this._match(Ae.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(Ae.tokens.paren_right),this._updateNode(new oe([e]))}_paren_expression(){this._consume(Ae.tokens.paren_left,'Expected \\'(\\'.');const e=this._short_circuit_or_expression();return this._consume(Ae.tokens.paren_right,'Expected \\')\\'.'),this._updateNode(new oe([e]))}_struct_decl(){if(!this._match(Ae.keywords.struct))return null;const e=this._currentLine,t=this._consume(Ae.tokens.ident,'Expected name for struct.').toString();this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for struct body.');const n=[];for(;!this._check(Ae.tokens.brace_right);){const e=this._attribute(),t=this._consume(Ae.tokens.name,'Expected variable name.').toString();this._consume(Ae.tokens.colon,'Expected \\':\\' for struct member type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s),this._check(Ae.tokens.brace_right)?this._match(Ae.tokens.comma):this._consume(Ae.tokens.comma,'Expected \\',\\' for struct member.'),n.push(this._updateNode(new xe(t,r,e)))}this._consume(Ae.tokens.brace_right,'Expected \\'}\\' after struct body.');const s=this._currentLine,r=this._updateNode(new Z(t,n,e,s),e);return this._context.structs.set(t,r),r}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(Ae.tokens.equal)){const t=this._const_expression(),n=[X.f32];try{const s=t.constEvaluate(this._exec,n);e.value=new re(s,n[0]),this._exec.context.setVariable(e.name,s)}catch(n){e.value=t}}else{const t=new ee(e.type,null),n=this._exec.evalExpression(t,this._exec.context);null!==n&&(e.value=new re(n,e.type),this._exec.context.setVariable(e.name,n))}if(null!==e.type&&e.value instanceof re){if('x32'!==e.value.type.name){if(this._exec.getTypeName(e.type)!==this._exec.getTypeName(e.value.type))throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`)}e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else null===e.type&&e.value instanceof re&&(e.type='x32'===e.value.type.name?X.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(Ae.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(Ae.keywords.const))return null;const t=this._consume(Ae.tokens.name,'Expected variable name');let n=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}let s=null;this._consume(Ae.tokens.equal,'const declarations require an assignment');const a=this._short_circuit_or_expression();try{let e=[X.f32];const n=a.constEvaluate(this._exec,e);n instanceof be&&this._validateTypeRange(n.value,e[0]),e[0]instanceof j&&null===e[0].format&&n.typeInfo instanceof r&&null!==n.typeInfo.format&&('f16'===n.typeInfo.format.name?e[0].format=X.f16:'f32'===n.typeInfo.format.name?e[0].format=X.f32:'i32'===n.typeInfo.format.name?e[0].format=X.i32:'u32'===n.typeInfo.format.name?e[0].format=X.u32:'bool'===n.typeInfo.format.name?e[0].format=X.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),s=this._updateNode(new re(n,e[0])),this._exec.context.setVariable(t.toString(),n)}catch(e){s=a}if(null!==n&&s instanceof re){if('x32'!==s.type.name){if(this._exec.getTypeName(n)!==this._exec.getTypeName(s.type))throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`)}s.type=n,s.isScalar&&this._validateTypeRange(s.scalarValue,s.type)}else null===n&&s instanceof re&&(n=null!==(e=null==s?void 0:s.type)&&void 0!==e?e:X.f32,n===X.x32&&(n=X.i32));const i=this._updateNode(new N(t.toString(),n,'','',s));return this._context.constants.set(i.name,i),i}_global_let_decl(){if(!this._match(Ae.keywords.let))return null;const e=this._consume(Ae.tokens.name,'Expected variable name');let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(Ae.tokens.equal)){n=this._const_expression();const e=[X.f32];try{const t=n.constEvaluate(this._exec,e);null!==t&&(n=new re(t,e[0]))}catch(e){}}if(null!==t&&n instanceof re){if('x32'!==n.type.name){if(this._exec.getTypeName(t)!==this._exec.getTypeName(n.type))throw this._error(this._peek(),`Invalid cast from ${n.type.name} to ${t.name}. Line:${this._currentLine}`)}n.type=t}else null===t&&n instanceof re&&(t='x32'===n.type.name?X.i32:n.type);return n instanceof re&&n.isScalar&&this._validateTypeRange(n.scalarValue,t),this._updateNode(new V(e.toString(),t,'','',n))}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(Ae.keywords.var))return null;let e='',t='';this._match(Ae.tokens.less_than)&&(e=this._consume(Ae.storage_class,'Expected storage_class.').toString(),this._match(Ae.tokens.comma)&&(t=this._consume(Ae.access_mode,'Expected access_mode.').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\'.'));const n=this._consume(Ae.tokens.name,'Expected variable name');let s=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}return this._updateNode(new A(n.toString(),s,e,t,null))}_override_decl(){if(!this._match(Ae.keywords.override))return null;const e=this._consume(Ae.tokens.name,'Expected variable name');let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return this._updateNode(new $(e.toString(),t,null))}_diagnostic(){this._consume(Ae.tokens.paren_left,'Expected \\'(\\'');const e=this._consume(Ae.tokens.ident,'Expected severity control name.');this._consume(Ae.tokens.comma,'Expected \\',\\'');let t=this._consume(Ae.tokens.ident,'Expected diagnostic rule name.').toString();if(this._match(Ae.tokens.period)){t+=`.${this._consume(Ae.tokens.ident,'Expected diagnostic message.').toString()}`}return this._consume(Ae.tokens.paren_right,'Expected \\')\\''),this._updateNode(new z(e.toString(),t))}_enable_directive(){const e=this._consume(Ae.tokens.ident,'identity expected.');return this._updateNode(new q(e.toString()))}_requires_directive(){const e=[this._consume(Ae.tokens.ident,'identity expected.').toString()];for(;this._match(Ae.tokens.comma);){const t=this._consume(Ae.tokens.ident,'identity expected.');e.push(t.toString())}return this._updateNode(new B(e))}_type_alias(){const e=this._consume(Ae.tokens.ident,'identity expected.');this._consume(Ae.tokens.equal,'Expected \\'=\\' for type alias.');let t=this._type_decl();if(null===t)throw this._error(this._peek(),'Expected Type for Alias.');this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new R(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([Ae.tokens.ident,...Ae.texel_format,Ae.keywords.bool,Ae.keywords.f32,Ae.keywords.i32,Ae.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:this._updateNode(new X(e.toString()))}let e=this._texture_sampler_types();if(e)return e;if(this._check(Ae.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(Ae.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(Ae.tokens.comma)&&(n=this._consume(Ae.access_mode,'Expected access_mode for pointer').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for type.')),this._updateNode(new j(e,t,n))}if(this._match(Ae.keywords.ptr)){let e=this._previous().toString();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for pointer.');const t=this._consume(Ae.storage_class,'Expected storage_class for pointer');this._consume(Ae.tokens.comma,'Expected \\',\\' for pointer.');const n=this._type_decl();let s=null;return this._match(Ae.tokens.comma)&&(s=this._consume(Ae.access_mode,'Expected access_mode for pointer').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for pointer.'),this._updateNode(new Q(e,t.toString(),n,s))}const t=this._attribute();if(this._match(Ae.keywords.array)){let e=null,n=-1;const s=this._previous();let r=null;if(this._match(Ae.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t='';if(this._match(Ae.tokens.comma)){r=this._shift_expression();try{t=r.constEvaluate(this._exec).toString(),r=null}catch(e){t='1'}}this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for array.'),n=t?parseInt(t):0}const a=this._updateNode(new Y(s.toString(),t,e,n));return r&&this._deferArrayCountEval.push({arrayType:a,countNode:r}),a}return null}_texture_sampler_types(){if(this._match(Ae.sampler_type))return this._updateNode(new K(this._previous().toString(),null,null));if(this._match(Ae.depth_texture_type))return this._updateNode(new K(this._previous().toString(),null,null));if(this._match(Ae.sampled_texture_type)||this._match(Ae.multisampled_texture_type)){const e=this._previous();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._type_decl();return this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new K(e.toString(),t,null))}if(this._match(Ae.storage_texture_type)){const e=this._previous();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._consume(Ae.texel_format,'Invalid texel format.').toString();this._consume(Ae.tokens.comma,'Expected \\',\\' after texel format.');const n=this._consume(Ae.access_mode,'Expected access mode for storage texture type.').toString();return this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new K(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(Ae.tokens.attr);){const t=this._consume(Ae.attribute_name,'Expected attribute name'),n=this._updateNode(new ge(t.toString(),null));if(this._match(Ae.tokens.paren_left)){if(n.value=this._consume(Ae.literal_or_ident,'Expected attribute value').toString(),this._check(Ae.tokens.comma)){this._advance();do{const e=this._consume(Ae.literal_or_ident,'Expected attribute value').toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(Ae.tokens.comma))}this._consume(Ae.tokens.paren_right,'Expected \\')\\'')}e.push(n)}return 0==e.length?null:e}}class He extends Oe{constructor(e){super(),e&&this.update(e)}update(e){const t=(new Ke).parse(e);this.updateAST(t)}}class Je{get line(){return-1}}class et extends Je{constructor(e){super(),this.node=e}get line(){return this.node.line}}class tt extends Je{constructor(e,t){super(),this.node=e,this.statement=t}get line(){return this.statement.line}}class nt extends Je{constructor(e){super(),this.id=e}}class st extends Je{constructor(e){super(),this.id=e}}class rt extends Je{constructor(e,t){super(),this.id=e,this.node=t}get line(){return this.node.line}}class at extends Je{constructor(e,t,n){super(),this.id=e,this.condition=t,this.node=n}get line(){return this.node.line}}class it extends Je{constructor(e,t,n){super(),this.lineNo=-1,this.condition=e,this.position=t,this.lineNo=n}get line(){var e,t;return null!==(t=null===(e=this.condition)||void 0===e?void 0:e.line)&&void 0!==t?t:this.lineNo}}class ot extends Je{constructor(e){super(),this.statements=[],this.statements=e}get line(){return this.statements.length>0?this.statements[0].line:-1}}class ut{constructor(e,t){this.parent=null,this.commands=[],this.current=0,this.parentCallExpr=null,this.context=e,this.parent=null!=t?t:null}get isAtEnd(){return this.current>=this.commands.length}getNextCommand(){if(this.current>=this.commands.length)return null;const e=this.commands[this.current];return this.current++,e}getCurrentCommand(){return this.current>=this.commands.length?null:this.commands[this.current]}}class lt{constructor(){this.states=[]}get isEmpty(){return 0==this.states.length}get last(){var e;return null!==(e=this.states[this.states.length-1])&&void 0!==e?e:null}pop(){this.states.pop()}}class ct{constructor(e,t){this._runTimer=null,this.breakpoints=new Set,this.runStateCallback=null,this._code=e;const n=(new Ke).parse(e);this._exec=new Ye(n),this.runStateCallback=null!=t?t:null}getVariableValue(e){var t,n;const s=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;return null===s?null:s instanceof be||s instanceof Ie||s instanceof Te?s.value:(console.error(`Unsupported return variable type ${s.typeInfo.name}`),null)}reset(){this._exec=new Ye(this._exec.ast),this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}startDebug(){this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}get context(){const e=this.currentState;return null===e?this._exec.context:e.context}get currentState(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}return e}}get currentCommand(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}const t=e.getCurrentCommand();if(null!==t)return t}}toggleBreakpoint(e){this.breakpoints.has(e)?this.breakpoints.delete(e):this.breakpoints.add(e)}clearBreakpoints(){this.breakpoints.clear()}get isRunning(){return null!==this._runTimer}run(){this.isRunning||(this._runTimer=setInterval((()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}),0),null!==this.runStateCallback&&this.runStateCallback())}pause(){null!==this._runTimer&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}_setOverrides(e,t){for(const n in e){const s=e[n],r=this._exec.reflection.getOverrideInfo(n);null!==r?'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Ie(s,r.type)):console.error(`Invalid constant type for ${n}`):console.error(`Override ${n} does not exist in the shader.`)}}debugWorkgroup(e,t,n,s,r){this._execStack=new lt;const a=this._exec.context;a.currentFunctionName=e,this._dispatchId=t,(r=null!=r?r:{}).constants&&this._setOverrides(r.constants,a),this._exec._execStatements(this._exec.ast,a);const i=a.getFunction(e);if(!i)return console.error(`Function ${e} not found`),!1;if('number'==typeof n)n=[n,1,1];else{if(0===n.length)return console.error('Invalid dispatch count'),!1;1===n.length?n=[n[0],1,1]:2===n.length?n=[n[0],n[1],1]:n.length>3&&(n=[n[0],n[1],n[2]])}const o=n[2],u=n[1],l=n[0],c=this._exec.typeInfo.vec3u;a.setVariable('@num_workgroups',new Ie(n,c));for(const e in s)for(const t in s[e]){const n=s[e][t];a.variables.forEach((s=>{const r=s.node;if(null==r?void 0:r.attributes){let a=null,i=null;for(const e of r.attributes)'binding'===e.name?a=e.value:'group'===e.name&&(i=e.value);t==a&&e==i&&(void 0!==n.texture&&void 0!==n.size?s.value=new Se(n.texture,this._exec.getTypeInfo(r.type),0,n.size):void 0!==n.uniform?s.value=new Se(n.uniform,this._exec.getTypeInfo(r.type)):s.value=new Se(n,this._exec.getTypeInfo(r.type)))}}))}let h=!1;for(let e=0;e<o&&!h;++e)for(let t=0;t<u&&!h;++t)for(let n=0;n<l&&!h;++n)if(a.setVariable('@workgroup_id',new Ie([n,t,e],c)),this._dispatchWorkgroup(i,[n,t,e],a)){h=!0;break}return h}_shouldExecuteNectCommand(){const e=this.currentCommand;if(null===e)return!1;if(e instanceof it){if(null===e.condition)return!0}else if(e instanceof nt||e instanceof st)return!0;return!1}stepInto(){this.isRunning||this.stepNext(!0)}stepOver(){this.isRunning||this.stepNext(!1)}stepOut(){const e=this.currentState;if(null===e)return;const t=e.parent;this.isRunning&&(clearInterval(this._runTimer),this._runTimer=null),this._runTimer=setInterval((()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback());this.currentState===t&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}),0),null!==this.runStateCallback&&this.runStateCallback()}stepNext(e=!0){if(!this._execStack){this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}for(;;){if(this._execStack.isEmpty)return!1;let t=this._execStack.last;if(null===t)return!1;if(t.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return!1;t=this._execStack.last}const n=t.getNextCommand();if(null!==n){if(e&&n instanceof tt){const e=n.node,s=t.context.getFunction(e.name);if(!s)continue;const r=this._createState(s.node.body,t.context.clone(),t);for(let t=0;t<s.node.args.length;++t){const n=s.node.args[t],a=this._exec.evalExpression(e.args[t],r.context);r.context.createVariable(n.name,a,n)}if(r.parentCallExpr=e,this._execStack.states.push(r),r.context.currentFunctionName=s.name,this._shouldExecuteNectCommand())continue;return!0}if(n instanceof et){const e=n.node;if(e instanceof D){const n=t.context.getFunction(e.name);if(n){const s=this._createState(n.node.body,t.context.clone(),t);for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this._exec.evalExpression(e.args[t],s.context);s.context.createVariable(r.name,a,r)}if(this._execStack.states.push(s),s.context.currentFunctionName=n.name,this._shouldExecuteNectCommand())continue;return!0}}const s=this._exec.execStatement(e,t.context);if(null!=s&&!(s instanceof we)){let e=t;for(;e;){if(e.parentCallExpr){e.parentCallExpr.setCachedReturnValue(s);break}e=e.parent}if(null===e&&console.error('Could not find CallExpr to store return value in'),this._shouldExecuteNectCommand())continue;return!0}}else{if(n instanceof nt)continue;if(n instanceof st)continue;if(n instanceof rt){const e=n.id;for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof nt&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Continue statement used outside of a loop'),!1}if(n instanceof at){const e=n.id;if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof be))return console.error('Condition must be a scalar'),!1;if(!e.value){if(this._shouldExecuteNectCommand())continue;return!0}}for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof st&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Break statement used outside of a loop'),!1}if(n instanceof it){if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof be))return console.error('Condition must be a scalar'),!1;if(e.value){if(this._shouldExecuteNectCommand())continue;return!0}}if(t.current=n.position,this._shouldExecuteNectCommand())continue;return!0}if(n instanceof ot){const e=this._createState(n.statements,t.context.clone(),t);this._execStack.states.push(e);continue}}if(t.isAtEnd&&(this._execStack.pop(),this._execStack.isEmpty))return!1;if(!this._shouldExecuteNectCommand())return!0}}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name)if(Array.isArray(t.value)){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof be?e.value:parseInt(t.value[2])}}else{const e=n.getVariableValue(t.value);e instanceof be?s[0]=e.value:e instanceof Ie?(s[0]=e.value[0],s[1]=e.value.length>1?e.value[1]:1,s[2]=e.value.length>2?e.value[2]:1):s[0]=parseInt(t.value)}const r=this._exec.typeInfo.vec3u,a=this._exec.typeInfo.u32;n.setVariable('@workgroup_size',new Ie(s,r));const i=s[0],o=s[1],u=s[2];let l=!1;for(let e=0,c=0;e<u&&!l;++e)for(let u=0;u<o&&!l;++u)for(let o=0;o<i&&!l;++o,++c){const i=[o,u,e],h=[o+t[0]*s[0],u+t[1]*s[1],e+t[2]*s[2]];if(n.setVariable('@local_invocation_id',new Ie(i,r)),n.setVariable('@global_invocation_id',new Ie(h,r)),n.setVariable('@local_invocation_index',new be(c,a)),h[0]===this._dispatchId[0]&&h[1]===this._dispatchId[1]&&h[2]===this._dispatchId[2]){l=!0;break}}return l&&this._dispatchExec(e,n),l}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);null!==r&&t.variables.set(n.name,r)}const n=this._createState(e.node.body,t);this._execStack.states.push(n)}_createState(e,t,n){const s=new ut(t,null!=n?n:null);for(const t of e)if(t instanceof V||t instanceof A||t instanceof N||t instanceof O){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof D){const e=[];for(const n of t.args)this._collectFunctionCalls(n,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof U){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof L)s.commands.push(new et(t));else{if(t instanceof k){const e=new Ce(t);s.context.functions.set(t.name,e);continue}if(t instanceof F){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));let n=new it(t.condition,0,t.line);s.commands.push(n),t.body.length>0&&s.commands.push(new ot(t.body));const r=new it(null,0,t.line);s.commands.push(r);for(const e of t.elseif){n.position=s.commands.length;const a=[];this._collectFunctionCalls(e.condition,a);for(const e of a)s.commands.push(new tt(e,t));n=new it(e.condition,0,e.line),s.commands.push(n),e.body.length>0&&s.commands.push(new ot(e.body)),s.commands.push(r)}n.position=s.commands.length,t.else&&s.commands.push(new ot(t.else)),r.position=s.commands.length}else if(t instanceof M){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));let n=null;for(const e of t.cases){if(e instanceof de){n=e;break}if(e instanceof me)for(const t of e.selectors)if(t instanceof pe){n=e;break}}const r=[];for(const e of t.cases){if(e===n)continue;if(!(e instanceof me))continue;let a=null;for(const n of e.selectors){let e=new he('==',t.condition,n);a&&(e=new he('||',a,e)),a=e}const i=new it(a,0,e.line);s.commands.push(i),e.body.length>0&&s.commands.push(new ot(e.body));const o=new it(null,0,e.line);r.push(o),s.commands.push(o),i.position=s.commands.length}n&&s.commands.push(new ot(n.body)),s.commands.push(new st(t.id));const a=s.commands.length;for(let e=0;e<r.length;++e)r[e].position=a}else if(t instanceof T){const e=[];s.commands.push(new nt(t.id)),this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));const n=new it(t.condition,0,t.line);s.commands.push(n);let r=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),r=t.body[t.body.length-1].line),s.commands.push(new it(t.condition,0,r)),s.commands.push(new st(t.id)),n.position=s.commands.length}else if(t instanceof E){t.init&&s.commands.push(new et(t.init));let e=s.commands.length;null===t.increment&&s.commands.push(new nt(t.id));let n=null;if(t.condition){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));n=new it(t.condition,0,t.line),s.commands.push(n)}let r=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),r=t.body[t.body.length-1].line),t.increment&&(s.commands.push(new nt(t.id)),s.commands.push(new et(t.increment))),s.commands.push(new it(null,e,r)),s.commands.push(new st(t.id)),n.position=s.commands.length}else if(t instanceof C){let e=s.commands.length;t.continuing||s.commands.push(new nt(t.id));let n=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),n=t.body[t.body.length-1].line),s.commands.push(new it(null,e,n)),s.commands.push(new st(t.id))}else t instanceof S?(s.commands.push(new nt(t.id)),s.commands.push(new ot(t.body))):t instanceof P?s.commands.push(new rt(t.loopId,t)):t instanceof W?s.commands.push(new at(t.loopId,t.condition,t)):t instanceof I?s.commands.push(new et(t)):console.error(`TODO: statement type ${t.constructor.name}`)}return s}_collectFunctionCalls(e,t){if(e instanceof te){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t);e.isBuiltin||t.push(e)}else if(e instanceof he)this._collectFunctionCalls(e.left,t),this._collectFunctionCalls(e.right,t);else if(e instanceof ce)this._collectFunctionCalls(e.right,t);else if(e instanceof oe)for(const n of e.contents)this._collectFunctionCalls(n,t);else if(e instanceof ee){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t)}else e instanceof ae?this._collectFunctionCalls(e.value,t):e instanceof ue?this._collectFunctionCalls(e.index,t):re||console.error(`TODO: expression type ${e.constructor.name}`)}}export{R as Alias,h as AliasInfo,_e as Argument,d as ArgumentInfo,ue as ArrayIndex,s as ArrayInfo,Y as ArrayType,O as Assign,o as AssignOperator,ge as Attribute,he as BinaryOperator,ae as BitcastExpr,W as Break,D as Call,te as CallExpr,me as Case,N as Const,se as ConstExpr,P as Continue,S as Continuing,ee as CreateExpr,ye as Data,de as Default,pe as DefaultSelector,z as Diagnostic,G as Discard,ve as ElseIf,q as Enable,v as EntryFunctions,H as Expression,E as For,k as Function,_ as FunctionInfo,oe as GroupingExpr,F as If,L as Increment,i as IncrementOperator,f as InputInfo,V as Let,re as LiteralExpr,C as Loop,Te as MatrixData,xe as Member,t as MemberInfo,g as Node,le as Operator,p as OutputInfo,$ as Override,m as OverrideInfo,x as ParseContext,Q as PointerType,B as Requires,a as ResourceType,U as Return,K as SamplerType,be as ScalarData,ut as StackFrame,b as Statement,I as StaticAssert,J as StringExpr,Z as Struct,n as StructInfo,M as Switch,fe as SwitchCase,r as TemplateInfo,j as TemplateType,$e as Token,l as TokenClass,Ee as TokenType,Ae as TokenTypes,X as Type,e as TypeInfo,ie as TypecastExpr,Se as TypedData,ce as UnaryOperator,A as Var,ne as VariableExpr,c as VariableInfo,Ie as VectorData,we as VoidData,ct as WgslDebug,Ye as WgslExec,Ke as WgslParser,He as WgslReflect,Ve as WgslScanner,T as While,w as _BlockEnd,y as _BlockStart};\n//# sourceMappingURL=wgsl_reflect.module.js.map\n","import {\n    WgslReflect,\n    ArrayInfo,\n    StructInfo,\n    TemplateInfo,\n    TypeInfo,\n    VariableInfo,\n    FunctionInfo,\n    ResourceType,\n} from 'wgsl_reflect';\nimport {\n    WGSLType,\n} from './wgsl-types.js';\n\nexport type FieldDefinition = {\n    offset: number;\n    type: TypeDefinition;\n};\n\nexport type FieldDefinitions = {\n    [x: string]: FieldDefinition;\n};\n\nexport type TypeDefinition = {\n    size: number;\n};\n\n// These 3 types are wonky. Maybe we should make them inherit from a common\n// type with a `type` field. I wanted this to be a plain object though, not an object\n// with a constructor. In any case, right now, the way you tell them apart is\n// If it's got `elementType` then it's an ArrayDefinition\n// If it's got `fields` then it's a StructDefinition\n// else it's an IntrinsicDefinition\nexport type StructDefinition = TypeDefinition & {\n    fields: FieldDefinitions;\n    size: number;\n};\n\nexport { WGSLType };\n\nexport type IntrinsicDefinition = TypeDefinition & {\n    type: WGSLType;\n    numElements?: number;\n};\n\nexport type ArrayDefinition = TypeDefinition & {\n    elementType: TypeDefinition,\n    numElements: number,\n};\n\nexport type TextureDefinition = TypeDefinition & {\n    type: string,\n};\n\nexport type SamplerDefinition = TypeDefinition & {\n    type: string,\n};\n\n/**\n * @group(x) @binding(y) var<...> definition\n */\nexport interface VariableDefinition {\n    binding: number;\n    group: number;\n    size: number;\n    typeDefinition: TypeDefinition;\n}\n\nexport type StructDefinitions = {\n    [x: string]: StructDefinition;\n};\n\nexport type VariableDefinitions = {\n    [x: string]: VariableDefinition;\n};\n\nexport type Resource = {\n    name: string;\n    group: number;\n    entry: GPUBindGroupLayoutEntry;\n};\n\nexport type EntryPoint = {\n    stage: GPUShaderStageFlags;\n    resources: Resource[];\n}\n\nexport type EntryPoints = {\n    [x: string]: EntryPoint;\n}\n\n/**\n * The data definitions and other reflection data from some WGSL shader source.\n */\nexport type ShaderDataDefinitions = {\n    /**\n     * definitions for uniform bindings by name\n     */\n    uniforms: VariableDefinitions,\n    /**\n     * definitions for storage bindings by name\n     */\n    storages: VariableDefinitions,\n    /**\n     * definitions for sampler bindings by name\n     */\n    samplers: VariableDefinitions,\n    /**\n     * definitions for texture bindings by name\n     */\n    textures: VariableDefinitions,\n    /**\n     * definitions for storage texture bindings by name\n     */\n    storageTextures: VariableDefinitions,\n    /**\n     * definitions for external texture bindings by name\n     */\n    externalTextures: VariableDefinitions,\n    /**\n     * definitions for structures by name\n     */\n    structs: StructDefinitions,\n    /**\n     * Entry points by name.\n     */\n    entryPoints: EntryPoints,\n};\n\n/**\n * This should be compatible with GPUProgramableStage\n */\nexport type ProgrammableStage = {\n    entryPoint?: string,\n}\n\n/**\n * Compatible with GPURenderPipelineDescriptor and GPUComputePipelineDescriptor\n */\nexport type PipelineDescriptor = {\n    vertex?: ProgrammableStage,\n    fragment?: ProgrammableStage,\n    compute?: ProgrammableStage,\n};\n\nfunction getEntryPointForStage(defs: ShaderDataDefinitions, stage: ProgrammableStage, stageFlags: GPUShaderStageFlags) {\n    const {entryPoint: entryPointName} = stage;\n    if (entryPointName) {\n        const ep = defs.entryPoints[entryPointName];\n        return (ep && ep.stage === stageFlags) ? ep : undefined;\n    }\n\n    return Object.values(defs.entryPoints).filter(ep => ep.stage === stageFlags)[0];\n}\n\nfunction getStageResources(defs: ShaderDataDefinitions, stage: ProgrammableStage | undefined, stageFlags: GPUShaderStageFlags) {\n    if (!stage) {\n        return [];\n    }\n    const entryPoint = getEntryPointForStage(defs, stage, stageFlags);\n    return entryPoint?.resources || [];\n}\n\nconst byBinding = (a: GPUBindGroupLayoutEntry, b: GPUBindGroupLayoutEntry) => Math.sign(a.binding - b.binding);\n\n/**\n * Gets GPUBindGroupLayoutDescriptors for the given pipeline.\n *\n * Important: Assumes you pipeline is valid (it doesn't check for errors).\n *\n * Note: In WebGPU some layouts must be specified manually. For example an unfiltered-float\n *    sampler can not be derived since it is unknown at compile time pipeline creation time\n *    which texture you'll use.\n *\n * MAINTENANCE_TODO: Add example\n *\n * @param defs ShaderDataDefinitions or an array of ShaderDataDefinitions as\n *    returned from {@link makeShaderDataDefinitions}. If an array more than 1\n *    definition it's assumed the vertex shader is in the first and the fragment\n *    shader in the second.\n * @param desc A PipelineDescriptor. You should be able to pass in the same object you passed\n *    to `createRenderPipeline` or `createComputePipeline`.\n * @returns An array of GPUBindGroupLayoutDescriptors which you can pass, one at a time, to\n *    `createBindGroupLayout`. Note: the array will be sparse if there are gaps in group\n *    numbers. Note: Each GPUBindGroupLayoutDescriptor.entries will be sorted by binding.\n */\nexport function makeBindGroupLayoutDescriptors(\n    defs: ShaderDataDefinitions | ShaderDataDefinitions[],\n    desc: PipelineDescriptor,\n): GPUBindGroupLayoutDescriptor[] {\n    defs = Array.isArray(defs) ? defs : [defs];\n    const resources = [\n        ...getStageResources(defs[0], desc.vertex, GPUShaderStage.VERTEX),\n        ...getStageResources(defs[defs.length - 1], desc.fragment, GPUShaderStage.FRAGMENT),\n        ...getStageResources(defs[0], desc.compute, GPUShaderStage.COMPUTE),\n    ];\n    const bindGroupLayoutDescriptorsByGroupByBinding: Map<number, GPUBindGroupLayoutEntry>[] = [];\n    for (const resource of resources) {\n        const bindingsToBindGroupEntry = bindGroupLayoutDescriptorsByGroupByBinding[resource.group] || new Map<number, GPUBindGroupLayoutEntry>();\n        bindGroupLayoutDescriptorsByGroupByBinding[resource.group] = bindingsToBindGroupEntry;\n        // Should we error here if the 2 don't match?\n        const entry = bindingsToBindGroupEntry.get(resource.entry.binding);\n        bindingsToBindGroupEntry.set(resource.entry.binding, {\n            ...resource.entry,\n            visibility: resource.entry.visibility | (entry?.visibility || 0),\n        });\n    }\n    const descriptors = bindGroupLayoutDescriptorsByGroupByBinding.map(v => ({entries: [...v.values()].sort(byBinding) }));\n    for (let i = 0; i < descriptors.length; ++i) {\n        if (!descriptors[i]) {\n            descriptors[i] = { entries: [] };\n        }\n    }\n    return descriptors;\n}\n\nfunction getNamedVariables(reflect: WgslReflect, variables: VariableInfo[]): VariableDefinitions {\n    return Object.fromEntries(variables.map(v => {\n        const typeDefinition = addVariableType(reflect, v, 0);\n        return [\n            v.name,\n            {\n                typeDefinition,\n                group: v.group,\n                binding: v.binding,\n                size: typeDefinition.size,\n            },\n        ];\n    })) as VariableDefinitions;\n}\n\nfunction makeStructDefinition(reflect: WgslReflect, structInfo: StructInfo, offset: number) {\n    // StructDefinition\n    const fields: FieldDefinitions = Object.fromEntries(structInfo.members.map(m => {\n        return [\n            m.name,\n            {\n                offset: m.offset,\n                type: addType(reflect, m.type, 0),\n            },\n        ];\n    }));\n    return {\n        fields,\n        size: structInfo.size,\n        offset,\n    };\n}\n\nfunction getTextureSampleType(type: TypeInfo) {\n    if (type.name.includes('depth')) {\n        return 'depth';\n    }\n    // unfiltered-float\n    switch ((type as TemplateInfo).format?.name) {\n        case 'f32': return 'float';\n        case 'i32': return 'sint';\n        case 'u32': return 'uint';\n        default:\n            throw new Error('unknown texture sample type');\n    }\n}\n\nfunction getViewDimension(type: TypeInfo): GPUTextureViewDimension {\n    if (type.name.includes('2d_array')) {\n        return '2d-array';\n    }\n    if (type.name.includes('cube_array')) {\n        return 'cube-array';\n    }\n    if (type.name.includes('3d')) {\n        return '3d';\n    }\n    if (type.name.includes('1d')) {\n        return '1d';\n    }\n    if (type.name.includes('cube')) {\n        return 'cube';\n    }\n    return '2d';\n}\n\nfunction getStorageTextureAccess(type: TypeInfo): GPUStorageTextureAccess {\n    switch ((type as TemplateInfo).access) {\n        case 'read': return 'read-only';\n        case 'write': return 'write-only';\n        case 'read_write': return 'read-write';\n        default:\n            throw new Error('unknonw storage texture access');\n    }\n}\n\nfunction getSamplerType(type: TypeInfo) {\n    // \"non-filtering\" can only be specified manually.\n    return type.name.endsWith('_comparison')\n        ? 'comparison'\n        : 'filtering';\n}\n\nfunction getBindGroupLayoutEntry(resource: VariableInfo, visibility: GPUShaderStageFlags): GPUBindGroupLayoutEntry {\n    const { binding, access, type } = resource;\n    switch (resource.resourceType) {\n        case ResourceType.Uniform:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case ResourceType.Storage:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    type: (access === '' || access === 'read') ? 'read-only-storage' : 'storage',\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case ResourceType.Texture: {\n            if (type.name === 'texture_external') {\n                return {\n                    binding,\n                    visibility,\n                    externalTexture: {},\n                };\n            }\n            const multisampled = type.name.includes('multisampled');\n            return {\n                binding,\n                visibility,\n                texture: {\n                    sampleType: getTextureSampleType(type),\n                    viewDimension: getViewDimension(type),\n                    multisampled,\n                },\n            };\n        }\n        case ResourceType.Sampler:\n            return {\n                binding,\n                visibility,\n                sampler: {\n                    type: getSamplerType(type),\n                },\n            };\n        case ResourceType.StorageTexture:\n            return {\n                binding,\n                visibility,\n                storageTexture: {\n                    access: getStorageTextureAccess(type),\n                    format: ((type as TemplateInfo).format!.name as GPUTextureFormat),\n                    viewDimension: getViewDimension(type),\n                },\n            };\n        default:\n            throw new Error('unknown resource type');\n    }\n}\n\nfunction addEntryPoints(funcInfos: FunctionInfo[], stage: GPUShaderStageFlags): EntryPoints {\n    const entryPoints: EntryPoints = {};\n    for (const info of funcInfos) {\n        entryPoints[info.name] = {\n            stage,\n            resources: info.resources.map(resource => {\n                const {name, group} = resource;\n                return {\n                    name,\n                    group,\n                    entry: getBindGroupLayoutEntry(resource, stage),\n                };\n            }),\n        };\n    }\n    return entryPoints;\n}\n\n/**\n * Given a WGSL shader, returns data definitions for structures,\n * uniforms, and storage buffers\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct MyStruct {\n *    color: vec4f,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: MyUniforms;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.uniforms.myUniforms);\n *\n * myUniformValues.set({\n *   color: [1, 0, 1, 1],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * device.queue.writeBuffer(uniformBuffer, 0, myUniformValues.arrayBuffer);\n * ```\n *\n * @param code WGSL shader. Note: it is not required for this to be a complete shader\n * @returns definitions of the structures by name. Useful for passing to {@link makeStructuredView}\n */\nexport function makeShaderDataDefinitions(code: string): ShaderDataDefinitions {\n    const reflect = new WgslReflect(code);\n\n    const structs = Object.fromEntries(reflect.structs.map(structInfo => {\n        return [structInfo.name, makeStructDefinition(reflect, structInfo, 0)];\n    }));\n\n    const uniforms = getNamedVariables(reflect, reflect.uniforms);\n    const storages = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.Storage));\n    const storageTextures = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.StorageTexture));\n    const textures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name !== 'texture_external'));\n    const externalTextures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name === 'texture_external'));\n    const samplers = getNamedVariables(reflect, reflect.samplers);\n\n    const entryPoints: EntryPoints = {\n        ...addEntryPoints(reflect.entry.vertex, GPUShaderStage.VERTEX),\n        ...addEntryPoints(reflect.entry.fragment, GPUShaderStage.FRAGMENT),\n        ...addEntryPoints(reflect.entry.compute, GPUShaderStage.COMPUTE),\n    };\n\n    return {\n        externalTextures,\n        samplers,\n        structs,\n        storages,\n        storageTextures,\n        textures,\n        uniforms,\n        entryPoints,\n    };\n}\n\nfunction assert(cond: boolean, msg = '') {\n    if (!cond) {\n        throw new Error(msg);\n    }\n}\n\n/*\n write down what I want for a given type\n\n    struct VSUniforms {\n        foo: u32,\n    };\n    @group(4) @binding(1) var<uniform> uni1: f32;\n    @group(3) @binding(2) var<uniform> uni2: array<f32, 5>;\n    @group(2) @binding(3) var<uniform> uni3: VSUniforms;\n    @group(1) @binding(4) var<uniform> uni4: array<VSUniforms, 6>;\n\n    uni1: {\n        type: 'f32',\n        numElements: undefined\n    },\n    uni2: {\n        type: 'array',\n        elementType: 'f32'\n        numElements: 5,\n    },\n    uni3: {\n        type: 'struct',\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n    },\n    uni4: {\n        type: 'array',\n        elementType:\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        ...\n    ]\n\n    */\n\nfunction addVariableType(reflect: WgslReflect, v: VariableInfo, offset: number):\n    StructDefinition |\n    IntrinsicDefinition |\n    ArrayDefinition |\n    TextureDefinition |\n    SamplerDefinition {\n    switch (v.resourceType) {\n        case ResourceType.Uniform:\n        case ResourceType.Storage:\n        case ResourceType.StorageTexture:\n            return addType(reflect, v.type, offset);\n        default:\n            return {\n                size: 0,\n                type: v.type.name,\n            };\n    }\n}\n\nfunction addType(reflect: WgslReflect, typeInfo: TypeInfo, offset: number):\n  StructDefinition |\n  IntrinsicDefinition |\n  ArrayDefinition {\n    if (typeInfo.isArray) {\n        assert(!typeInfo.isStruct, 'struct array is invalid');\n        assert(!typeInfo.isStruct, 'template array is invalid');\n        const arrayInfo = typeInfo as ArrayInfo;\n        // ArrayDefinition\n        return {\n            size: arrayInfo.size,\n            elementType: addType(reflect, arrayInfo.format, offset),\n            numElements: arrayInfo.count,\n        };\n    } else if (typeInfo.isStruct) {\n        assert(!typeInfo.isTemplate, 'template struct is invalid');\n        const structInfo = typeInfo as StructInfo;\n        return makeStructDefinition(reflect, structInfo, offset);\n    } else {\n        // template is like vec4<f32> or mat4x4<f16>\n        const asTemplateInfo = typeInfo as TemplateInfo;\n        const type = typeInfo.isTemplate\n           ? `${asTemplateInfo.name}<${asTemplateInfo.format!.name}>`\n           : typeInfo.name;\n        // IntrinsicDefinition\n        return {\n            size: typeInfo.size,\n            type: type as WGSLType,\n        };\n    }\n}\n","import {\n  isTypedArray,\n} from './typed-arrays.js';\n\nexport function guessTextureBindingViewDimensionForTexture(\n    dimension: GPUTextureDimension | undefined,\n    depthOrArrayLayers: number,\n): GPUTextureViewDimension {\n  switch (dimension) {\n    case '1d': return '1d';\n    case '3d': return '3d';\n    default: return depthOrArrayLayers > 1 ? '2d-array' : '2d';\n  }\n}\n\nfunction normalizeGPUExtent3Dict(size: GPUExtent3DDict) {\n  return [size.width, size.height || 1, size.depthOrArrayLayers || 1];\n}\n\n/**\n * Converts a `GPUExtent3D` into an array of numbers\n *\n * `GPUExtent3D` has two forms `[width, height?, depth?]` or\n * `{width: number, height?: number, depthOrArrayLayers?: number}`\n *\n * You pass one of those in here and it returns an array of 3 numbers\n * so that your code doesn't have to deal with multiple forms.\n *\n * @param size\n * @returns an array of 3 numbers, [width, height, depthOrArrayLayers]\n */\nexport function normalizeGPUExtent3D(size: GPUExtent3D): number[] {\n  return (Array.isArray(size) || isTypedArray(size))\n    ? [...(size as Iterable<number>), 1, 1].slice(0, 3)\n    : normalizeGPUExtent3Dict(size as GPUExtent3DDict);\n}\n\n/**\n * Given a GPUExtent3D returns the number of mip levels needed\n *\n * @param size\n * @returns number of mip levels needed for the given size\n */\nexport function numMipLevels(size: GPUExtent3D, dimension?: GPUTextureDimension): number {\n   const sizes = normalizeGPUExtent3D(size);\n   const maxSize = Math.max(...sizes.slice(0, dimension === '3d' ? 3 : 2));\n   return 1 + Math.log2(maxSize) | 0;\n}\n\n// Use a WeakMap so the device can be destroyed and/or lost\nconst byDevice = new WeakMap();\n\n/**\n * Generates mip levels from level 0 to the last mip for an existing texture\n *\n * The texture must have been created with TEXTURE_BINDING and RENDER_ATTACHMENT\n * and been created with mip levels\n *\n * @param device A GPUDevice\n * @param texture The texture to create mips for\n * @param textureBindingViewDimension This is only needed in compatibility mode\n *   and it is only needed when the texture is going to be used as a cube map.\n */\nexport function generateMipmap(\n    device: GPUDevice,\n    texture: GPUTexture,\n    textureBindingViewDimension?: GPUTextureViewDimension) {\n  let perDeviceInfo = byDevice.get(device);\n  if (!perDeviceInfo) {\n    perDeviceInfo = {\n      pipelineByFormatAndViewDimension: {},\n      moduleByViewDimension: {},\n    };\n    byDevice.set(device, perDeviceInfo);\n  }\n  let {\n    sampler,\n    module,\n  } = perDeviceInfo;\n  const {\n    pipelineByFormatAndViewDimension,\n  } = perDeviceInfo;\n  textureBindingViewDimension = device.features.has('core-features-and-limits')\n    ? '2d-array'\n    : textureBindingViewDimension ?? guessTextureBindingViewDimensionForTexture(\n        texture.dimension, texture.depthOrArrayLayers\n      );\n  if (!module) {\n    module = device.createShaderModule({\n      label: `mip level generation for ${textureBindingViewDimension}`,\n      code: `\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n          @location(1) @interpolate(flat, either) baseArrayLayer: u32,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32,\n          @builtin(instance_index) baseArrayLayer: u32,\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          vsOutput.baseArrayLayer = baseArrayLayer;\n          return vsOutput;\n        }\n\n        @group(0) @binding(0) var ourSampler: sampler;\n\n        @group(0) @binding(1) var ourTexture2d: texture_2d<f32>;\n        @fragment fn fs2d(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(ourTexture2d, ourSampler, fsInput.texcoord);\n        }\n\n        @group(0) @binding(1) var ourTexture2dArray: texture_2d_array<f32>;\n        @fragment fn fs2darray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTexture2dArray,\n            ourSampler,\n            fsInput.texcoord,\n            fsInput.baseArrayLayer);\n        }\n\n        @group(0) @binding(1) var ourTextureCube: texture_cube<f32>;\n        @fragment fn fscube(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCube,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1));\n        }\n\n        @group(0) @binding(1) var ourTextureCubeArray: texture_cube_array<f32>;\n        @fragment fn fscubearray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCubeArray,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1), fsInput.baseArrayLayer);\n        }\n      `,\n    });\n\n    sampler = device.createSampler({\n      minFilter: 'linear',\n      magFilter: 'linear',\n    });\n    Object.assign(perDeviceInfo, { sampler, module });\n  }\n\n  const id = `${texture.format}.${textureBindingViewDimension}`;\n\n  if (!pipelineByFormatAndViewDimension[id]) {\n    const entryPoint = `fs${textureBindingViewDimension.replace(/[\\W]/, '')}`;\n    pipelineByFormatAndViewDimension[id] = device.createRenderPipeline({\n      label: `mip level generator pipeline for ${textureBindingViewDimension}`,\n      layout: 'auto',\n      vertex: {\n        module,\n      },\n      fragment: {\n        module,\n        entryPoint,\n        targets: [{ format: texture.format }],\n      },\n    });\n  }\n  const pipeline = pipelineByFormatAndViewDimension[id];\n\n  const encoder = device.createCommandEncoder({\n    label: 'mip gen encoder',\n  });\n\n  for (let baseMipLevel = 1; baseMipLevel < texture.mipLevelCount; ++baseMipLevel) {\n    for (let baseArrayLayer = 0; baseArrayLayer < texture.depthOrArrayLayers; ++baseArrayLayer) {\n      const bindGroup = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: sampler },\n          {\n            binding: 1,\n            resource: texture.createView({\n              dimension: textureBindingViewDimension,\n              baseMipLevel: baseMipLevel - 1,\n              mipLevelCount: 1,\n            }),\n          },\n        ],\n      });\n\n      const renderPassDescriptor: GPURenderPassDescriptor = {\n        label: 'mip gen renderPass',\n        colorAttachments: [\n          {\n            view: texture.createView({\n               dimension: '2d',\n               baseMipLevel,\n               mipLevelCount: 1,\n               baseArrayLayer,\n               arrayLayerCount: 1,\n            }),\n            loadOp: 'clear',\n            storeOp: 'store',\n          },\n        ],\n      };\n\n      const pass = encoder.beginRenderPass(renderPassDescriptor);\n      pass.setPipeline(pipeline);\n      pass.setBindGroup(0, bindGroup);\n      pass.draw(3, 1, 0, baseArrayLayer);\n      pass.end();\n    }\n  }\n\n  const commandBuffer = encoder.finish();\n  device.queue.submit([commandBuffer]);\n}","import {\n  TypedArray,\n  TypedArrayConstructor,\n  isTypedArray,\n} from './typed-arrays.js';\n\nconst kTypedArrayToAttribFormat = new Map<TypedArrayConstructor, {formats: [string, string], defaultForType: number}>([\n  [ Int8Array,    { formats: ['sint8',   'snorm8' ], defaultForType: 1 } ],\n  [ Uint8Array,   { formats: ['uint8',   'unorm8' ], defaultForType: 1 } ],\n  [ Int16Array,   { formats: ['sint16',  'snorm16'], defaultForType: 1 } ],\n  [ Uint16Array,  { formats: ['uint16',  'unorm16'], defaultForType: 1 } ],\n  [ Int32Array,   { formats: ['sint32',  'snorm32'], defaultForType: 0 } ],\n  [ Uint32Array,  { formats: ['uint32',  'unorm32'], defaultForType: 0 } ],\n  [ Float32Array, { formats: ['float32', 'float32'], defaultForType: 0 } ],\n  // TODO: Add Float16Array\n]);\n\nconst kVertexFormatPrefixToType = new Map<string, TypedArrayConstructor>(\n  [...kTypedArrayToAttribFormat.entries()].map(([Type, {formats: [s1, s2]}]) => [[s1, Type], [s2, Type]] as [[string, TypedArrayConstructor], [string, TypedArrayConstructor]]).flat()\n);\n\n/**\n * See {@link Arrays} for details\n */\nexport type FullArraySpec = {\n  data: number | number[] | TypedArray,\n  type?: TypedArrayConstructor,\n  numComponents?: number,\n  shaderLocation?: number,\n  normalize?: boolean,\n};\n\nexport type ArrayUnion = number | number[] | TypedArray | FullArraySpec;\n\n/**\n * Named Arrays\n *\n * A set of named arrays are passed to various functions like\n * {@link createBufferLayoutsFromArrays} and {@link createBuffersAndAttributesFromArrays}\n *\n * Each array can be 1 of 4 things. A native JavaScript array, a TypedArray, a number, a {@link FullArraySpec}\n *\n * If it's a native array then, if the name of the array is `indices` the data will be converted\n * to a `Uint32Array`, otherwise a `Float32Array`.  Use a TypedArray or a {@link FullArraySpec} to choose a different type.\n * The {@link FullArraySpec} `type` is only used if it's not already a TypedArray\n *\n * If it's a native array or a TypedArray or if `numComponents` in a {@link FullArraySpec} is not\n * specified it will be guessed. If the name contains 'coord', 'texture' or 'uv' then numComponents will be 2.\n * If the name contains 'color' or 'colour' then numComponents will be 4. Otherwise it's 3.\n *\n * For attribute formats, guesses are made based on type and number of components. The guess is\n * based on this table where (d) is the default for that type if `normalize` is not specified\n *\n * | Type          |     ..      | normalize   |\n * | ------------  | ----------- | ----------- |\n * | Int8Array     | sint8       | snorm8 (d)  |\n * | Uint8Array    | uint8       | unorm8 (d)  |\n * | Int16Array    | sint16      | snorm16 (d) |\n * | Uint16Array   | uint16      | unorm16 (d) |\n * | Int32Array    | sint32 (d)  | snorm32     |\n * | Uint32Array   | uint32 (d)  | unorm32     |\n * | Float32Array  | float32 (d) | float32     |\n *\n */\nexport type Arrays = { [key: string]: ArrayUnion };\nexport type ArraysOptions = {\n  interleave?: boolean,\n  stepMode?: GPUVertexStepMode,\n  usage?: GPUBufferUsageFlags,\n  shaderLocation?: number,\n};\n\n/**\n * Returned by {@link createBuffersAndAttributesFromArrays}\n */\nexport type BuffersAndAttributes = {\n  numElements: number,\n  bufferLayouts: GPUVertexBufferLayout[],\n  buffers: GPUBuffer[],\n  indexBuffer?: GPUBuffer,\n  indexFormat?: GPUIndexFormat,\n};\n\nfunction isIndices(name: string) {\n  return name === \"indices\";\n}\n\nexport function makeTypedArrayFromArrayUnion(array: ArrayUnion, name: string): TypedArray {\n  if (isTypedArray(array)) {\n    return array as TypedArray;\n  }\n\n  let asFullSpec = array as FullArraySpec;\n  if (isTypedArray(asFullSpec.data)) {\n    return asFullSpec.data as TypedArray;\n  }\n\n  if (Array.isArray(array) || typeof array === 'number') {\n    asFullSpec = {\n      data: array,\n    };\n  }\n\n  let Type = asFullSpec.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint32Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(asFullSpec.data as any); // ugh!\n}\n\nfunction getArray(array: ArrayUnion): number[] | TypedArray {\n  const arr = (array as TypedArray).length ? array : (array as FullArraySpec).data;\n  return arr as TypedArray;\n}\n\nconst kNameToNumComponents = [\n  { re: /coord|texture|uv/i, numComponents: 2 },\n  { re: /color|colour/i, numComponents: 4 },\n];\n\nfunction guessNumComponentsFromNameImpl(name: string) {\n  for (const {re, numComponents} of kNameToNumComponents) {\n    if (re.test(name)) {\n      return numComponents;\n    }\n  }\n  return 3;\n}\n\nfunction guessNumComponentsFromName(name: string, length: number) {\n  const numComponents = guessNumComponentsFromNameImpl(name);\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n  return numComponents;\n}\n\nexport function getNumComponents(array: ArrayUnion , arrayName: string): number {\n  return (array as FullArraySpec).numComponents || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nconst kVertexFormatRE = /(\\w+)(?:x(\\d))$/;\nfunction numComponentsAndTypeFromVertexFormat(format: GPUVertexFormat) {\n  const m = kVertexFormatRE.exec(format);\n  const [prefix, numComponents] = m ? [m[1], parseInt(m[2])] : [format, 1];\n  return {\n    Type: kVertexFormatPrefixToType.get(prefix),\n    numComponents,\n  };\n}\n\nfunction createTypedArrayOfSameType(typedArray: TypedArray, arrayBuffer: ArrayBuffer) {\n  const Ctor = Object.getPrototypeOf(typedArray).constructor;\n  return new Ctor(arrayBuffer);\n}\n\nexport type TypedArrayWithOffsetAndStride = {\n  data: TypedArray,\n  offset: number, /** In elements, not bytes */\n  stride: number, /** In elements, not bytes */\n};\n\n/**\n * Given a set of named arrays, generates an array `GPUBufferLayout`s\n *\n * Examples:\n *\n * ```js\n *   const arrays = {\n *     position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *     normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *     texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *   };\n *\n *   const { bufferLayouts, typedArrays } = createBufferLayoutsFromArrays(arrays);\n * ```\n *\n * results in `bufferLayouts` being\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * and `typedArrays` being\n *\n * ```\n * [\n *   someFloat32Array0,\n *   someFloat32Array1,\n *   someFloat32Array2,\n * ]\n * ```\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: If typed arrays are passed in the same typed arrays will come out (copies will not be made)\n */\nexport function createBufferLayoutsFromArrays(arrays: Arrays, options: ArraysOptions = {}): {\n  bufferLayouts: GPUVertexBufferLayout[],\n  typedArrays: TypedArrayWithOffsetAndStride[],\n} {\n  const interleave = options.interleave === undefined ? true : options.interleave;\n  const stepMode = options.stepMode || 'vertex';\n  const shaderLocations: number[] = options.shaderLocation\n     ? (Array.isArray(options.shaderLocation) ? options.shaderLocation : [options.shaderLocation])\n     : [0];\n  let currentOffset = 0;\n  const bufferLayouts: GPUVertexBufferLayout[] = [];\n  const attributes: GPUVertexAttribute[] = [];\n  const typedArrays: TypedArrayWithOffsetAndStride[] = [];\n  Object.keys(arrays)\n    .filter(arrayName => !isIndices(arrayName))\n    .forEach(arrayName => {\n      const array = arrays[arrayName];\n      const data = makeTypedArrayFromArrayUnion(array, arrayName);\n      const totalNumComponents = getNumComponents(array, arrayName);\n      // if totalNumComponents > 4 then we clearly need to split this into multiple\n      // attributes\n      // (a) <= 4 doesn't mean don't split and\n      // (b) how to split? We could divide by 4 and if it's not even then divide by 3\n      //     as a guess?\n      //     5 is error? or 1x4 + 1x1?\n      //     6 is 2x3\n      //     7 is error? or 1x4 + 1x3?\n      //     8 is 2x4\n      //     9 is 3x3\n      //    10 is error? or 2x4 + 1x2?\n      //    11 is error? or 2x4 + 1x3?\n      //    12 is 3x4 or 4x3?\n      //    13 is error? or 3x4 + 1x1 or 4x3 + 1x1?\n      //    14 is error? or 3x4 + 1x2 or 4x3 + 1x2?\n      //    15 is error? or 3x4 + 1x3 or 4x3 + 1x3?\n      //    16 is 4x4\n      const by4 = totalNumComponents / 4;\n      const by3 = totalNumComponents / 3;\n      const step = by4 % 1 === 0 ? 4 : (by3 % 1 === 0 ? 3 : 4);\n      for (let component = 0; component < totalNumComponents; component += step) {\n        const numComponents = Math.min(step, totalNumComponents - component);\n        const offset = currentOffset;\n        currentOffset += numComponents * data.BYTES_PER_ELEMENT;\n        const { defaultForType, formats } = kTypedArrayToAttribFormat.get(Object.getPrototypeOf(data).constructor)!;\n        const normalize = (array as FullArraySpec).normalize;\n        const formatNdx = typeof normalize === 'undefined' ? defaultForType : (normalize ? 1 : 0);\n        const format = `${formats[formatNdx]}${numComponents > 1 ? `x${numComponents}` : ''}` as GPUVertexFormat;\n\n        // TODO: cleanup with generator?\n        const shaderLocation = shaderLocations.shift()!;\n        if (shaderLocations.length === 0) {\n          shaderLocations.push(shaderLocation + 1);\n        }\n        attributes.push({\n          offset,\n          format,\n          shaderLocation,\n        });\n        typedArrays.push({\n          data,\n          offset: component,\n          stride: totalNumComponents,\n        });\n      }\n      if (!interleave) {\n        bufferLayouts.push({\n          stepMode,\n          arrayStride: currentOffset,\n          attributes: attributes.slice(),\n        });\n        currentOffset = 0;\n        attributes.length = 0;\n      }\n    });\n  if (attributes.length) {\n    bufferLayouts.push({\n      stepMode,\n      arrayStride: currentOffset,\n      attributes: attributes,\n    });\n  }\n  return {\n    bufferLayouts,\n    typedArrays,\n  };\n}\n\nfunction getTypedArrayWithOffsetAndStride(ta: TypedArray | TypedArrayWithOffsetAndStride, numComponents: number) {\n  return (isTypedArray(ta)\n    ? { data: ta, offset: 0, stride: numComponents }\n    : ta) as TypedArrayWithOffsetAndStride;\n}\n\n/**\n * Given an array of `GPUVertexAttribute`s and a corresponding array\n * of TypedArrays, interleaves the contents of the typed arrays\n * into the given ArrayBuffer\n *\n * example:\n *\n * ```js\n * const attributes: GPUVertexAttribute[] = [\n *   { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *   { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *   { shaderLocation: 2, offset: 24, format: 'float32x2' },\n * ];\n * const typedArrays = [\n *   new Float32Array([1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1]),\n *   new Float32Array([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1]),\n *   new Float32Array([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]),\n * ];\n * const arrayStride = (3 + 3 + 2) * 4;  // pos + nrm + uv\n * const arrayBuffer = new ArrayBuffer(arrayStride * 24)\n * interleaveVertexData(attributes, typedArrays, arrayStride, arrayBuffer)\n * ```\n *\n * results in the contents of `arrayBuffer` to be the 3 TypedArrays interleaved\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: You can generate `attributes` and `typedArrays` above by calling\n * {@link createBufferLayoutsFromArrays}\n */\nexport function interleaveVertexData(\n    attributes: GPUVertexAttribute[],\n    typedArrays: (TypedArray | TypedArrayWithOffsetAndStride)[],\n    arrayStride: number,\n    arrayBuffer: ArrayBuffer,\n) {\n  const views = new Map<TypedArrayConstructor, TypedArray>();\n  const getView = (typedArray: TypedArray) => {\n    const Ctor = Object.getPrototypeOf(typedArray).constructor;\n    const view = views.get(Ctor);\n    if (view) {\n      return view;\n    }\n    const newView = new Ctor(arrayBuffer);\n    views.set(Ctor, newView);\n    return newView;\n  };\n\n  attributes.forEach((attribute, ndx) => {\n    const { offset, format } = attribute;\n    const { numComponents } = numComponentsAndTypeFromVertexFormat(format);\n    const {\n      data,\n      offset: srcOffset,\n      stride,\n    } = getTypedArrayWithOffsetAndStride(typedArrays[ndx], numComponents);\n\n    const view = getView(data);\n    for (let i = 0; i < data.length; i += stride) {\n      const ndx = i / stride;\n      const dstOffset = (offset + ndx * arrayStride) / view.BYTES_PER_ELEMENT;\n      const srcOff = i + srcOffset;\n      const s = data.subarray(srcOff, srcOff + numComponents);\n      view.set(s, dstOffset);\n    }\n  });\n}\n\n/**\n * Given arrays, create buffers, fills the buffers with data if provided, optionally\n * interleaves the data (the default).\n *\n * Example:\n *\n * ```js\n *  const {\n *    buffers,\n *    bufferLayouts,\n *    indexBuffer,\n *    indexFormat,\n *    numElements,\n *  } = createBuffersAndAttributesFromArrays(device, {\n *    position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *    normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *    texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *    indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23],\n *  });\n * ```\n *\n * Where `bufferLayouts` will be\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * * `buffers` will have one `GPUBuffer` of usage `GPUBufferUsage.VERTEX`\n * * `indexBuffer` will be `GPUBuffer` of usage `GPUBufferUsage.INDEX`\n * * `indexFormat` will be `uint32` (use a full spec or a typedarray of `Uint16Array` if you want 16bit indices)\n * * `numElements` will be 36 (this is either the number entries in the array named `indices` or if no\n *    indices are provided then it's the length of the first array divided by numComponents. See {@link Arrays})\n *\n * See {@link Arrays} for details on the various types of arrays.\n * Also see the cube and instancing examples.\n */\nexport function createBuffersAndAttributesFromArrays(device: GPUDevice, arrays: Arrays, options: ArraysOptions = {}): BuffersAndAttributes {\n  const usage = (options.usage || 0);\n\n  const {\n    bufferLayouts,\n    typedArrays,\n  } = createBufferLayoutsFromArrays(arrays, options);\n\n  const buffers = [];\n  let numElements = -1;\n  let bufferNdx = 0;\n  for (const {attributes, arrayStride} of bufferLayouts) {\n    const attribs = attributes as GPUVertexAttribute[];\n    const attrib0 = attribs[0];\n    const {numComponents} = numComponentsAndTypeFromVertexFormat(attrib0.format);\n\n    const {\n      data: data0,\n      stride,\n     } = getTypedArrayWithOffsetAndStride(typedArrays[bufferNdx], numComponents);\n\n    if (numElements < 0) {\n      numElements = data0.length / stride;\n    }\n\n    const size = arrayStride * numElements;\n    const buffer = device.createBuffer({\n      usage: usage | GPUBufferUsage.VERTEX,\n      size,\n      mappedAtCreation: true,\n    });\n\n    const arrayBuffer = buffer.getMappedRange();\n    if (attribs.length === 1 && arrayStride === data0.BYTES_PER_ELEMENT * numComponents) {\n      const view = createTypedArrayOfSameType(data0, arrayBuffer);\n      view.set(data0);\n    } else {\n      interleaveVertexData(attribs, typedArrays.slice(bufferNdx), arrayStride, arrayBuffer);\n    }\n    buffer.unmap();\n    buffers.push(buffer);\n    bufferNdx += attribs.length;\n  }\n\n  const buffersAndAttributes: BuffersAndAttributes = {\n    numElements,\n    bufferLayouts,\n    buffers,\n  };\n\n  const indicesEntry = Object.entries(arrays).find(([arrayName]) => isIndices(arrayName));\n  if (indicesEntry) {\n    const indices = makeTypedArrayFromArrayUnion(indicesEntry[1], 'indices');\n    const indexBuffer = device.createBuffer({\n      size: indices.byteLength,\n      usage: GPUBufferUsage.INDEX | usage,\n      mappedAtCreation: true,\n    });\n    const dst = createTypedArrayOfSameType(indices, indexBuffer.getMappedRange());\n    dst.set(indices);\n    indexBuffer.unmap();\n\n    buffersAndAttributes.indexBuffer = indexBuffer;\n    buffersAndAttributes.indexFormat = indices instanceof Uint16Array ? 'uint16' : 'uint32';\n    buffersAndAttributes.numElements = indices.length;\n  }\n\n  return buffersAndAttributes;\n}\n\n/**\n * Calls `passEncoder.setVertexBuffer` and optionally `passEncoder.setIndexBuffer`\n * for the buffers specified in `buffersAndAttributes`.\n *\n * This is extremely simple function. It is equivalent to\n *\n * ```js\n * buffersAndAttributes.buffers.forEach((buffer, i) => {\n *   passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n * });\n*\n * if (buffersAndAttributes.indexBuffer) {\n *   passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat!);\n * }\n * ```\n *\n * It exists solely for simple cases. If you have a complex case, call the passEncoder\n * yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n * @param firstVertexBufferIndex The first vertex buffer index. default = 0.\n */\nexport function setVertexAndIndexBuffers(\n    passEncoder: GPURenderPassEncoder,\n    buffersAndAttributes: BuffersAndAttributes,\n    firstVertexBufferIndex = 0) {\n  buffersAndAttributes.buffers.forEach((buffer, i) => {\n    passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n  });\n\n  if (buffersAndAttributes.indexBuffer) {\n    passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat!);\n  }\n}\n\n/**\n * Calls {@link setVertexAndIndexBuffers} and then calls either `draw` or `drawIndexed`\n *\n * This is an extremely simple function. See  {@link setVertexAndIndexBuffers}.\n * If you need something more complex, call pass encoder functions yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n */\nexport function drawArrays(passEncoder: GPURenderPassEncoder, buffersAndAttributes: BuffersAndAttributes) {\n  setVertexAndIndexBuffers(passEncoder, buffersAndAttributes);\n  if (buffersAndAttributes.indexBuffer) {\n    passEncoder.drawIndexed(buffersAndAttributes.numElements);\n  } else {\n    passEncoder.draw(buffersAndAttributes.numElements);\n  }\n}","import {\n  TypedArray,\n  TypedArrayConstructor,\n  isTypedArray,\n} from './typed-arrays.js';\nimport {\n  generateMipmap,\n  numMipLevels,\n  guessTextureBindingViewDimensionForTexture,\n} from './generate-mipmap.js';\n\nexport type CopyTextureOptions = {\n  flipY?: boolean,\n  premultipliedAlpha?: boolean,\n  colorSpace?: PredefinedColorSpace;\n  dimension?: GPUTextureDimension;\n  viewDimension?: GPUTextureViewDimension;\n  baseArrayLayer?: number;\n};\n\nexport type TextureData = {\n  data: TypedArray | number[],\n};\nexport type TextureCreationData = TextureData & {\n  width?: number,\n  height?: number,\n};\n\nexport type TextureRawDataSource = TextureCreationData | TypedArray | number[];\nexport type TextureSource = GPUCopyExternalImageSourceInfo['source'] | TextureRawDataSource;\n\nfunction isTextureData(source: TextureSource) {\n  const src = source as TextureData;\n  return isTypedArray(src.data) || Array.isArray(src.data);\n}\n\nfunction isTextureRawDataSource(source: TextureSource) {\n  return isTypedArray(source) || Array.isArray(source) || isTextureData(source);\n}\n\nfunction toTypedArray(v: TypedArray | number[], format: GPUTextureFormat): TypedArray {\n  if (isTypedArray(v)) {\n    return v as TypedArray;\n  }\n  const { Type } = getTextureFormatInfo(format);\n  return new Type(v);\n}\n\nfunction guessDimensions(width: number | undefined, height: number | undefined, numElements: number, dimension: GPUTextureViewDimension = '2d'): number[] {\n  if (numElements % 1 !== 0) {\n    throw new Error(\"can't guess dimensions\");\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (dimension === 'cube' ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width!;\n    if (height % 1) {\n      throw new Error(\"can't guess dimensions\");\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw new Error(\"can't guess dimensions\");\n    }\n  }\n  const depth = numElements / width! / height;\n  if (depth % 1) {\n    throw new Error(\"can't guess dimensions\");\n  }\n  return [width!, height, depth];\n}\n\nfunction textureViewDimensionToDimension(viewDimension: GPUTextureViewDimension | undefined) {\n  switch (viewDimension) {\n    case '1d': return '1d';\n    case '3d': return '3d';\n    default: return '2d';\n  }\n}\n\nconst kFormatToTypedArray: {[key: string]: TypedArrayConstructor} = {\n  '8snorm': Int8Array,\n  '8unorm': Uint8Array,\n  '8sint': Int8Array,\n  '8uint': Uint8Array,\n  '16snorm': Int16Array,\n  '16unorm': Uint16Array,\n  '16sint': Int16Array,\n  '16uint': Uint16Array,\n  '32snorm': Int32Array,\n  '32unorm': Uint32Array,\n  '32sint': Int32Array,\n  '32uint': Uint32Array,\n  '16float': Uint16Array,  // TODO: change to Float16Array\n  '32float': Float32Array,\n};\n\nconst kTextureFormatRE = /([a-z]+)(\\d+)([a-z]+)/;\n\nfunction getTextureFormatInfo(format: GPUTextureFormat) {\n  // this is a hack! It will only work for common formats\n  const [, channels, bits, typeName] = kTextureFormatRE.exec(format)!;\n  // TODO: if the regex fails, use table for other formats?\n  const numChannels = channels.length;\n  const bytesPerChannel = parseInt(bits) / 8;\n  const bytesPerElement = numChannels * bytesPerChannel;\n  const Type = kFormatToTypedArray[`${bits}${typeName}`];\n\n  return {\n    channels,\n    numChannels,\n    bytesPerChannel,\n    bytesPerElement,\n    Type,\n  };\n}\n\n\n/**\n * Gets the size of a mipLevel. Returns an array of 3 numbers [width, height, depthOrArrayLayers]\n */\nexport function getSizeForMipFromTexture(texture: GPUTexture, mipLevel: number): number[] {\n  return [\n    texture.width,\n    texture.height,\n    texture.depthOrArrayLayers,\n  ].map(v => Math.max(1, Math.floor(v / 2 ** mipLevel)));\n}\n\n/**\n * Uploads Data to a texture\n */\nfunction uploadDataToTexture(\n  device: GPUDevice,\n  texture: GPUTexture,\n  source: TextureRawDataSource,\n  options: { origin?: GPUOrigin3D },\n) {\n  const data = toTypedArray((source as TextureData).data || source, texture.format);\n  const mipLevel = 0;\n  const size = getSizeForMipFromTexture(texture, mipLevel);\n  const { bytesPerElement } = getTextureFormatInfo(texture.format);\n  const origin = options.origin || [0, 0, 0];\n  device.queue.writeTexture(\n    { texture, origin },\n    data,\n    { bytesPerRow: bytesPerElement * size[0], rowsPerImage: size[1] },\n    size,\n  );\n}\n/**\n * Copies a an array of \"sources\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nexport function copySourcesToTexture(\n    device: GPUDevice,\n    texture: GPUTexture,\n    sources: TextureSource[],\n    options: CopyTextureOptions = {},\n) {\n  let tempTexture: GPUTexture | undefined;\n  sources.forEach((source, layer) => {\n    const origin = [0, 0, layer + (options.baseArrayLayer || 0)];\n    if (isTextureRawDataSource(source)) {\n      uploadDataToTexture(device, texture, source as TextureRawDataSource, { origin });\n    } else {\n      const s = source as GPUCopyExternalImageSourceInfo['source'];\n      // work around limit that you can't call copyExternalImageToTexture for 3d texture.\n      // sse https://github.com/gpuweb/gpuweb/issues/4697 for if we can remove this\n      let dstTexture = texture;\n      let copyOrigin = origin;\n      if (texture.dimension === '3d') {\n        tempTexture = tempTexture ?? device.createTexture({\n          format: texture.format,\n          usage: texture.usage | GPUTextureUsage.COPY_SRC,\n          size: [texture.width, texture.height, 1],\n        });\n        dstTexture = tempTexture;\n        copyOrigin = [0, 0, 0];\n      }\n\n      const {flipY, premultipliedAlpha, colorSpace} = options;\n      device.queue.copyExternalImageToTexture(\n        { source: s, flipY, },\n        { texture: dstTexture, premultipliedAlpha, colorSpace, origin: copyOrigin },\n        getSizeFromSource(s, options),\n      );\n\n      if (tempTexture) {\n        const encoder = device.createCommandEncoder();\n        encoder.copyTextureToTexture(\n          { texture: tempTexture },\n          { texture, origin },\n          tempTexture,\n        );\n        device.queue.submit([encoder.finish()]);\n      }\n    }\n  });\n\n  if (tempTexture) {\n    tempTexture.destroy();\n  }\n\n  if (texture.mipLevelCount > 1) {\n    const viewDimension =  options.viewDimension ?? guessTextureBindingViewDimensionForTexture(\n      texture.dimension, texture.depthOrArrayLayers);\n    generateMipmap(device, texture, viewDimension);\n  }\n}\n\n\n/**\n * Copies a \"source\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nexport function copySourceToTexture(\n    device: GPUDevice,\n    texture: GPUTexture,\n    source: TextureSource,\n    options: CopyTextureOptions = {}) {\n  copySourcesToTexture(device, texture, [source], options);\n}\n\n/**\n * @property mips if true and mipLevelCount is not set then wll automatically generate\n *    the correct number of mip levels.\n * @property format Defaults to \"rgba8unorm\"\n * @property mipLeveLCount Defaults to 1 or the number of mips needed for a full mipmap if `mips` is true\n */\nexport type CreateTextureOptions = CopyTextureOptions & {\n  mips?: boolean,\n  usage?: GPUTextureUsageFlags,\n  format?: GPUTextureFormat,\n  mipLevelCount?: number,\n};\n\n/**\n * Gets the size from a source. This is to smooth out the fact that different\n * sources have a different way to get their size.\n */\nexport function getSizeFromSource(source: TextureSource, options: CreateTextureOptions): number[] {\n  if (source instanceof HTMLVideoElement) {\n    return [source.videoWidth, source.videoHeight, 1];\n  } else {\n    const maybeHasWidthAndHeight = source as { width: number, height: number };\n    const { width, height } = maybeHasWidthAndHeight;\n    if (width > 0 && height > 0 && !isTextureRawDataSource(source)) {\n      // this should cover Canvas, Image, ImageData, ImageBitmap, TextureCreationData\n      return [width, height, 1];\n    }\n    const format = options.format || 'rgba8unorm';\n    const { bytesPerElement, bytesPerChannel } = getTextureFormatInfo(format);\n    const data = isTypedArray(source) || Array.isArray(source)\n       ? source\n       : (source as TextureData).data;\n    const numBytes = isTypedArray(data)\n        ? (data as TypedArray).byteLength\n        : ((data as number[]).length * bytesPerChannel);\n    const numElements = numBytes / bytesPerElement;\n    return guessDimensions(width, height, numElements);\n  }\n}\n\n/**\n * Create a texture from an array of sources (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmap0,\n *        someCanvasOrVideoOrImageImageBitmap1,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n *\n * Note: If you are supporting compatibility mode you will need to pass in your\n * intended view dimension for cubemaps. Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmapPosX,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosY,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosZ,\n *        someCanvasOrVideoOrImageImageBitmapNegZ,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *       viewDimension: 'cube', // <=- Required for compatibility mode\n *     }\n * );\n * ```\n */\nexport function createTextureFromSources(\n    device: GPUDevice,\n    sources: TextureSource[],\n    options: CreateTextureOptions = {}): GPUTexture {\n  // NOTE: We assume all the sizes are the same. If they are not you'll get\n  // an error.\n  const size = getSizeFromSource(sources[0], options);\n  size[2] = size[2] > 1 ? size[2] : sources.length;\n\n  const viewDimension = options.viewDimension ?? guessTextureBindingViewDimensionForTexture(\n    options.dimension, size[2]);\n  const dimension = textureViewDimensionToDimension(viewDimension);\n\n  const texture = device.createTexture({\n    dimension,\n    textureBindingViewDimension: viewDimension,\n    format: options.format || 'rgba8unorm',\n    mipLevelCount: options.mipLevelCount\n        ? options.mipLevelCount\n        : options.mips ? numMipLevels(size) : 1,\n    size,\n    usage: (options.usage ?? 0) |\n           GPUTextureUsage.TEXTURE_BINDING |\n           GPUTextureUsage.COPY_DST |\n           GPUTextureUsage.RENDER_ATTACHMENT,\n  });\n\n  copySourcesToTexture(device, texture, sources, options);\n\n  return texture;\n}\n\n/**\n * Create a texture from a source (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     someCanvasOrVideoOrImageImageBitmap,\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n */\nexport function createTextureFromSource(\n    device: GPUDevice,\n    source: TextureSource,\n    options: CreateTextureOptions = {}): GPUTexture {\n  return createTextureFromSources(device, [source], options);\n}\n\nexport type CreateTextureFromBitmapOptions = CreateTextureOptions & ImageBitmapOptions;\n\n/**\n * Load an ImageBitmap\n * @param url\n * @param options\n * @returns the loaded ImageBitmap\n */\nexport async function loadImageBitmap(url: string, options: ImageBitmapOptions = {}): Promise<ImageBitmap> {\n  const res = await fetch(url);\n  const blob = await res.blob();\n  const opt: ImageBitmapOptions = {\n    ...options,\n    ...(options.colorSpaceConversion !== undefined && {colorSpaceConversion: 'none'}),\n  };\n  return await createImageBitmap(blob, opt);\n}\n\n/**\n * Load images and create a texture from them, optionally generating mip levels\n *\n * Assumes all the urls reference images of the same size.\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(\n *   device,\n *   [\n *     'https://someimage1.url',\n *     'https://someimage2.url',\n *   ],\n *   {\n *     mips: true,\n *     flipY: true,\n *   },\n * );\n * ```\n */\nexport async function createTextureFromImages(device: GPUDevice, urls: string[], options: CreateTextureFromBitmapOptions = {}): Promise<GPUTexture> {\n  // TODO: start once we've loaded one?\n  // We need at least 1 to know the size of the texture to create\n  const imgBitmaps = await Promise.all(urls.map(url => loadImageBitmap(url)));\n  return createTextureFromSources(device, imgBitmaps, options);\n}\n\n/**\n * Load an image and create a texture from it, optionally generating mip levels\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(device, 'https://someimage.url', {\n *   mips: true,\n *   flipY: true,\n * });\n * ```\n */\nexport async function createTextureFromImage(device: GPUDevice, url: string, options: CreateTextureFromBitmapOptions = {}): Promise<GPUTexture> {\n  return createTextureFromImages(device, [url], options);\n}\n","/*\n * Copyright 2023 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport { isTypedArray, TypedArray, TypedArrayConstructor } from './typed-arrays.js';\nimport { Arrays, getNumComponents, makeTypedArrayFromArrayUnion } from './attribute-utils.js';\n\n/**\n * A class to provide `push` on a typed array.\n *\n * example:\n *\n * ```js\n * const positions = new TypedArrayWrapper(new Float32Array(300), 3);\n * positions.push(1, 2, 3); // add a position\n * positions.push([4, 5, 6]);  // add a position\n * positions.push(new Float32Array(6)); // add 2 positions\n * const data = positions.typedArray;\n * ```\n */\nexport class TypedArrayWrapper<T extends TypedArray> {\n  typedArray: T;\n  cursor = 0;\n  numComponents: number;\n\n  constructor(arr: T, numComponents: number) {\n    this.typedArray = arr;\n    this.numComponents = numComponents;\n  }\n  get numElements(): number {\n    return this.typedArray.length / this.numComponents;\n  }\n  push(...data: (number | Iterable<number>)[]) {\n    for (const value of data) {\n      if (Array.isArray(value) || isTypedArray(value)) {\n        const asArray = data as number[];\n        this.typedArray.set(asArray, this.cursor);\n        this.cursor += asArray.length;\n      } else {\n        this.typedArray[this.cursor++] = value as number;\n      }\n    }\n  }\n  reset(index = 0) {\n    this.cursor = index;\n  }\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2, Float32Array);\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param numComponents number of components\n * @param numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param Type A constructor for the type. Default = `Float32Array`.\n */\nfunction createAugmentedTypedArray<T extends TypedArrayConstructor>(numComponents: number, numElements: number, Type: T) {\n  return new TypedArrayWrapper(new Type(numComponents * numElements) as InstanceType<T>, numComponents);\n}\n\n// I couldn't figure out how to make this because TypedArrayWrapper wants a type\n// but this is explicity kind of type-less.\nfunction createAugmentedTypedArrayFromExisting(numComponents: number, numElements: number, existingArray: TypedArray) {\n  const Ctor = existingArray.constructor as Float32ArrayConstructor;\n  const array: Float32Array = new Ctor(numComponents * numElements) as unknown as Float32Array;\n  return new TypedArrayWrapper(array, numComponents);\n}\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param params\n * @param params.size the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param params.xOffset the amount to offset the quad in X. Default = 0\n * @param params.yOffset the amount to offset the quad in Y. Default = 0\n * @return the created XY Quad vertices\n */\nexport function createXYQuadVertices({\n    size: inSize = 2, xOffset = 0, yOffset = 0\n  } = {}): Arrays {\n  const size = inSize * 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  } as Arrays;\n}\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param params\n * @param params.width Width of the plane. Default = 1\n * @param params.depth Depth of the plane. Default = 1\n * @param params.subdivisionsWidth Number of steps across the plane. Default = 1\n * @param params.subdivisionsDepth Number of steps down the plane. Default = 1\n * @return The created plane vertices.\n */\nexport function createPlaneVertices({\n    width = 1,\n    depth = 1,\n    subdivisionsWidth = 1,\n    subdivisionsDepth = 1,\n} = {}): Arrays {\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param params\n * @param params.radius radius of the sphere. Default = 1\n * @param params.subdivisionsAxis number of steps around the sphere. Default = 24\n * @param params.subdivisionsHeight number of vertically on the sphere. Default = 12\n * @param params.startLatitudeInRadians where to start the\n *     top of the sphere. Default = 0\n * @param params.endLatitudeInRadians Where to end the\n *     bottom of the sphere. Default = Ï€\n * @param params.startLongitudeInRadians where to start\n *     wrapping the sphere. Default = 0\n * @param params.endLongitudeInRadians where to end\n *     wrapping the sphere. Default = 2Ï€\n * @return The created sphere vertices.\n */\nexport function createSphereVertices({\n    radius = 1,\n    subdivisionsAxis = 24,\n    subdivisionsHeight = 12,\n    startLatitudeInRadians = 0,\n    endLatitudeInRadians = Math.PI,\n    startLongitudeInRadians = 0,\n    endLongitudeInRadians = Math.PI * 2,\n} = {}): Arrays {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  const latRange = endLatitudeInRadians - startLatitudeInRadians;\n  const longRange = endLongitudeInRadians - startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + startLongitudeInRadians;\n      const phi = latRange * v + startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param params\n * @param params.size width, height and depth of the cube. Default = 1\n * @return The created vertices.\n */\nexport function createCubeVertices({size = 1} = {}): Arrays {\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2 , numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(...position);\n      normals.push(...normal);\n      texcoords.push(...uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param params\n * @param params.bottomRadius Bottom radius of truncated cone. Default = 1\n * @param params.topRadius Top radius of truncated cone. Default = 0\n * @param params.height Height of truncated cone. Default = 1\n * @param params.radialSubdivisions The number of subdivisions around the\n *     truncated cone. Default = 24\n * @param params.verticalSubdivisions The number of subdivisions down the\n *     truncated cone. Default = 1\n * @param params.topCap Create top cap. Default = true.\n * @param params.bottomCap Create bottom cap. Default = true.\n * @return The created cone vertices.\n */\nexport function createTruncatedConeVertices({\n    bottomRadius = 1,\n    topRadius = 0,\n    height = 1,\n    radialSubdivisions = 24,\n    verticalSubdivisions = 1,\n    topCap = true,\n    bottomCap = true,\n} = {}): Arrays {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Expands RLE data\n * @param rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param padding value to add each entry with.\n * @return the expanded rleData\n */\nfunction expandRLEData(rleData: number[], padding: number[] = []) {\n  padding = padding || [];\n  const data: number[] = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push(...padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push(...element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return The created vertices.\n */\nexport function create3DFVertices(): Arrays {\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts, Float32Array),\n    texcoord: createAugmentedTypedArray(2,  numVerts, Float32Array),\n    normal: createAugmentedTypedArray(3, numVerts, Float32Array),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return Object.fromEntries(Object.entries(arrays).map(([k, v]) => [k, v.typedArray]));\n}\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param params\n  * @param params.radius Radius of cylinder. Default = 1\n  * @param params.height Height of cylinder. Default = 1\n  * @param params.radialSubdivisions The number of subdivisions around the cylinder. Default = 24\n  * @param params.verticalSubdivisions The number of subdivisions down the cylinder. Default = 1\n  * @param params.topCap Create top cap. Default = true.\n  * @param params.bottomCap Create bottom cap. Default = true.\n  * @return The created vertices.\n  */\nexport function createCylinderVertices({\n    radius = 1,\n    height = 1,\n    radialSubdivisions = 24,\n    verticalSubdivisions = 1,\n    topCap = true,\n    bottomCap = true,\n} = {}): Arrays {\n  return createTruncatedConeVertices({\n      bottomRadius: radius,\n      topRadius: radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap,\n  });\n}\n\n/**\n * Creates vertices for a torus\n *\n * @param params\n * @param params.radius radius of center of torus circle. Default = 1\n * @param params.thickness radius of torus ring. Default = 0.24\n * @param params.radialSubdivisions The number of subdivisions around the torus. Default = 24\n * @param params.bodySubdivisions The number of subdivisions around the body torus. Default = 12\n * @param params.startAngle start angle in radians. Default = 0.\n * @param params.endAngle end angle in radians. Default = Math.PI * 2.\n * @return The created vertices.\n */\nexport function createTorusVertices({\n    radius = 1,\n    thickness = 0.24,\n    radialSubdivisions = 24,\n    bodySubdivisions = 12,\n    startAngle = 0,\n    endAngle = Math.PI * 2,\n} = {}): Arrays {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals     = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords   = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal:   normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices:  indices.typedArray,\n  };\n}\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param params\n * @param params.radius Radius of the ground plane. Default = 1\n * @param params.divisions Number of triangles in the ground plane (at least 3). Default = 24\n * @param params.stacks Number of radial divisions. Default = 1\n * @param params.innerRadius Default = 0\n * @param params.stackPower Power to raise stack size to for decreasing width. Default = 1\n * @return The created vertices.\n */\nexport function createDiscVertices({\n    radius = 1,\n    divisions = 24,\n    stacks = 1,\n    innerRadius = 0,\n    stackPower = 1,\n} = {}): Arrays {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\nfunction allButIndices(name: string) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the vertices by index.\n */\nexport function deindex(arrays: Arrays): Arrays {\n  const indicesP = arrays.indices;\n  const newVertices: Arrays = {};\n  const indices = makeTypedArrayFromArrayUnion(indicesP, 'indices');\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel: string) {\n    const srcBuffer = makeTypedArrayFromArrayUnion(arrays[channel], channel);\n    const numComponents = getNumComponents(srcBuffer, channel);\n    const dstBuffer = createAugmentedTypedArrayFromExisting(numComponents, numElements, srcBuffer);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer.typedArray;\n  }\n\n  Object.keys(arrays).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n// I don't want to pull in a whole math library\nconst normalize = ([x, y, z]: Float32Array) => {\n  const len = x * x + y * y + z * z;\n  return new Float32Array([x / len, y / len, z / len]);\n};\n\nconst subtract = (a: Float32Array, b: Float32Array) => {\n  const r = new Float32Array(a.length);\n  for (let i = 0; i < a.length; ++i) {\n    r[i] = a[i] - b[i];\n  }\n  return r;\n};\n\nconst cross = (a: Float32Array, b: Float32Array) => {\n  const r = new Float32Array(a.length);\n\n  r[0] = a[1] * b[2] - a[2] * b[1];\n  r[1] = a[2] * b[0] - a[0] * b[2];\n  r[2] = a[0] * b[1] - a[1] * b[0];\n\n  return r;\n};\n\n/**\n * Generate triangle normals from positions.\n * Assumes every 3 values is a position and every 3 positions come from the same triangle\n */\nexport function generateTriangleNormals(positions: Float32Array): Float32Array {\n  const normals = new Float32Array(positions.length);\n  for (let ii = 0; ii < positions.length; ii += 9) {\n    // pull out the 3 positions for this triangle\n    const p0 = positions.subarray(ii    , ii + 3);\n    const p1 = positions.subarray(ii + 3, ii + 6);\n    const p2 = positions.subarray(ii + 6, ii + 9);\n\n    const n0 = normalize(subtract(p0, p1));\n    const n1 = normalize(subtract(p0, p2));\n    const n = cross(n0, n1);\n\n    // copy them back in\n    normals.set(n, ii);\n    normals.set(n, ii + 3);\n    normals.set(n, ii + 6);\n  }\n\n  return normals;\n}\n\n"],"names":["roundUpToMultipleOf","v","multiple","TypedArrayViewGenerator","arrayBuffer","byteOffset","constructor","sizeInBytes","this","ArrayBuffer","align","alignment","pad","numBytes","getView","Ctor","numElements","view","byteLength","subarray","arr","offset","length","isTypedArray","buffer","b","i32","size","type","View","Int32Array","u32","Uint32Array","f32","Float32Array","f16","Uint16Array","vec2f","vec2i","vec2u","vec2h","vec3i","vec3u","vec3f","vec3h","vec4i","vec4u","vec4f","vec4h","mat2x2f","mat2x2h","mat3x2f","mat3x2h","mat4x2f","mat4x2h","mat2x3f","mat2x3h","mat3x3f","mat3x3h","mat4x3f","mat4x3h","mat2x4f","mat2x4h","mat3x4f","mat3x4h","mat4x4f","mat4x4h","bool","kWGSLTypeInfo","kWGSLTypes","obj","Object","keys","setIntrinsicsToView","types","flatten","visited","Set","info","has","add","includes","makeIntrinsicTypedArrayView","typeDef","baseOffset","intrinsicSize","isArray","undefined","baseNumElements","BYTES_PER_ELEMENT","Error","isIntrinsic","fields","elementType","makeTypedArrayViews","asArrayDef","asStructDef","asIntrinsicDef","getSizeOfTypeDef","makeViews","getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef","effectiveNumElements","fn","i","Array","fill","map","_","views","name","entries","setStructuredView","data","dataLen","stride","set","asArray","forEach","newValue","ndx","asViews","key","makeStructuredView","varDef","asVarDef","group","typeDefinition","s_views","WeakMap","viewsByCtor","get","Map","getViewsByCtor","setIntrinsicFromArrayLikeOfNumber","index","setTypedValues","isArrayLikeOfNumber","fieldDef","setStructuredValues","getAlignmentOfTypeDef","values","reduce","max","Math","unalignedSize","lastField","pop","getSizeAndAlignmentOfUnsizedArrayElement","e","t","attributes","isStruct","isTemplate","n","members","format","count","super","startLine","endLine","inUse","s","r","access","a","o","u","l","Uniform","Storage","Texture","Sampler","StorageTexture","c","binding","resourceType","h","f","locationType","location","interpolation","p","m","id","d","stage","inputs","outputs","arguments","returnType","resources","overrides","calls","vertex","fragment","compute","x","constants","aliases","structs","g","_id","line","isAstNode","astNodeType","constEvaluate","constEvaluateString","toString","search","searchBlock","y","instance","w","k","args","body","I","expression","T","condition","S","E","init","increment","A","storage","value","$","V","N","decrement","parse","L","operator","variable","assign","addAssign","subtractAssin","multiplyAssign","divideAssign","moduloAssign","andAssign","orAssign","xorAssign","shiftLeftAssign","shiftRightAssign","O","D","C","continuing","M","cases","F","elseif","else","U","q","B","extensions","z","severity","rule","R","G","W","loopId","P","X","maxFormatType","_priority","x32","Z","getMemberIndex","j","vec2b","vec3b","vec4b","Q","Y","K","H","postfix","J","ee","evalExpression","context","te","cachedReturnValue","setCachedReturnValue","isBuiltin","builtinFunctionNames","ne","se","initializer","getDataValue","re","isScalar","be","isVector","Ie","Te","scalarValue","console","error","vectorValue","ae","oe","contents","ue","le","ce","right","he","left","_getPromotedType","fe","pe","me","selectors","de","_e","ve","xe","ge","ye","typeInfo","setDataValue","we","void","floor","ke","getTypeInfo","from","push","endsWith","slice","Se","textureSize","log","getTypeName","setData","Uint8Array","toLocaleLowerCase","token","keyword","reserved","Ee","Ae","none","eof","asm","bf16","do","enum","f64","handle","i8","i16","i64","mat","premerge","regardless","typedef","u8","u16","u64","unless","using","vec","keywords","array","atomic","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","ptr","sampler","sampler_comparison","struct","texture_1d","texture_2d","texture_2d_array","texture_3d","texture_cube","texture_cube_array","texture_multisampled_2d","texture_storage_1d","texture_storage_2d","texture_storage_2d_array","texture_storage_3d","texture_depth_2d","texture_depth_2d_array","texture_depth_cube","texture_depth_cube_array","texture_depth_multisampled_2d","texture_external","vec2","vec3","vec4","bitcast","block","break","case","continue","default","diagnostic","discard","enable","fallthrough","false","for","function","if","let","const","loop","while","private","read","read_write","return","requires","switch","true","alias","uniform","var","override","workgroup","write","r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8unorm_srgb","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","bgra8unorm_srgb","rgb10a2unorm","rg11b10float","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","static_assert","tokens","decimal_float_literal","hex_float_literal","int_literal","uint_literal","ident","and","and_and","arrow","attr","forward_slash","bang","bracket_left","bracket_right","brace_left","brace_right","colon","comma","equal","equal_equal","not_equal","greater_than","greater_than_equal","shift_right","less_than","less_than_equal","shift_left","modulo","minus","minus_minus","period","plus","plus_plus","or","or_or","paren_left","paren_right","semicolon","star","tilde","underscore","xor","plus_equal","minus_equal","times_equal","division_equal","modulo_equal","and_equal","or_equal","xor_equal","shift_right_equal","shift_left_equal","simpleTokens","literalTokens","regexTokens","storage_class","access_mode","sampler_type","sampled_texture_type","multisampled_texture_type","storage_texture_type","depth_texture_type","texture_external_type","any_texture_type","texel_format","const_literal","literal_or_ident","element_count_expression","template_types","attribute_name","assignment_operators","increment_operators","$e","lexeme","isTemplateType","indexOf","isArrayType","isArrayOrTemplateType","Ve","_tokens","_start","_current","_line","_source","scanTokens","_isAtEnd","scanToken","_advance","_isWhitespace","_peekAhead","_addToken","_isAlpha","_isAlphaNumeric","_findType","_match","exec","substring","Ne","node","Le","Oe","uniforms","textures","samplers","entry","functions","_types","_functions","_isStorageTexture","updateAST","_getAliasInfo","_getAttributeNum","_isUniformVar","_isStorageVar","_isTextureVar","_isSamplerVar","_getAttribute","_findResources","_getInputs","_getOutputs","_addCalls","_markStructsInUse","getStructInfo","getOverrideInfo","_getAlias","findResource","_findResource","_markStructsFromAST","getBindGroups","_getStructOutputs","_getOutputInfo","_parseInt","_getStructInputs","_getInputInfo","_parseString","parseInt","isNaN","_updateTypeInfo","_getTypeSize","_updateStructInfo","_roundUp","_typeInfo","_textureTypes","_samplerTypes","ceil","De","clone","Ce","Me","parent","variables","currentFunctionName","getVariable","getFunction","createVariable","setVariable","getVariableValue","Fe","getVariableName","Ue","All","Any","some","Select","ArrayLength","Abs","abs","Acos","acos","Acosh","acosh","Asin","asin","Asinh","asinh","Atan","atan","Atanh","atanh","Atan2","atan2","Ceil","_clamp","min","Clamp","Cos","cos","Cosh","cosh","CountLeadingZeros","clz32","_countOneBits","CountOneBits","_countTrailingZeros","CountTrailingZeros","Cross","Degrees","PI","Determinant","Distance","sqrt","_dot","Dot","Dot4U8Packed","Dot4I8Packed","Exp","exp","Exp2","pow","ExtractBits","FaceForward","_firstLeadingBit","FirstLeadingBit","_firstTrailingBit","log2","FirstTrailingBit","Floor","Fma","Fract","Frexp","InsertBits","InverseSqrt","Ldexp","Length","Log","Log2","Max","Min","Mix","Modf","Normalize","Pow","QuantizeToF16","Radians","Reflect","Refract","ReverseBits","Round","round","Saturate","Sign","sign","Sin","sin","Sinh","sinh","_smoothstep","SmoothStep","Sqrt","Step","Tan","tan","Tanh","tanh","_getTransposeType","Transpose","Trunc","trunc","Dpdx","DpdxCoarse","DpdxFine","Dpdy","DpdyCoarse","DpdyFine","Fwidth","FwidthCoarse","FwidthFine","TextureDimensions","TextureGather","TextureGatherCompare","TextureLoad","TextureNumLayers","TextureNumLevels","TextureNumSamples","TextureSample","TextureSampleBias","TextureSampleCompare","TextureSampleCompareLevel","TextureSampleGrad","TextureSampleLevel","TextureSampleBaseClampToEdge","TextureStore","AtomicLoad","AtomicStore","AtomicAdd","AtomicSub","AtomicMax","AtomicMin","AtomicAnd","AtomicOr","AtomicXor","AtomicExchange","AtomicCompareExchangeWeak","Pack4x8snorm","Pack4x8unorm","Pack4xI8","Pack4xU8","Pack4x8Clamp","Pack4xU8Clamp","Pack2x16snorm","Pack2x16unorm","Pack2x16float","Unpack4x8snorm","Unpack4x8unorm","Unpack4xI8","Unpack4xU8","Unpack2x16snorm","Unpack2x16unorm","Unpack2x16float","StorageBarrier","TextureBarrier","WorkgroupBarrier","WorkgroupUniformLoad","SubgroupAdd","SubgroupExclusiveAdd","SubgroupInclusiveAdd","SubgroupAll","SubgroupAnd","SubgroupAny","SubgroupBallot","SubgroupBroadcast","SubgroupBroadcastFirst","SubgroupElect","SubgroupMax","SubgroupMin","SubgroupMul","SubgroupExclusiveMul","SubgroupInclusiveMul","SubgroupOr","SubgroupShuffle","SubgroupShuffleDown","SubgroupShuffleUp","SubgroupShuffleXor","SubgroupXor","QuadBroadcast","QuadSwapDiagonal","QuadSwapX","QuadSwapY","qe","Be","ze","Re","Ge","We","Pe","Xe","Ze","je","Qe","Ye","ast","reflection","builtins","execute","_setOverrides","_execStatements","dispatchWorkgroups","texture","_dispatchWorkgroup","execStatement","_breakObj","_continueObj","_let","_var","_const","_function","_if","_switch","_for","_while","_loop","_assign","_increment","_call","_evalBinaryOp","_evalLiteral","_evalVariable","_evalCall","_evalCreate","_evalConst","_evalBitcast","_evalUnaryOp","_dispatchExec","_callBuiltinFunction","_getScalarValue","_callConstructorValue","_callConstructorVec","_callConstructorMatrix","_maxFormatTypeInfo","Ke","_currentLine","_deferArrayCountEval","_currentLoop","_context","_exec","_initialize","_global_decl_or_directive","arrayType","countNode","_updateNode","_error","message","_peek","_check","_consume","_previous","_type_alias","_diagnostic","_requires_directive","_enable_directive","_attribute","_global_variable_decl","_override_variable_decl","_global_let_decl","_global_const_decl","_struct_decl","_function_decl","_type_decl","_compound_statement","_statement","_if_statement","_switch_statement","_loop_statement","_for_statement","_while_statement","_continuing_statement","_static_assert_statement","_return_statement","_variable_statement","_optional_paren_expression","_increment_decrement_statement","_func_call_statement","_assignment_statement","_for_init","_short_circuit_or_expression","_for_increment","_variable_decl","_unary_expression","_argument_expression_list","_switch_body","_case_selectors","_case_body","_shift_expression","_match_elseif","_elseif_statement","_short_circuit_and_expr","_inclusive_or_expression","_exclusive_or_expression","_and_expression","_equality_expression","_relational_expression","_additive_expression","_multiplicative_expression","_singular_expression","_primary_expression","_postfix_expression","_getStruct","_getType","_validateTypeRange","parseFloat","_paren_expression","_const_expression","_override_decl","_texture_sampler_types","He","update","getStageResources","defs","stageFlags","entryPoint","entryPointName","ep","entryPoints","filter","getEntryPointForStage","byBinding","makeBindGroupLayoutDescriptors","desc","GPUShaderStage","VERTEX","FRAGMENT","COMPUTE","bindGroupLayoutDescriptorsByGroupByBinding","resource","bindingsToBindGroupEntry","visibility","descriptors","sort","getNamedVariables","reflect","fromEntries","ResourceType","addType","addVariableType","makeStructDefinition","structInfo","getTextureSampleType","getViewDimension","getStorageTextureAccess","getSamplerType","getBindGroupLayoutEntry","minBindingSize","externalTexture","multisampled","sampleType","viewDimension","storageTexture","addEntryPoints","funcInfos","makeShaderDataDefinitions","code","WgslReflect","storages","storageTextures","externalTextures","assert","cond","msg","arrayInfo","asTemplateInfo","guessTextureBindingViewDimensionForTexture","dimension","depthOrArrayLayers","normalizeGPUExtent3D","width","height","normalizeGPUExtent3Dict","numMipLevels","sizes","maxSize","byDevice","generateMipmap","device","textureBindingViewDimension","perDeviceInfo","pipelineByFormatAndViewDimension","moduleByViewDimension","module","features","createShaderModule","label","createSampler","minFilter","magFilter","replace","createRenderPipeline","layout","targets","pipeline","encoder","createCommandEncoder","baseMipLevel","mipLevelCount","baseArrayLayer","bindGroup","createBindGroup","getBindGroupLayout","createView","renderPassDescriptor","colorAttachments","arrayLayerCount","loadOp","storeOp","pass","beginRenderPass","setPipeline","setBindGroup","draw","end","commandBuffer","finish","queue","submit","kTypedArrayToAttribFormat","Int8Array","formats","defaultForType","Int16Array","kVertexFormatPrefixToType","Type","s1","s2","flat","isIndices","makeTypedArrayFromArrayUnion","asFullSpec","kNameToNumComponents","numComponents","guessNumComponentsFromName","test","guessNumComponentsFromNameImpl","getNumComponents","arrayName","getArray","kVertexFormatRE","numComponentsAndTypeFromVertexFormat","prefix","createTypedArrayOfSameType","typedArray","getPrototypeOf","createBufferLayoutsFromArrays","arrays","options","interleave","stepMode","shaderLocations","shaderLocation","currentOffset","bufferLayouts","typedArrays","totalNumComponents","step","component","normalize","shift","arrayStride","getTypedArrayWithOffsetAndStride","ta","interleaveVertexData","attribute","srcOffset","newView","dstOffset","srcOff","createBuffersAndAttributesFromArrays","usage","buffers","bufferNdx","attribs","attrib0","data0","createBuffer","GPUBufferUsage","mappedAtCreation","getMappedRange","unmap","buffersAndAttributes","indicesEntry","find","indices","indexBuffer","INDEX","indexFormat","setVertexAndIndexBuffers","passEncoder","firstVertexBufferIndex","setVertexBuffer","setIndexBuffer","drawArrays","drawIndexed","isTextureRawDataSource","source","src","isTextureData","kFormatToTypedArray","kTextureFormatRE","getTextureFormatInfo","channels","bits","typeName","numChannels","bytesPerChannel","bytesPerElement","getSizeForMipFromTexture","mipLevel","uploadDataToTexture","toTypedArray","origin","writeTexture","bytesPerRow","rowsPerImage","copySourcesToTexture","sources","tempTexture","layer","dstTexture","copyOrigin","createTexture","GPUTextureUsage","COPY_SRC","flipY","premultipliedAlpha","colorSpace","copyExternalImageToTexture","getSizeFromSource","copyTextureToTexture","destroy","copySourceToTexture","HTMLVideoElement","videoWidth","videoHeight","maybeHasWidthAndHeight","depth","guessDimensions","createTextureFromSources","textureViewDimensionToDimension","mips","TEXTURE_BINDING","COPY_DST","RENDER_ATTACHMENT","createTextureFromSource","async","loadImageBitmap","url","res","fetch","blob","opt","colorSpaceConversion","createImageBitmap","createTextureFromImages","urls","Promise","all","createTextureFromImage","TypedArrayWrapper","cursor","reset","createAugmentedTypedArray","CUBE_FACE_INDICES","createTruncatedConeVertices","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","topCap","bottomCap","extra","numVertices","positions","normals","texcoords","vertsAroundEdge","slant","cosSlant","sinSlant","yy","ringRadius","ii","position","normal","texcoord","expandRLEData","rleData","padding","runLength","element","jj","allButIndices","len","subtract","cross","colors","numVerts","color","cornerVertices","faceNormals","uvCoords","faceIndices","uv","radius","divisions","stacks","innerRadius","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","theta","subdivisionsWidth","subdivisionsDepth","numVertsAcross","subdivisionsAxis","subdivisionsHeight","startLatitudeInRadians","endLatitudeInRadians","startLongitudeInRadians","endLongitudeInRadians","latRange","longRange","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","thickness","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ny","ring","ringAngle","xSin","zCos","nx","nz","nextRingIndex","nextSliceIndex","inSize","xOffset","yOffset","indicesP","newVertices","channel","srcBuffer","dstBuffer","existingArray","createAugmentedTypedArrayFromExisting","p0","p1","p2","n0","n1"],"mappings":"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AQtD,EAAExH,KAAKiF,MAAM,QAAQuC,EAAExH,KAAKiF,MAAM,QAAQuC,EAAExH,KAAKiF,MAAM,SAASuC,EAAExH,KAAKiF,MAAM,QAAQuC,EAAExH,KAAKiF,MAAM,SAASuC,EAAExH,KAAKiF,MAAM,SAASuC,EAAExH,KAAKiF,MAAM,SAASuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,UAAUuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,WAAWuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC,EAAExH,KAAKiF,MAAM,YAAYuC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","x_google_ignoreList":[4]}