import { TypedArrayConstructor } from './typed-arrays.js';
export type TypeDef = {
    numElements: number;
    align: number;
    size: number;
    type: string;
    View: TypedArrayConstructor;
    flatten?: boolean;
    pad?: readonly number[];
};
export declare const kWGSLTypeInfo: {
    readonly 'atomic<i32>': TypeDef;
    readonly 'atomic<u32>': TypeDef;
    readonly 'vec2<i32>': TypeDef;
    readonly 'vec2<u32>': TypeDef;
    readonly 'vec2<f32>': TypeDef;
    readonly 'vec2<f16>': TypeDef;
    readonly 'vec3<i32>': TypeDef;
    readonly 'vec3<u32>': TypeDef;
    readonly 'vec3<f32>': TypeDef;
    readonly 'vec3<f16>': TypeDef;
    readonly 'vec4<i32>': TypeDef;
    readonly 'vec4<u32>': TypeDef;
    readonly 'vec4<f32>': TypeDef;
    readonly 'vec4<f16>': TypeDef;
    readonly 'mat2x2<f32>': TypeDef;
    readonly 'mat2x2<f16>': TypeDef;
    readonly 'mat3x2<f32>': TypeDef;
    readonly 'mat3x2<f16>': TypeDef;
    readonly 'mat4x2<f32>': TypeDef;
    readonly 'mat4x2<f16>': TypeDef;
    readonly 'mat2x3<f32>': TypeDef;
    readonly 'mat2x3<f16>': TypeDef;
    readonly 'mat3x3<f32>': TypeDef;
    readonly 'mat3x3<f16>': TypeDef;
    readonly 'mat4x3<f32>': TypeDef;
    readonly 'mat4x3<f16>': TypeDef;
    readonly 'mat2x4<f32>': TypeDef;
    readonly 'mat2x4<f16>': TypeDef;
    readonly 'mat3x4<f32>': TypeDef;
    readonly 'mat3x4<f16>': TypeDef;
    readonly 'mat4x4<f32>': TypeDef;
    readonly 'mat4x4<f16>': TypeDef;
    readonly i32: TypeDef;
    readonly u32: TypeDef;
    readonly f32: TypeDef;
    readonly f16: TypeDef;
    readonly vec2f: TypeDef;
    readonly vec2i: TypeDef;
    readonly vec2u: TypeDef;
    readonly vec2h: TypeDef;
    readonly vec3i: TypeDef;
    readonly vec3u: TypeDef;
    readonly vec3f: TypeDef;
    readonly vec3h: TypeDef;
    readonly vec4i: TypeDef;
    readonly vec4u: TypeDef;
    readonly vec4f: TypeDef;
    readonly vec4h: TypeDef;
    readonly mat2x2f: TypeDef;
    readonly mat2x2h: TypeDef;
    readonly mat3x2f: TypeDef;
    readonly mat3x2h: TypeDef;
    readonly mat4x2f: TypeDef;
    readonly mat4x2h: TypeDef;
    readonly mat2x3f: TypeDef;
    readonly mat2x3h: TypeDef;
    readonly mat3x3f: TypeDef;
    readonly mat3x3h: TypeDef;
    readonly mat4x3f: TypeDef;
    readonly mat4x3h: TypeDef;
    readonly mat2x4f: TypeDef;
    readonly mat2x4h: TypeDef;
    readonly mat3x4f: TypeDef;
    readonly mat3x4h: TypeDef;
    readonly mat4x4f: TypeDef;
    readonly mat4x4h: TypeDef;
    readonly bool: TypeDef;
};
export type WGSLType = keyof typeof kWGSLTypeInfo;
export declare const kWGSLTypes: readonly WGSLType[];
