{"version":3,"file":"webgpu-utils.min.js","sources":["../../../src/utils.ts","../../../src/typed-arrays.ts","../../../src/wgsl-types.ts","../../../src/buffer-views.ts","../../node_modules/wgsl_reflect/wgsl_reflect.module.js","../../../src/data-definitions.ts","../../../src/generate-mipmap.ts","../../../src/attribute-utils.ts","../../../src/texture-utils.ts","../../../src/primitives.ts"],"sourcesContent":["export const roundUpToMultipleOf = (v: number, multiple: number) => (((v + multiple - 1) / multiple) | 0) * multiple;\n\nexport function keysOf<T extends string>(obj: { [k in T]: unknown }): readonly T[] {\n  return (Object.keys(obj) as unknown[]) as T[];\n}\n\nexport function range<T>(count: number, fn: (i: number) => T) {\n    return new Array(count).fill(0).map((_, i) => fn(i));\n}\n","import {\n    roundUpToMultipleOf,\n} from './utils.js';\n\nexport type TypedArrayConstructor =\n    | Int8ArrayConstructor\n    | Uint8ArrayConstructor\n    | Uint8ClampedArrayConstructor\n    | Int16ArrayConstructor\n    | Uint16ArrayConstructor\n    | Int32ArrayConstructor\n    | Uint32ArrayConstructor\n    | Float32ArrayConstructor\n    | Float64ArrayConstructor;\n\nexport type TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Uint8ClampedArray\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Float32Array\n    | Float64Array;\n\nexport class TypedArrayViewGenerator {\n    arrayBuffer: ArrayBuffer;\n    byteOffset: number;\n\n    constructor(sizeInBytes: number) {\n        this.arrayBuffer = new ArrayBuffer(sizeInBytes);\n        this.byteOffset = 0;\n    }\n    align(alignment: number) {\n        this.byteOffset = roundUpToMultipleOf(this.byteOffset, alignment);\n    }\n    pad(numBytes: number) {\n        this.byteOffset += numBytes;\n    }\n    getView<T extends TypedArray>(Ctor: TypedArrayConstructor, numElements: number): T {\n        const view = new Ctor(this.arrayBuffer, this.byteOffset, numElements);\n        this.byteOffset += view.byteLength;\n        return view as T;\n    }\n}\n\nexport function subarray<T extends TypedArray>(arr: TypedArray, offset: number, length: number): T {\n  return arr.subarray(offset, offset + length) as T;\n}\n\n// TODO: fix better?\nexport const isTypedArray = (arr: any) =>\n  arr && typeof arr.length === 'number' && arr.buffer instanceof ArrayBuffer && typeof arr.byteLength === 'number';\n","import {\n    keysOf,\n} from './utils.js';\nimport {\n    TypedArrayConstructor,\n} from './typed-arrays.js';\n\nexport type TypeDef = {\n    numElements: number;\n    align: number;\n    size: number;\n    type: string;\n    View: TypedArrayConstructor;\n    flatten?: boolean,\n    pad?: readonly number[];\n};\n\nconst createTypeDefs = <T extends Record<string, TypeDef>>(defs: T): { readonly [K in keyof T]: TypeDef } => defs;\n\nconst b = createTypeDefs({\n  i32: { numElements: 1, align: 4, size: 4, type: 'i32', View: Int32Array },\n  u32: { numElements: 1, align: 4, size: 4, type: 'u32', View: Uint32Array },\n  f32: { numElements: 1, align: 4, size: 4, type: 'f32', View: Float32Array },\n  f16: { numElements: 1, align: 2, size: 2, type: 'u16', View: Uint16Array },\n\n  vec2f: { numElements: 2, align:  8, size:  8, type: 'f32', View: Float32Array },\n  vec2i: { numElements: 2, align:  8, size:  8, type: 'i32', View: Int32Array },\n  vec2u: { numElements: 2, align:  8, size:  8, type: 'u32', View: Uint32Array },\n  vec2h: { numElements: 2, align:  4, size:  4, type: 'u16', View: Uint16Array },\n  vec3i: { numElements: 3, align: 16, size: 12, type: 'i32', View: Int32Array },\n  vec3u: { numElements: 3, align: 16, size: 12, type: 'u32', View: Uint32Array },\n  vec3f: { numElements: 3, align: 16, size: 12, type: 'f32', View: Float32Array },\n  vec3h: { numElements: 3, align:  8, size:  6, type: 'u16', View: Uint16Array },\n  vec4i: { numElements: 4, align: 16, size: 16, type: 'i32', View: Int32Array },\n  vec4u: { numElements: 4, align: 16, size: 16, type: 'u32', View: Uint32Array },\n  vec4f: { numElements: 4, align: 16, size: 16, type: 'f32', View: Float32Array },\n  vec4h: { numElements: 4, align:  8, size:  8, type: 'u16', View: Uint16Array },\n\n  // AlignOf(vecR)\tSizeOf(array<vecR, C>)\n  mat2x2f: { numElements:  4, align:  8, size: 16,              type: 'f32', View: Float32Array },\n  mat2x2h: { numElements:  4, align:  4, size:  8,              type: 'u16', View: Uint16Array },\n  mat3x2f: { numElements:  6, align:  8, size: 24,              type: 'f32', View: Float32Array },\n  mat3x2h: { numElements:  6, align:  4, size: 12,              type: 'u16', View: Uint16Array },\n  mat4x2f: { numElements:  8, align:  8, size: 32,              type: 'f32', View: Float32Array },\n  mat4x2h: { numElements:  8, align:  4, size: 16,              type: 'u16', View: Uint16Array },\n  mat2x3f: { numElements:  8, align: 16, size: 32, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat2x3h: { numElements:  8, align:  8, size: 16, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat3x3f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat3x3h: { numElements: 12, align:  8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat4x3f: { numElements: 16, align: 16, size: 64, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat4x3h: { numElements: 16, align:  8, size: 32, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat2x4f: { numElements:  8, align: 16, size: 32,              type: 'f32', View: Float32Array },\n  mat2x4h: { numElements:  8, align:  8, size: 16,              type: 'u16', View: Uint16Array },\n  mat3x4f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n  mat3x4h: { numElements: 12, align:  8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n  mat4x4f: { numElements: 16, align: 16, size: 64,              type: 'f32', View: Float32Array },\n  mat4x4h: { numElements: 16, align:  8, size: 32,              type: 'u16', View: Uint16Array },\n\n  // Note: At least as of WGSL V1 you can not create a bool for uniform or storage.\n  // You can only create one in an internal struct. But, this code generates\n  // views of structs and it needs to not fail if the struct has a bool\n  bool: { numElements: 0, align: 1, size: 0, type: 'bool', View: Uint32Array },\n} as const);\n\nexport const kWGSLTypeInfo = createTypeDefs({\n  ...b,\n\n  'atomic<i32>': b.i32,\n  'atomic<u32>': b.u32,\n\n  'vec2<i32>': b.vec2i,\n  'vec2<u32>': b.vec2u,\n  'vec2<f32>': b.vec2f,\n  'vec2<f16>': b.vec2h,\n  'vec3<i32>': b.vec3i,\n  'vec3<u32>': b.vec3u,\n  'vec3<f32>': b.vec3f,\n  'vec3<f16>': b.vec3h,\n  'vec4<i32>': b.vec4i,\n  'vec4<u32>': b.vec4u,\n  'vec4<f32>': b.vec4f,\n  'vec4<f16>': b.vec4h,\n\n  'mat2x2<f32>': b.mat2x2f,\n  'mat2x2<f16>': b.mat2x2h,\n  'mat3x2<f32>': b.mat3x2f,\n  'mat3x2<f16>': b.mat3x2h,\n  'mat4x2<f32>': b.mat4x2f,\n  'mat4x2<f16>': b.mat4x2h,\n  'mat2x3<f32>': b.mat2x3f,\n  'mat2x3<f16>': b.mat2x3h,\n  'mat3x3<f32>': b.mat3x3f,\n  'mat3x3<f16>': b.mat3x3h,\n  'mat4x3<f32>': b.mat4x3f,\n  'mat4x3<f16>': b.mat4x3h,\n  'mat2x4<f32>': b.mat2x4f,\n  'mat2x4<f16>': b.mat2x4h,\n  'mat3x4<f32>': b.mat3x4f,\n  'mat3x4<f16>': b.mat3x4h,\n  'mat4x4<f32>': b.mat4x4f,\n  'mat4x4<f16>': b.mat4x4h,\n} as const);\nexport type WGSLType = keyof typeof kWGSLTypeInfo;\nexport const kWGSLTypes: readonly WGSLType[] = keysOf(kWGSLTypeInfo);\n","import {\n    IntrinsicDefinition,\n    StructDefinition,\n    ArrayDefinition,\n    TypeDefinition,\n    VariableDefinition,\n} from './data-definitions.js';\nimport {\n    isTypedArray,\n    TypedArrayConstructor,\n    TypedArray,\n} from './typed-arrays.js';\nimport { roundUpToMultipleOf, range } from './utils.js';\nimport {\n    WGSLType,\n    kWGSLTypes,\n    kWGSLTypeInfo,\n} from './wgsl-types.js';\n\n/**\n * Set which intrinsic types to make views for.\n *\n * Example:\n *\n * Given a an array of intrinsics like this\n * `array<vec3, 200>`\n *\n * The default is to create a single `Float32Array(4 * 200)`\n * because creating 200 `Float32Array` views is not usually\n * what you want.\n *\n * If you do want individual views then you'd call\n * `setIntrinsicsToView(['vec3f'])` and now you get\n * an array of 200 `Float32Array`s.\n *\n * Note: `setIntrinsicsToView` always sets ALL types. The list you\n * pass it is the types you want views created for, all other types\n * will be reset to do the default. In other words\n *\n * ```js\n * setIntrinsicsToView(['vec3f'])\n * setIntrinsicsToView(['vec2f'])\n * ```\n *\n * Only `vec2f` will have views created. `vec3f` has been reset to the default by\n * the second call\n *\n * You can pass in `true` as the 2nd parameter to make it set which types\n * to flatten and all others will be set to have views created. For example\n * to expand all types would be `setIntrinsicsToView([], true)`. To expand\n * all except `f32` would be `setIntrinsicsToView(['f32'], true)`.\n *\n * To reset all types to the default call it with no arguments\n *\n * @param types array of types to make views for\n * @param flatten whether to flatten or expand the specified types.\n */\nexport function setIntrinsicsToView(types: readonly WGSLType[] = [], flatten?: boolean) {\n    // we need to track what we've viewed because for example `vec3f` references\n    // the same info as `vec3<f32>` so we'd set one and reset the other.\n    const visited = new Set();\n    for (const type of kWGSLTypes) {\n        const info = kWGSLTypeInfo[type];\n        if (!visited.has(info)) {\n            visited.add(info);\n            info.flatten = types.includes(type) ? flatten : !flatten;\n        }\n    }\n}\nsetIntrinsicsToView();\n\nexport type TypedArrayOrViews = TypedArray | Views | Views[];\nexport interface Views {\n    [x: string]: TypedArrayOrViews;\n}\nexport type ArrayBufferViews = {\n    views: TypedArrayOrViews;\n    arrayBuffer: ArrayBuffer;\n}\n\n// This needs to be fixed! ðŸ˜±\nfunction getSizeOfTypeDef(typeDef: TypeDefinition): number {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return asArrayDef.size;\n        /*\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType as IntrinsicDefinition;\n            const { align } = typeInfo[asIntrinsicDef.type];\n            return roundUpToMultipleOf(typeDef.size, align) * asArrayDef.numElements;\n        } else {\n            return asArrayDef.numElements * getSizeOfTypeDef(elementType);\n        }\n        */\n    } else {\n        const asStructDef = typeDef as StructDefinition;\n        const numElements = asArrayDef.numElements || 1;\n        if (asStructDef.fields) {\n            return typeDef.size * numElements;\n        } else {\n            const asIntrinsicDef = typeDef as IntrinsicDefinition;\n            const { align } = kWGSLTypeInfo[asIntrinsicDef.type];\n            return numElements > 1\n                ? roundUpToMultipleOf(typeDef.size, align) * numElements\n                : typeDef.size;\n        }\n    }\n}\n\n// If numElements is undefined this is NOT an array. If it is defined then it IS an array\n// Sizes for arrays are different than sizes for non-arrays. Example\n// a vec3f non array is Float32Array(3)\n// a vec3f array of 2 is Float32Array(4 * 2)\n// a vec3f array of 1 is Float32Array(4 * 1)\nfunction makeIntrinsicTypedArrayView(typeDef: TypeDefinition, buffer: ArrayBuffer, baseOffset: number, numElements?: number): TypedArray {\n    const { size, type } = typeDef as IntrinsicDefinition;\n    try {\n        const { View, align } = kWGSLTypeInfo[type];\n        const isArray = numElements !== undefined;\n        const sizeInBytes = isArray\n            ? roundUpToMultipleOf(size, align)\n            : size;\n        const baseNumElements = sizeInBytes / View.BYTES_PER_ELEMENT;\n        const effectiveNumElements = isArray\n           ? (numElements === 0\n              ? (buffer.byteLength - baseOffset) / sizeInBytes\n              : numElements)\n           : 1;\n\n        return new View(buffer, baseOffset, baseNumElements * effectiveNumElements);\n    } catch {\n        throw new Error(`unknown type: ${type}`);\n    }\n\n}\n\nfunction isIntrinsic(typeDef: TypeDefinition) {\n    return !(typeDef as StructDefinition).fields &&\n           !(typeDef as ArrayDefinition).elementType;\n}\n\n/**\n * Creates a set of named TypedArray views on an ArrayBuffer. If you don't\n * pass in an ArrayBuffer, one will be created. If you're using an unsized\n * array then you must pass in your own arraybuffer\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n * ```\n *\n * views would effectively be\n *\n * ```js\n * views = {\n *   direction: Float32Array(arrayBuffer, 0, 3),\n *   strength: Float32Array(arrayBuffer, 3, 4),\n *   matrix: Float32Array(arraybuffer, 4, 20),\n * };\n * ```\n *\n * You can use the views directly or you can use {@link setStructuredView}\n *\n * @param typeDef Definition of the various types of views.\n * @param arrayBuffer Optional ArrayBuffer to use (if one provided one will be created)\n * @param offset Optional offset in existing ArrayBuffer to start the views.\n * @returns A bunch of named TypedArray views and the ArrayBuffer\n */\nexport function makeTypedArrayViews(typeDef: TypeDefinition, arrayBuffer?: ArrayBuffer, offset?: number): ArrayBufferViews {\n    const baseOffset = offset || 0;\n    const buffer = arrayBuffer || new ArrayBuffer(getSizeOfTypeDef(typeDef));\n\n    const makeViews = (typeDef: TypeDefinition, baseOffset: number): TypedArrayOrViews => {\n        const asArrayDef = typeDef as ArrayDefinition;\n        const elementType = asArrayDef.elementType;\n        if (elementType) {\n            // TODO: Should be optional? Per Type? Depth set? Per field?\n            // The issue is, if we have `array<vec4, 1000>` we don't likely\n            // want 1000 `Float32Array(4)` views. We want 1 `Float32Array(1000 * 4)` view.\n            // On the other hand, if we have `array<mat4x4, 10>` the maybe we do want\n            // 10 `Float32Array(16)` views since you might want to do\n            // `mat4.perspective(fov, aspect, near, far, foo.bar.arrayOf10Mat4s[3])`;\n            if (isIntrinsic(elementType) && kWGSLTypeInfo[(elementType as IntrinsicDefinition).type].flatten) {\n                return makeIntrinsicTypedArrayView(elementType, buffer, baseOffset, asArrayDef.numElements);\n            } else {\n                const {size} = getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n                const effectiveNumElements = asArrayDef.numElements === 0\n                   ? (buffer.byteLength - baseOffset) / size\n                   : asArrayDef.numElements;\n                return range(effectiveNumElements, i => makeViews(elementType, baseOffset + size * i)) as Views[];\n            }\n        } else if (typeof typeDef === 'string') {\n            throw Error('unreachable');\n        } else {\n            const fields = (typeDef as StructDefinition).fields;\n            if (fields) {\n                const views: Views = {};\n                for (const [name, {type, offset}] of Object.entries(fields)) {\n                    views[name] = makeViews(type, baseOffset + offset);\n                }\n                return views;\n            } else {\n                return makeIntrinsicTypedArrayView(typeDef, buffer, baseOffset);\n            }\n        }\n    };\n    return { views: makeViews(typeDef, baseOffset), arrayBuffer: buffer };\n}\n\n/**\n * Given a set of TypeArrayViews and matching JavaScript data\n * sets the content of the views.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Stuff {\n *    direction: vec3f,\n *    strength: f32,\n *    matrix: mat4x4f,\n * };\n * @group(0) @binding(0) var<uniform> uni: Stuff;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const views = makeTypedArrayViews(devs.uniforms.uni.typeDefinition);\n *\n * setStructuredViews({\n *   direction: [1, 2, 3],\n *   strength: 45,\n *   matrix: [\n *     1, 0, 0, 0,\n *     0, 1, 0, 0,\n *     0, 0, 1, 0,\n *     0, 0, 0, 1,\n *   ],\n * });\n * ```\n *\n * The code above will set the various views, which all point to different\n * locations within the same array buffer.\n *\n * See {@link makeTypedArrayViews}.\n *\n * @param data The new values\n * @param views TypedArray views as returned from {@link makeTypedArrayViews}\n */\nexport function setStructuredView(data: any, views: TypedArrayOrViews): void {\n    if (data === undefined) {\n        return;\n    } else if (isTypedArray(views)) {\n        const view = views as TypedArray;\n        if (view.length === 1 && typeof data === 'number') {\n            view[0] = data;\n        } else {\n            if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n                // complete hack!\n                // there's no type data here so let's guess based on the user's data\n                const dataLen = data[0].length;\n                const stride = dataLen === 3 ? 4 : dataLen;\n                for (let i = 0; i < data.length; ++i) {\n                    const offset = i * stride;\n                    view.set(data[i], offset);\n                }\n            } else {\n                view.set(data as number[]);\n            }\n        }\n    } else if (Array.isArray(views)) {\n        const asArray = views as Views[];\n        (data as any[]).forEach((newValue, ndx) => {\n            setStructuredView(newValue, asArray[ndx]);\n        });\n    } else {\n        const asViews = views as Views;\n        for (const [key, newValue] of Object.entries(data)) {\n            const view = asViews[key];\n            if (view) {\n                setStructuredView(newValue, view);\n            }\n        }\n    }\n}\n\nexport type StructuredView = ArrayBufferViews & {\n    /**\n     * Sets the contents of the TypedArrays based on the data passed in\n     * Note: The data may be sparse\n     *\n     * example:\n     *\n     * ```js\n     * const code = `\n     * struct HSL {\n     *   hue: f32,\n     *   sat: f32,\n     *   lum: f32,\n     * };\n     * struct MyStorage {\n     *    colors: array<HSL, 4>,\n     *    brightness: f32,\n     *    kernel: array<f32, 9>,\n     * };\n     * @group(0) @binding(0) var<storage> myStorage: MyStorage;\n     * `;\n     * const defs = makeShaderDataDefinitions(code);\n     * const myUniformValues = makeStructuredView(defs.storages.myStorage);\n     *\n     * myUniformValues.set({\n     *   colors: [\n     *     ,\n     *     ,\n     *     { hue: 0.5, sat: 1.0, lum: 0.5 },  // only set the 3rd color\n     *   ],\n     *   brightness: 0.8,\n     *   kernel: [\n     *      1, 0, -1,\n     *      2, 0, -2,\n     *      1, 0, -1,\n     *   ],\n     * });\n     * ```\n     *\n     * @param data\n     */\n    set(data: any): void;\n}\n\n/**\n * Given a VariableDefinition, create matching TypedArray views\n *\n * @param varDef A VariableDefinition as returned from {@link makeShaderDataDefinitions}\n * @param arrayBuffer Optional ArrayBuffer for the views\n * @param offset Optional offset into the ArrayBuffer for the views\n * @returns TypedArray views for the various named fields of the structure as well\n *    as a `set` function to make them easy to set, and the arrayBuffer\n *\n * ```js\n * const code = `\n * struct HSL {\n *   hue: f32,\n *   sat: f32,\n *   lum: f32,\n * };\n * struct MyStorage {\n *    colors: array<HSL, 4>,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<storage> myStorage: MyStorage;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.storages.myStorage);\n *\n * myUniformValues.set({\n *   colors: [\n *     ,\n *     ,\n *     { hue: 0.5, sat: 1.0, lum: 0.5 },  // only set the 3rd color\n *   ],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * ```\n *\n * data definition can come from `defs.uniforms.<nameOfUniform>`, `defs.storages.<nameOfStorage>`\n * and `defs.structs.<nameOfStruct>`.\n *\n * What this function does:\n *\n * 1. It creates an `ArrayBuffer` of the size equal to the definition passed in (unless you pass in an existing ArrayBuffer)\n *\n * 2. It makes `TypedArray` views of to match the definition.\n *\n * 3. It returns an object with the the `ArrayBuffer`, the TypedArray views, and a `set` function which is just a wrapper\n *    for `setStructView` that passes in the views.\n *\n * For example: Given a data definition created by makeShaderDataDefinitions for this WGSL\n *\n * ```wgsl\n * struct Light {\n *   lightWorldPosition: vec3f,\n *   shininess: f32,\n *   lightDirection: vec3f,\n *   innerLimit: f32,\n *   outerLimit: f32,\n * };\n * struct Uniforms {\n *   normalMatrix: mat3x3f,\n *   worldViewProjection: mat4x4f,\n *   world: mat4x4f,\n *   color: vec4f,\n *   viewWorldPosition: vec3f,\n *   lights: array<Light, 3>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: Uniforms;\n * ```\n *\n * `makeStructuredView(defs.uniforms.myUniforms)` would return this\n *\n * ```js\n * const arrayBuffer = new ArrayBuffer(368)\n * const views = {\n *   normalMatrix: new Float32Array(arrayBuffer, 0, 12),\n *   worldViewProjection: new Float32Array(arrayBuffer, 48, 16),\n *   world: new Float32Array(arrayBuffer, 112, 16),\n *   color: new Float32Array(arrayBuffer, 176, 4),\n *   viewWorldPosition: new Float32Array(arrayBuffer, 192, 3),\n *   lights: [\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 208, 3),\n *       shininess: new Float32Array(arrayBuffer, 220, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 224, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 236, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 240, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 256, 3),\n *       shininess: new Float32Array(arrayBuffer, 268, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 272, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 284, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 288, 1),\n *     },\n *     {\n *       lightWorldPosition: new Float32Array(arrayBuffer, 304, 3),\n *       shininess: new Float32Array(arrayBuffer, 316, 1),\n *       lightDirection: new Float32Array(arrayBuffer, 320, 3),\n *       innerLimit: new Float32Array(arrayBuffer, 332, 1),\n *       outerLimit: new Float32Array(arrayBuffer, 336, 1),\n *     },\n *   ],\n *   mode: new Uint32Array(UniformsValues, 352, 1),\n * };\n * result = {\n *   arrayBuffer,\n *   views,\n *   set(data: any) {\n *     setStructuredView(data, views.views);\n *   },\n * }\n * ```\n *\n * From this, you can see you can set the value in the array buffer for any field/member/property\n * directly. Example\n *\n * ```js\n * result.views.lights[2].lightDirection.set([7, 8, 9]);\n * result.views.lights[2].innerLimit[0] = 4;\n * ```\n *\n * `set` just takes a JS object and matches property names to the view names.\n *\n * ```js\n * result.set({\n *   color: [1, 1, 0, 1],\n *   viewWorldPosition: [12, 34, 56],\n *   mode: 8,\n * });\n * ```\n *\n * Is equivalent to\n *\n * ```js\n * result.views.color.set([1, 1, 0, 1]);\n * result.views.worldViewPosition.set([12, 34, 56]);\n * result.views.mode[0] = 8;\n * ```\n *\n * Further, `set` is just a short cut for `setStructuredView` passing in the root\n * `result'views`.\n *\n * So, for example, if you want to set the light at index 2, this would work.\n *\n * ```js\n * setStructuredView({\n *   lightWorldPosition: [1, 2, 3],\n *   shininess: 4,\n *   lightDirection: [5, 6, 7],\n *   innerLimit: 8,\n *   outerLimit: 9,\n * }, result.views.lights[2]);\n * ```\n */\nexport function makeStructuredView(varDef: VariableDefinition | StructDefinition, arrayBuffer?: ArrayBuffer, offset = 0): StructuredView {\n    const asVarDef = varDef as VariableDefinition;\n    const typeDef = asVarDef.group === undefined ? varDef as StructDefinition : asVarDef.typeDefinition;\n    const views = makeTypedArrayViews(typeDef, arrayBuffer, offset);\n    return {\n        ...views,\n        set(data: any) {\n            setStructuredView(data, views.views);\n        },\n    };\n}\n\ntype ViewsByCtor = Map<TypedArrayConstructor, TypedArray>;\nconst s_views = new WeakMap<ArrayBuffer, ViewsByCtor>();\n\nfunction getViewsByCtor(arrayBuffer: ArrayBuffer): ViewsByCtor {\n    let viewsByCtor = s_views.get(arrayBuffer);\n    if (!viewsByCtor) {\n        viewsByCtor = new Map();\n        s_views.set(arrayBuffer, viewsByCtor);\n    }\n    return viewsByCtor;\n}\n\nfunction getView<T extends TypedArray>(arrayBuffer: ArrayBuffer, Ctor: TypedArrayConstructor): T {\n    const viewsByCtor = getViewsByCtor(arrayBuffer);\n    let view = viewsByCtor.get(Ctor);\n    if (!view) {\n        view = new Ctor(arrayBuffer);\n        viewsByCtor.set(Ctor, view);\n    }\n    return view as T;\n}\n\n// Is this something like [1,2,3]?\nfunction isArrayLikeOfNumber(data: any) {\n    return isTypedArray(data) || Array.isArray(data) && typeof data[0] === 'number';\n}\n\nfunction setIntrinsicFromArrayLikeOfNumber(typeDef: IntrinsicDefinition, data: any, arrayBuffer: ArrayBuffer, offset: number) {\n    const asIntrinsicDefinition = typeDef as IntrinsicDefinition;\n    const type = kWGSLTypeInfo[asIntrinsicDefinition.type];\n    const view = getView(arrayBuffer, type.View);\n    const index = offset / view.BYTES_PER_ELEMENT;\n    if (typeof data === 'number') {\n        view[index] = data;\n    } else {\n        view.set(data, index);\n    }\n}\n\n/**\n * Sets values on an existing array buffer from a TypeDefinition\n * @param typeDef A type definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nexport function setTypedValues(typeDef: TypeDefinition, data: any, arrayBuffer: ArrayBuffer, offset = 0) {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        // It's ArrayDefinition\n        if (isIntrinsic(elementType)) {\n            const asIntrinsicDef = elementType as IntrinsicDefinition;\n            if (isArrayLikeOfNumber(data)) {\n                setIntrinsicFromArrayLikeOfNumber(asIntrinsicDef, data, arrayBuffer, offset);\n                return;\n            }\n        }\n        data.forEach((newValue: any, ndx: number) => {\n            setTypedValues(elementType, newValue, arrayBuffer, offset + elementType.size * ndx);\n        });\n        return;\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        // It's StructDefinition\n        for (const [key, newValue] of Object.entries(data)) {\n            const fieldDef = fields[key];\n            if (fieldDef) {\n                setTypedValues(fieldDef.type, newValue, arrayBuffer, offset + fieldDef.offset);\n            }\n        }\n    } else {\n        // It's IntrinsicDefinition\n        setIntrinsicFromArrayLikeOfNumber(typeDef as IntrinsicDefinition, data, arrayBuffer, offset);\n    }\n}\n\n/**\n * Same as {@link setTypedValues} except it takes a {@link VariableDefinition}.\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @param data The source data\n * @param arrayBuffer The arrayBuffer who's data to set.\n * @param offset An offset in the arrayBuffer to start at.\n */\nexport function setStructuredValues(varDef: VariableDefinition, data: any, arrayBuffer: ArrayBuffer, offset = 0) {\n    setTypedValues(varDef.typeDefinition, data, arrayBuffer, offset);\n}\n\nfunction getAlignmentOfTypeDef(typeDef: TypeDefinition): number {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        return getAlignmentOfTypeDef(elementType);\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        return Object.values(fields).reduce((max, {type}) => Math.max(max, getAlignmentOfTypeDef(type)), 0);\n    }\n\n    const { type } = typeDef as IntrinsicDefinition;\n    const { align } = kWGSLTypeInfo[type];\n    return align;\n}\n\ntype ElementInfo = {\n    unalignedSize: number,\n    align: number,\n    size: number,\n};\n\nfunction getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef: TypeDefinition): ElementInfo {\n    const asArrayDef = typeDef as ArrayDefinition;\n    const elementType = asArrayDef.elementType;\n    if (elementType) {\n        const unalignedSize = elementType.size;\n        const align = getAlignmentOfTypeDef(elementType);\n        return {\n            unalignedSize,\n            align,\n            size: roundUpToMultipleOf(unalignedSize, align),\n        };\n    }\n\n    const asStructDef = typeDef as StructDefinition;\n    const fields = asStructDef.fields;\n    if (fields) {\n        const lastField = Object.values(fields).pop()!;\n        if (lastField.type.size === 0) {\n            return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(lastField.type);\n        }\n    }\n\n    return {\n        size: 0,\n        unalignedSize: 0,\n        align: 1,\n    };\n}\n\n/**\n * Returns the size, align, and unalignedSize of \"the\" unsized array element. Unsized arrays are only\n * allowed at the outer most level or the last member of a top level struct.\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size, align, unalignedSize } = getSizeAndAlignmentOfUnsizedArrayElement(\n *    defs.storages.f);\n * // size = 16   (since you need to allocate 16 bytes per element)\n * // align = 16  (since vec3f needs to be aligned to 16 bytes)\n * // unalignedSize = 12 (since only 12 bytes are used for a vec3f)\n * ```\n *\n * Generally you only need size. Example:\n *\n * ```js\n * const code = `\n * struct Foo {\n *   a: u32,\n *   b: array<vec3f>,\n * };\n * @group(0) @binding(0) var<storage> f: Foo;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const { size } = getSizeAndAlignmentOfUnsizedArrayElement(defs.storages.f);\n * const numElements = 10;\n * const views = makeStructuredViews(\n *    defs.storages.f,\n *    new ArrayBuffer(defs.storages.f.size + size * numElements));\n * ```\n *\n * @param varDef A variable definition provided by {@link makeShaderDataDefinitions}\n * @returns the size, align, and unalignedSize in bytes of the unsized array element in this type definition.\n *   If there is no unsized array, size = 0.\n */\nexport function getSizeAndAlignmentOfUnsizedArrayElement(varDef: VariableDefinition | StructDefinition): {size: number, align: number} {\n    const asVarDef = varDef as VariableDefinition;\n    const typeDef = asVarDef.group === undefined ? varDef as StructDefinition : asVarDef.typeDefinition;\n    return getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef(typeDef);\n}\n","class e{constructor(e,t){this.name=e,this.attributes=t,this.size=0}get isArray(){return!1}get isStruct(){return!1}get isTemplate(){return!1}}class t{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n,this.offset=0,this.size=0}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class n extends e{constructor(e,t){super(e,t),this.members=[],this.align=0,this.startLine=-1,this.endLine=-1,this.inUse=!1}get isStruct(){return!0}}class s extends e{constructor(e,t){super(e,t),this.count=0,this.stride=0}get isArray(){return!0}}class r extends e{constructor(e,t,n,s){super(e,n),this.format=t,this.access=s}get isTemplate(){return!0}}var a,i,o,u,l;(e=>{e[e.Uniform=0]='Uniform',e[e.Storage=1]='Storage',e[e.Texture=2]='Texture',e[e.Sampler=3]='Sampler',e[e.StorageTexture=4]='StorageTexture'})(a||(a={}));class c{constructor(e,t,n,s,r,a,i){this.name=e,this.type=t,this.group=n,this.binding=s,this.attributes=r,this.resourceType=a,this.access=i}get isArray(){return this.type.isArray}get isStruct(){return this.type.isStruct}get isTemplate(){return this.type.isTemplate}get size(){return this.type.size}get align(){return this.type.isStruct?this.type.align:0}get members(){return this.type.isStruct?this.type.members:null}get format(){return this.type.isArray||this.type.isTemplate?this.type.format:null}get count(){return this.type.isArray?this.type.count:0}get stride(){return this.type.isArray?this.type.stride:this.size}}class h{constructor(e,t){this.name=e,this.type=t}}class f{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s,this.interpolation=null}}class p{constructor(e,t,n,s){this.name=e,this.type=t,this.locationType=n,this.location=s}}class m{constructor(e,t,n,s){this.name=e,this.type=t,this.attributes=n,this.id=s}}class d{constructor(e,t,n){this.name=e,this.type=t,this.attributes=n}}class _{constructor(e,t=null,n){this.stage=null,this.inputs=[],this.outputs=[],this.arguments=[],this.returnType=null,this.resources=[],this.overrides=[],this.startLine=-1,this.endLine=-1,this.inUse=!1,this.calls=new Set,this.name=e,this.stage=t,this.attributes=n}}class v{constructor(){this.vertex=[],this.fragment=[],this.compute=[]}}class x{constructor(){this.constants=new Map,this.aliases=new Map,this.structs=new Map}}class g{constructor(){this.id=g._id++,this.line=0}get isAstNode(){return!0}get astNodeType(){return''}constEvaluate(e,t){throw new Error('Cannot evaluate node')}constEvaluateString(e){return this.constEvaluate(e).toString()}search(e){}searchBlock(e,t){if(e){t(y.instance);for(const n of e)n instanceof Array?this.searchBlock(n,t):n.search(t);t(w.instance)}}}g._id=0;class y extends g{}y.instance=new y;class w extends g{}w.instance=new w;class b extends g{constructor(){super()}}class k extends b{constructor(e,t,n,s,r,a){super(),this.calls=new Set,this.name=e,this.args=t,this.returnType=n,this.body=s,this.startLine=r,this.endLine=a}get astNodeType(){return'function'}search(e){this.searchBlock(this.body,e)}}class I extends b{constructor(e){super(),this.expression=e}get astNodeType(){return'staticAssert'}search(e){this.expression.search(e)}}class T extends b{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'while'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class S extends b{constructor(e){super(),this.body=e}get astNodeType(){return'continuing'}search(e){this.searchBlock(this.body,e)}}class E extends b{constructor(e,t,n,s){super(),this.init=e,this.condition=t,this.increment=n,this.body=s}get astNodeType(){return'for'}search(e){var t,n,s;null===(t=this.init)||void 0===t||t.search(e),null===(n=this.condition)||void 0===n||n.search(e),null===(s=this.increment)||void 0===s||s.search(e),this.searchBlock(this.body,e)}}class A extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'var'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class $ extends b{constructor(e,t,n){super(),this.attributes=null,this.name=e,this.type=t,this.value=n}get astNodeType(){return'override'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class V extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'let'}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}class N extends b{constructor(e,t,n,s,r){super(),this.attributes=null,this.name=e,this.type=t,this.storage=n,this.access=s,this.value=r}get astNodeType(){return'const'}constEvaluate(e,t){return this.value.constEvaluate(e,t)}search(e){var t;e(this),null===(t=this.value)||void 0===t||t.search(e)}}(e=>{e.increment='++',e.decrement='--'})(i||(i={})),(e=>{e.parse=function(t){const n=t;if('parse'==n)throw new Error('Invalid value for IncrementOperator');return e[n]}})(i||(i={}));class L extends b{constructor(e,t){super(),this.operator=e,this.variable=t}get astNodeType(){return'increment'}search(e){this.variable.search(e)}}(e=>{e.assign='=',e.addAssign='+=',e.subtractAssin='-=',e.multiplyAssign='*=',e.divideAssign='/=',e.moduloAssign='%=',e.andAssign='&=',e.orAssign='|=',e.xorAssign='^=',e.shiftLeftAssign='<<=',e.shiftRightAssign='>>='})(o||(o={})),(e=>{e.parse=function(e){const t=e;if('parse'==t)throw new Error('Invalid value for AssignOperator');return t}})(o||(o={}));class O extends b{constructor(e,t,n){super(),this.operator=e,this.variable=t,this.value=n}get astNodeType(){return'assign'}search(e){this.variable.search(e),this.value.search(e)}}class D extends b{constructor(e,t){super(),this.name=e,this.args=t}get astNodeType(){return'call'}search(e){for(const t of this.args)t.search(e);e(this)}}class C extends b{constructor(e,t){super(),this.body=e,this.continuing=t}get astNodeType(){return'loop'}}class M extends b{constructor(e,t){super(),this.condition=e,this.cases=t}get astNodeType(){return'switch'}}class F extends b{constructor(e,t,n,s){super(),this.condition=e,this.body=t,this.elseif=n,this.else=s}get astNodeType(){return'if'}search(e){this.condition.search(e),this.searchBlock(this.body,e),this.searchBlock(this.elseif,e),this.searchBlock(this.else,e)}}class U extends b{constructor(e){super(),this.value=e}get astNodeType(){return'return'}search(e){var t;null===(t=this.value)||void 0===t||t.search(e)}}class q extends b{constructor(e){super(),this.name=e}get astNodeType(){return'enable'}}class B extends b{constructor(e){super(),this.extensions=e}get astNodeType(){return'requires'}}class z extends b{constructor(e,t){super(),this.severity=e,this.rule=t}get astNodeType(){return'diagnostic'}}class R extends b{constructor(e,t){super(),this.name=e,this.type=t}get astNodeType(){return'alias'}}class G extends b{constructor(){super()}get astNodeType(){return'discard'}}class W extends b{constructor(){super(),this.condition=null,this.loopId=-1}get astNodeType(){return'break'}}class P extends b{constructor(){super(),this.loopId=-1}get astNodeType(){return'continue'}}class X extends b{constructor(e){super(),this.attributes=null,this.name=e}get astNodeType(){return'type'}get isStruct(){return!1}get isArray(){return!1}static maxFormatType(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=X._priority.get(t.name);X._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?X.i32:t}}X.x32=new X('x32'),X.f32=new X('f32'),X.i32=new X('i32'),X.u32=new X('u32'),X.f16=new X('f16'),X.bool=new X('bool'),X._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class Z extends X{constructor(e,t,n,s){super(e),this.members=t,this.startLine=n,this.endLine=s}get astNodeType(){return'struct'}get isStruct(){return!0}getMemberIndex(e){for(let t=0;t<this.members.length;t++)if(this.members[t].name==e)return t;return-1}}class j extends X{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'template'}}j.vec2f=new j('vec2',X.f32,null),j.vec3f=new j('vec3',X.f32,null),j.vec4f=new j('vec4',X.f32,null),j.vec2i=new j('vec2',X.i32,null),j.vec3i=new j('vec3',X.i32,null),j.vec4i=new j('vec4',X.i32,null),j.vec2u=new j('vec2',X.u32,null),j.vec3u=new j('vec3',X.u32,null),j.vec4u=new j('vec4',X.u32,null),j.vec2h=new j('vec2',X.f16,null),j.vec3h=new j('vec3',X.f16,null),j.vec4h=new j('vec4',X.f16,null),j.vec2b=new j('vec2',X.bool,null),j.vec3b=new j('vec3',X.bool,null),j.vec4b=new j('vec4',X.bool,null),j.mat2x2f=new j('mat2x2',X.f32,null),j.mat2x3f=new j('mat2x3',X.f32,null),j.mat2x4f=new j('mat2x4',X.f32,null),j.mat3x2f=new j('mat3x2',X.f32,null),j.mat3x3f=new j('mat3x3',X.f32,null),j.mat3x4f=new j('mat3x4',X.f32,null),j.mat4x2f=new j('mat4x2',X.f32,null),j.mat4x3f=new j('mat4x3',X.f32,null),j.mat4x4f=new j('mat4x4',X.f32,null),j.mat2x2h=new j('mat2x2',X.f16,null),j.mat2x3h=new j('mat2x3',X.f16,null),j.mat2x4h=new j('mat2x4',X.f16,null),j.mat3x2h=new j('mat3x2',X.f16,null),j.mat3x3h=new j('mat3x3',X.f16,null),j.mat3x4h=new j('mat3x4',X.f16,null),j.mat4x2h=new j('mat4x2',X.f16,null),j.mat4x3h=new j('mat4x3',X.f16,null),j.mat4x4h=new j('mat4x4',X.f16,null);class Q extends X{constructor(e,t,n,s){super(e),this.storage=t,this.type=n,this.access=s}get astNodeType(){return'pointer'}}class Y extends X{constructor(e,t,n,s){super(e),this.attributes=t,this.format=n,this.count=s}get astNodeType(){return'array'}get isArray(){return!0}}class K extends X{constructor(e,t,n){super(e),this.format=t,this.access=n}get astNodeType(){return'sampler'}}class H extends g{constructor(){super(),this.postfix=null}}class J extends H{constructor(e){super(),this.value=e}get astNodeType(){return'stringExpr'}toString(){return this.value}constEvaluateString(){return this.value}}class ee extends H{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'createExpr'}search(e){if(e(this),this.args)for(const t of this.args)t.search(e)}constEvaluate(e,t){return t&&(t[0]=this.type),e.evalExpression(this,e.context)}}class te extends H{constructor(e,t){super(),this.cachedReturnValue=null,this.name=e,this.args=t}get astNodeType(){return'callExpr'}setCachedReturnValue(e){this.cachedReturnValue=e}get isBuiltin(){return te.builtinFunctionNames.has(this.name)}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){for(const t of this.args)t.search(e);e(this)}}te.builtinFunctionNames=new Set(['all','all','any','select','arrayLength','abs','acos','acosh','asin','asinh','atan','atanh','atan2','ceil','clamp','cos','cosh','countLeadingZeros','countOneBits','countTrailingZeros','cross','degrees','determinant','distance','dot','dot4U8Packed','dot4I8Packed','exp','exp2','extractBits','faceForward','firstLeadingBit','firstTrailingBit','floor','fma','fract','frexp','insertBits','inverseSqrt','ldexp','length','log','log2','max','min','mix','modf','normalize','pow','quantizeToF16','radians','reflect','refract','reverseBits','round','saturate','sign','sin','sinh','smoothStep','sqrt','step','tan','tanh','transpose','trunc','dpdx','dpdxCoarse','dpdxFine','dpdy','dpdyCoarse','dpdyFine','fwidth','fwidthCoarse','fwidthFine','textureDimensions','textureGather','textureGatherCompare','textureLoad','textureNumLayers','textureNumLevels','textureNumSamples','textureSample','textureSampleBias','textureSampleCompare','textureSampleCompareLevel','textureSampleGrad','textureSampleLevel','textureSampleBaseClampToEdge','textureStore','atomicLoad','atomicStore','atomicAdd','atomicSub','atomicMax','atomicMin','atomicAnd','atomicOr','atomicXor','atomicExchange','atomicCompareExchangeWeak','pack4x8snorm','pack4x8unorm','pack4xI8','pack4xU8','pack4x8Clamp','pack4xU8Clamp','pack2x16snorm','pack2x16unorm','pack2x16float','unpack4x8snorm','unpack4x8unorm','unpack4xI8','unpack4xU8','unpack2x16snorm','unpack2x16unorm','unpack2x16float','storageBarrier','textureBarrier','workgroupBarrier','workgroupUniformLoad','subgroupAdd','subgroupExclusiveAdd','subgroupInclusiveAdd','subgroupAll','subgroupAnd','subgroupAny','subgroupBallot','subgroupBroadcast','subgroupBroadcastFirst','subgroupElect','subgroupMax','subgroupMin','subgroupMul','subgroupExclusiveMul','subgroupInclusiveMul','subgroupOr','subgroupShuffle','subgroupShuffleDown','subgroupShuffleUp','subgroupShuffleXor','subgroupXor','quadBroadcast','quadSwapDiagonal','quadSwapX','quadSwapY']);class ne extends H{constructor(e){super(),this.name=e}get astNodeType(){return'varExpr'}search(e){e(this),this.postfix&&this.postfix.search(e)}constEvaluate(e,t){return e.evalExpression(this,e.context)}}class se extends H{constructor(e,t){super(),this.name=e,this.initializer=t}get astNodeType(){return'constExpr'}constEvaluate(e,t){if(this.initializer){const t=e.evalExpression(this.initializer,e.context);return null!==t&&this.postfix?t.getDataValue(e,this.postfix,e.context):t}return null}search(e){this.initializer.search(e)}}class re extends H{constructor(e,t){super(),this.value=e,this.type=t}get astNodeType(){return'literalExpr'}constEvaluate(e,t){return void 0!==t&&(t[0]=this.type),this.value}get isScalar(){return this.value instanceof be}get isVector(){return this.value instanceof Ie||this.value instanceof Te}get scalarValue(){return this.value instanceof be?this.value.value:(console.error('Value is not scalar.'),0)}get vectorValue(){return this.value instanceof Ie||this.value instanceof Te?this.value.value:(console.error('Value is not a vector or matrix.'),[])}}class ae extends H{constructor(e,t){super(),this.type=e,this.value=t}get astNodeType(){return'bitcastExpr'}search(e){this.value.search(e)}}class ie extends H{constructor(e,t){super(),this.type=e,this.args=t}get astNodeType(){return'typecastExpr'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.searchBlock(this.args,e)}}class oe extends H{constructor(e){super(),this.contents=e}get astNodeType(){return'groupExpr'}constEvaluate(e,t){return this.contents[0].constEvaluate(e,t)}search(e){this.searchBlock(this.contents,e)}}class ue extends H{constructor(e){super(),this.index=e}search(e){this.index.search(e)}}class le extends H{constructor(){super()}}class ce extends le{constructor(e,t){super(),this.operator=e,this.right=t}get astNodeType(){return'unaryOp'}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.right.search(e)}}class he extends le{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}get astNodeType(){return'binaryOp'}_getPromotedType(e,t){return e.name===t.name?e:'f32'===e.name||'f32'===t.name?X.f32:'u32'===e.name||'u32'===t.name?X.u32:X.i32}constEvaluate(e,t){return e.evalExpression(this,e.context)}search(e){this.left.search(e),this.right.search(e)}}class fe extends g{constructor(e){super(),this.body=e}}class pe extends H{constructor(){super()}get astNodeType(){return'default'}}class me extends fe{constructor(e,t){super(t),this.selectors=e}get astNodeType(){return'case'}search(e){this.searchBlock(this.body,e)}}class de extends fe{constructor(e){super(e)}get astNodeType(){return'default'}search(e){this.searchBlock(this.body,e)}}class _e extends g{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'argument'}}class ve extends g{constructor(e,t){super(),this.condition=e,this.body=t}get astNodeType(){return'elseif'}search(e){this.condition.search(e),this.searchBlock(this.body,e)}}class xe extends g{constructor(e,t,n){super(),this.name=e,this.type=t,this.attributes=n}get astNodeType(){return'member'}}class ge extends g{constructor(e,t){super(),this.name=e,this.value=t}get astNodeType(){return'attribute'}}class ye{constructor(e){this.typeInfo=e}setDataValue(e,t,n,s){console.error('SetDataValue: Not implemented',t,n)}getDataValue(e,t,n){return console.error('GetDataValue: Not implemented',t),null}toString(){return`<${this.typeInfo.name}>`}}class we extends ye{constructor(){super(new e('void',null))}toString(){return'void'}}we.void=new we;class be extends ye{constructor(e,t){super(t),'i32'===this.typeInfo.name||'u32'===this.typeInfo.name?e=Math.floor(e):'bool'===this.typeInfo.name&&(e=e?1:0),this.value=e}setDataValue(e,t,n,s){n?console.error('SetDataValue: Scalar data does not support postfix',n):t instanceof be?(t.value,'i32'===this.typeInfo.name||'u32'===this.typeInfo.name||this.typeInfo.name,this.value=t.value):console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){return t?(console.error('GetDataValue: Scalar data does not support postfix',t),null):this}toString(){return`${this.value}`}}function ke(e,t,n){const s=t.length;return 2===s?'f32'===n?new Ie(t,e.getTypeInfo('vec2f')):'i32'===n?new Ie(t,e.getTypeInfo('vec2i')):'u32'===n?new Ie(t,e.getTypeInfo('vec2u')):'f16'===n?new Ie(t,e.getTypeInfo('vec2h')):(console.error(`GetDataValue: Unknown format ${n}`),null):3===s?'f32'===n?new Ie(t,e.getTypeInfo('vec3f')):'i32'===n?new Ie(t,e.getTypeInfo('vec3i')):'u32'===n?new Ie(t,e.getTypeInfo('vec3u')):'f16'===n?new Ie(t,e.getTypeInfo('vec3h')):(console.error(`GetDataValue: Unknown format ${n}`),null):4===s?'f32'===n?new Ie(t,e.getTypeInfo('vec4f')):'i32'===n?new Ie(t,e.getTypeInfo('vec4i')):'u32'===n?new Ie(t,e.getTypeInfo('vec4u')):'f16'===n?new Ie(t,e.getTypeInfo('vec4h')):(console.error(`GetDataValue: Unknown format ${n}`),null):(console.error(`GetDataValue: Invalid vector size ${t.length}`),null)}class Ie extends ye{constructor(e,t){super(t),Array.isArray(e)?this.value=e:this.value=Array.from(e)}setDataValue(e,t,n,s){n instanceof J?console.error('TODO: Set vector postfix'):t instanceof Ie?this.value=t.value:console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){let s=e.getTypeInfo('f32');if(this.typeInfo instanceof r)s=this.typeInfo.format;else{const t=this.typeInfo.name;'vec2f'===t||'vec3f'===t||'vec4f'===t?s=e.getTypeInfo('f32'):'vec2i'===t||'vec3i'===t||'vec4i'===t?s=e.getTypeInfo('i32'):'vec2u'===t||'vec3u'===t||'vec4u'===t?s=e.getTypeInfo('u32'):'vec2h'===t||'vec3h'===t||'vec4h'===t?s=e.getTypeInfo('f16'):console.error(`GetDataValue: Unknown type ${t}`)}if(t instanceof ue){const r=t.index;let a=-1;if(r instanceof re){if(!(r.value instanceof be))return console.error(`GetValueData: Invalid array index ${r.value}`),null;a=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof be))return console.error('GetDataValue: Unknown index type',r),null;a=t.value}return a<0||a>=this.value.length?(console.error('GetDataValue: Index out of range',a),null):new be(this.value[a],s)}if(t instanceof J){const n=t.value,r=[];for(const e of n)'x'===e||'r'===e?r.push(this.value[0]):'y'===e||'g'===e?r.push(this.value[1]):'z'===e||'b'===e?r.push(this.value[2]):'w'===e||'a'===e?r.push(this.value[3]):console.error(`GetDataValue: Unknown member ${e}`);return 1===r.length?new be(r[0],s):ke(e,r,s.name)}return this}toString(){let e=`${this.value[0]}`;for(let t=1;t<this.value.length;++t)e+=`, ${this.value[t]}`;return e}}class Te extends ye{constructor(e,t){super(t),this.value=e}setDataValue(e,t,n,s){n instanceof J?console.error('TODO: Set matrix postfix'):t instanceof Te?this.value=t.value:console.error('SetDataValue: Invalid value',t)}getDataValue(e,t,n){const s=this.typeInfo.name;let a=e.getTypeInfo('f32');if(this.typeInfo instanceof r)a=this.typeInfo.format;else if(s.endsWith('f'))a=e.getTypeInfo('f32');else if(s.endsWith('i'))a=e.getTypeInfo('i32');else if(s.endsWith('u'))a=e.getTypeInfo('u32');else{if(!s.endsWith('h'))return console.error(`GetDataValue: Unknown type ${s}`),null;a=e.getTypeInfo('f16')}if(t instanceof ue){const r=t.index;let i,o=-1;if(r instanceof re){if(!(r.value instanceof be))return console.error(`GetDataValue: Invalid array index ${r.value}`),null;o=r.value.value}else{const t=e.evalExpression(r,n);if(!(t instanceof be))return console.error('GetDataValue: Unknown index type',r),null;o=t.value}if(o<0||o>=this.value.length)return console.error('GetDataValue: Index out of range',o),null;if('mat2x2'===s||'mat2x2f'===s||'mat2x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat2x3'===s||'mat2x3f'===s||'mat2x3h'===s)i=this.value.slice(3*o,3*o+3);else if('mat2x4'===s||'mat2x4f'===s||'mat2x4h'===s)i=this.value.slice(4*o,4*o+4);else if('mat3x2'===s||'mat3x2f'===s||'mat3x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat3x3'===s||'mat3x3f'===s||'mat3x3h'===s)i=this.value.slice(3*o,3*o+3);else if('mat3x4'===s||'mat3x4f'===s||'mat3x4h'===s)i=this.value.slice(4*o,4*o+4);else if('mat4x2'===s||'mat4x2f'===s||'mat4x2h'===s)i=this.value.slice(2*o,2*o+2);else if('mat4x3'===s||'mat4x3f'===s||'mat4x3h'===s)i=this.value.slice(3*o,3*o+3);else{if('mat4x4'!==s&&'mat4x4f'!==s&&'mat4x4h'!==s)return console.error(`GetDataValue: Unknown type ${s}`),null;i=this.value.slice(4*o,4*o+4)}const u=ke(e,i,a.name);if(t.postfix)return u.getDataValue(e,t.postfix,n)}return this}toString(){let e=`${this.value[0]}`;for(let t=1;t<this.value.length;++t)e+=`, ${this.value[t]}`;return e}}class Se extends ye{constructor(e,t,n=0,s){super(t),this.textureSize=[0,0,0],this.buffer=e instanceof ArrayBuffer?e:e.buffer,this.offset=n,void 0!==s&&(this.textureSize=s)}setDataValue(t,r,a,i){if(null===r)return void console.log('setDataValue: NULL data.');let o=this.offset,u=this.typeInfo;for(;a;){if(a instanceof ue)if(u instanceof s){const e=a.index;if(e instanceof re){if(!(e.value instanceof be))return void console.error(`SetDataValue: Invalid index type ${e.value}`);o+=e.value.value*u.stride}else{const n=t.evalExpression(e,i);if(!(n instanceof be))return void console.error('SetDataValue: Unknown index type',e);o+=n.value*u.stride}u=u.format}else console.error(`SetDataValue: Type ${t.getTypeName(u)} is not an array`);else{if(!(a instanceof J))return void console.error('SetDataValue: Unknown postfix type',a);{const s=a.value;if(u instanceof n){let e=!1;for(const t of u.members)if(t.name===s){o+=t.offset,u=t.type,e=!0;break}if(!e)return void console.error(`SetDataValue: Member ${s} not found`)}else if(u instanceof e){const e=t.getTypeName(u);let n=0;if('x'===s||'r'===s)n=0;else if('y'===s||'g'===s)n=1;else if('z'===s||'b'===s)n=2;else{if('w'!==s&&'a'!==s)return void console.error(`SetDataValue: Unknown member ${s}`);n=3}if(!(r instanceof be))return void console.error('SetDataValue: Invalid value',r);const a=r.value;return'vec2f'===e?void(new Float32Array(this.buffer,o,2)[n]=a):'vec3f'===e?void(new Float32Array(this.buffer,o,3)[n]=a):'vec4f'===e?void(new Float32Array(this.buffer,o,4)[n]=a):'vec2i'===e?void(new Int32Array(this.buffer,o,2)[n]=a):'vec3i'===e?void(new Int32Array(this.buffer,o,3)[n]=a):'vec4i'===e?void(new Int32Array(this.buffer,o,4)[n]=a):'vec2u'===e?void(new Uint32Array(this.buffer,o,2)[n]=a):'vec3u'===e?void(new Uint32Array(this.buffer,o,3)[n]=a):'vec4u'===e?void(new Uint32Array(this.buffer,o,4)[n]=a):void console.error(`SetDataValue: Type ${e} is not a struct`)}}}a=a.postfix}this.setData(t,r,u,o,i)}setData(e,t,n,s,r){const a=e.getTypeName(n);if('f32'!==a&&'f16'!==a)if('i32'!==a&&'atomic<i32>'!==a&&'x32'!==a)if('u32'!==a&&'atomic<u32>'!==a)if('bool'!==a)if('vec2f'!==a&&'vec2h'!==a)if('vec3f'!==a&&'vec3h'!==a)if('vec4f'!==a&&'vec4h'!==a)if('vec2i'!==a)if('vec3i'!==a)if('vec4i'!==a)if('vec2u'!==a)if('vec3u'!==a)if('vec4u'!==a)if('vec2b'!==a)if('vec3b'!==a)if('vec4b'!==a)if('mat2x2f'!==a&&'mat2x2h'!==a)if('mat2x3f'!==a&&'mat2x3h'!==a)if('mat2x4f'!==a&&'mat2x4h'!==a)if('mat3x2f'!==a&&'mat3x2h'!==a)if('mat3x3f'!==a&&'mat3x3h'!==a)if('mat3x4f'!==a&&'mat3x4h'!==a)if('mat4x2f'!==a&&'mat4x2h'!==a)if('mat4x3f'!==a&&'mat4x3h'!==a)if('mat4x4f'!==a&&'mat4x4h'!==a)if(t instanceof Se){if(n===t.typeInfo){return void new Uint8Array(this.buffer,s,t.buffer.byteLength).set(new Uint8Array(t.buffer))}console.error('SetDataValue: Type mismatch',a,e.getTypeName(t.typeInfo))}else console.error(`SetData: Unknown type ${a}`);else{const e=new Float32Array(this.buffer,s,16);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11],e[12]=t.value[12],e[13]=t.value[13],e[14]=t.value[14],e[15]=t.value[15]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,12);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8],e[9]=t.value[9],e[10]=t.value[10],e[11]=t.value[11]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11])}else{const e=new Float32Array(this.buffer,s,9);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7],e[8]=t.value[8]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,8);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5],e[6]=t.value[6],e[7]=t.value[7]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7])}else{const e=new Float32Array(this.buffer,s,6);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3],e[4]=t.value[4],e[5]=t.value[5]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Te?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Uint32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Uint32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Uint32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Int32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Int32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Int32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else{const e=new Float32Array(this.buffer,s,4);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2],e[3]=t.value[3]):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3])}else{const e=new Float32Array(this.buffer,s,3);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1],e[2]=t.value[2]):(e[0]=t[0],e[1]=t[1],e[2]=t[2])}else{const e=new Float32Array(this.buffer,s,2);t instanceof Ie?(e[0]=t.value[0],e[1]=t.value[1]):(e[0]=t[0],e[1]=t[1])}else t instanceof be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Uint32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Int32Array(this.buffer,s,1)[0]=t.value);else t instanceof be&&(new Float32Array(this.buffer,s,1)[0]=t.value)}getDataValue(t,a,i){let o=this.offset,u=this.typeInfo;for(;a;){if(a instanceof ue){const e=a.index,n=t.evalExpression(e,i);let r=0;if(n instanceof be?r=n.value:console.error('GetDataValue: Invalid index type',e),u instanceof s)o+=r*u.stride,u=u.format;else{const e=t.getTypeName(u);'mat4x4'===e||'mat4x4f'===e||'mat4x4h'===e?(o+=16*r,u=t.getTypeInfo('vec4f')):console.error(`getDataValue: Type ${t.getTypeName(u)} is not an array`)}}else{if(!(a instanceof J))return console.error('GetDataValue: Unknown postfix type',a),null;{const s=a.value;if(u instanceof n){let e=!1;for(const t of u.members)if(t.name===s){o+=t.offset,u=t.type,e=!0;break}if(!e)return console.error(`GetDataValue: Member ${s} not found`),null}else if(u instanceof e){const e=t.getTypeName(u);if('vec2f'===e||'vec3f'===e||'vec4f'===e||'vec2i'===e||'vec3i'===e||'vec4i'===e||'vec2u'===e||'vec3u'===e||'vec4u'===e||'vec2b'===e||'vec3b'===e||'vec4b'===e||'vec2h'===e||'vec3h'===e||'vec4h'===e||'vec2'===e||'vec3'===e||'vec4'===e){if(s.length>0&&s.length<5){let n='f32',r='f';const a=[];for(let t=0;t<s.length;++t){const i=s[t].toLocaleLowerCase();let u=0;if('x'===i||'r'===i)u=0;else if('y'===i||'g'===i)u=1;else if('z'===i||'b'===i)u=2;else{if('w'!==i&&'a'!==i)return console.error(`Unknown member ${s}`),null;u=3}if('vec2f'===e)a.push(new Float32Array(this.buffer,o,2)[u]);else if('vec3f'===e){if(o+12>=this.buffer.byteLength)return console.log('Insufficient buffer data'),null;const e=new Float32Array(this.buffer,o,3);a.push(e[u])}else if('vec4f'===e)a.push(new Float32Array(this.buffer,o,4)[u]);else if('vec2i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,2)[u]);else if('vec3i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,3)[u]);else if('vec4i'===e)n='i32',r='i',a.push(new Int32Array(this.buffer,o,4)[u]);else if('vec2u'===e){n='u32',r='u';const e=new Uint32Array(this.buffer,o,2);a.push(e[u])}else'vec3u'===e?(n='u32',r='u',a.push(new Uint32Array(this.buffer,o,3)[u])):'vec4u'===e&&(n='u32',r='u',a.push(new Uint32Array(this.buffer,o,4)[u]))}return 1===a.length?new be(a[0],t.getTypeInfo(n)):(2===a.length?u=t.getTypeInfo(`vec2${r}`):3===a.length?u=t.getTypeInfo(`vec3${r}`):4===a.length?u=t.getTypeInfo(`vec4${r}`):console.error(`GetDataValue: Invalid vector length ${a.length}`),new Ie(a,u))}return console.error(`GetDataValue: Unknown member ${s}`),null}return console.error(`GetDataValue: Type ${e} is not a struct`),null}}}a=a.postfix}const l=t.getTypeName(u);return'f32'===l?new be(new Float32Array(this.buffer,o,1)[0],u):'i32'===l?new be(new Int32Array(this.buffer,o,1)[0],u):'u32'===l?new be(new Uint32Array(this.buffer,o,1)[0],u):'vec2f'===l?new Ie(new Float32Array(this.buffer,o,2),u):'vec3f'===l?new Ie(new Float32Array(this.buffer,o,3),u):'vec4f'===l?new Ie(new Float32Array(this.buffer,o,4),u):'vec2i'===l?new Ie(new Int32Array(this.buffer,o,2),u):'vec3i'===l?new Ie(new Int32Array(this.buffer,o,3),u):'vec4i'===l?new Ie(new Int32Array(this.buffer,o,4),u):'vec2u'===l?new Ie(new Uint32Array(this.buffer,o,2),u):'vec3u'===l?new Ie(new Uint32Array(this.buffer,o,3),u):'vec4u'===l?new Ie(new Uint32Array(this.buffer,o,4),u):u instanceof r&&'atomic'===u.name?'u32'===u.format.name?new be(new Uint32Array(this.buffer,o,1)[0],u.format):'i32'===u.format.name?new be(new Int32Array(this.buffer,o,1)[0],u.format):(console.error(`GetDataValue: Invalid atomic format ${u.format.name}`),null):new Se(this.buffer,u,o)}toString(){let e='';if(this.typeInfo instanceof s)if('f32'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('i32'===this.typeInfo.format.name){const t=new Int32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('u32'===this.typeInfo.format.name){const t=new Uint32Array(this.buffer,this.offset);e=`[${t[0]}`;for(let n=1;n<t.length;++n)e+=`, ${t[n]}`}else if('vec2f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}]`;for(let n=1;n<t.length/2;++n)e+=`, [${t[2*n]}, ${t[2*n+1]}]`}else if('vec3f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}]`}else if('vec4f'===this.typeInfo.format.name){const t=new Float32Array(this.buffer,this.offset);e=`[${t[0]}, ${t[1]}, ${t[2]}, ${t[3]}]`;for(let n=4;n<t.length;n+=4)e+=`, [${t[n]}, ${t[n+1]}, ${t[n+2]}, ${t[n+3]}]`}else e='[...]';else this.typeInfo instanceof n?e+='{...}':e='[...]';return e}}(e=>{e[e.token=0]='token',e[e.keyword=1]='keyword',e[e.reserved=2]='reserved'})(l||(l={}));class Ee{constructor(e,t,n){this.name=e,this.type=t,this.rule=n}toString(){return this.name}}class Ae{}u=Ae,Ae.none=new Ee('',l.reserved,''),Ae.eof=new Ee('EOF',l.token,''),Ae.reserved={asm:new Ee('asm',l.reserved,'asm'),bf16:new Ee('bf16',l.reserved,'bf16'),do:new Ee('do',l.reserved,'do'),enum:new Ee('enum',l.reserved,'enum'),f16:new Ee('f16',l.reserved,'f16'),f64:new Ee('f64',l.reserved,'f64'),handle:new Ee('handle',l.reserved,'handle'),i8:new Ee('i8',l.reserved,'i8'),i16:new Ee('i16',l.reserved,'i16'),i64:new Ee('i64',l.reserved,'i64'),mat:new Ee('mat',l.reserved,'mat'),premerge:new Ee('premerge',l.reserved,'premerge'),regardless:new Ee('regardless',l.reserved,'regardless'),typedef:new Ee('typedef',l.reserved,'typedef'),u8:new Ee('u8',l.reserved,'u8'),u16:new Ee('u16',l.reserved,'u16'),u64:new Ee('u64',l.reserved,'u64'),unless:new Ee('unless',l.reserved,'unless'),using:new Ee('using',l.reserved,'using'),vec:new Ee('vec',l.reserved,'vec'),void:new Ee('void',l.reserved,'void')},Ae.keywords={array:new Ee('array',l.keyword,'array'),atomic:new Ee('atomic',l.keyword,'atomic'),bool:new Ee('bool',l.keyword,'bool'),f32:new Ee('f32',l.keyword,'f32'),i32:new Ee('i32',l.keyword,'i32'),mat2x2:new Ee('mat2x2',l.keyword,'mat2x2'),mat2x3:new Ee('mat2x3',l.keyword,'mat2x3'),mat2x4:new Ee('mat2x4',l.keyword,'mat2x4'),mat3x2:new Ee('mat3x2',l.keyword,'mat3x2'),mat3x3:new Ee('mat3x3',l.keyword,'mat3x3'),mat3x4:new Ee('mat3x4',l.keyword,'mat3x4'),mat4x2:new Ee('mat4x2',l.keyword,'mat4x2'),mat4x3:new Ee('mat4x3',l.keyword,'mat4x3'),mat4x4:new Ee('mat4x4',l.keyword,'mat4x4'),ptr:new Ee('ptr',l.keyword,'ptr'),sampler:new Ee('sampler',l.keyword,'sampler'),sampler_comparison:new Ee('sampler_comparison',l.keyword,'sampler_comparison'),struct:new Ee('struct',l.keyword,'struct'),texture_1d:new Ee('texture_1d',l.keyword,'texture_1d'),texture_2d:new Ee('texture_2d',l.keyword,'texture_2d'),texture_2d_array:new Ee('texture_2d_array',l.keyword,'texture_2d_array'),texture_3d:new Ee('texture_3d',l.keyword,'texture_3d'),texture_cube:new Ee('texture_cube',l.keyword,'texture_cube'),texture_cube_array:new Ee('texture_cube_array',l.keyword,'texture_cube_array'),texture_multisampled_2d:new Ee('texture_multisampled_2d',l.keyword,'texture_multisampled_2d'),texture_storage_1d:new Ee('texture_storage_1d',l.keyword,'texture_storage_1d'),texture_storage_2d:new Ee('texture_storage_2d',l.keyword,'texture_storage_2d'),texture_storage_2d_array:new Ee('texture_storage_2d_array',l.keyword,'texture_storage_2d_array'),texture_storage_3d:new Ee('texture_storage_3d',l.keyword,'texture_storage_3d'),texture_depth_2d:new Ee('texture_depth_2d',l.keyword,'texture_depth_2d'),texture_depth_2d_array:new Ee('texture_depth_2d_array',l.keyword,'texture_depth_2d_array'),texture_depth_cube:new Ee('texture_depth_cube',l.keyword,'texture_depth_cube'),texture_depth_cube_array:new Ee('texture_depth_cube_array',l.keyword,'texture_depth_cube_array'),texture_depth_multisampled_2d:new Ee('texture_depth_multisampled_2d',l.keyword,'texture_depth_multisampled_2d'),texture_external:new Ee('texture_external',l.keyword,'texture_external'),u32:new Ee('u32',l.keyword,'u32'),vec2:new Ee('vec2',l.keyword,'vec2'),vec3:new Ee('vec3',l.keyword,'vec3'),vec4:new Ee('vec4',l.keyword,'vec4'),bitcast:new Ee('bitcast',l.keyword,'bitcast'),block:new Ee('block',l.keyword,'block'),break:new Ee('break',l.keyword,'break'),case:new Ee('case',l.keyword,'case'),continue:new Ee('continue',l.keyword,'continue'),continuing:new Ee('continuing',l.keyword,'continuing'),default:new Ee('default',l.keyword,'default'),diagnostic:new Ee('diagnostic',l.keyword,'diagnostic'),discard:new Ee('discard',l.keyword,'discard'),else:new Ee('else',l.keyword,'else'),enable:new Ee('enable',l.keyword,'enable'),fallthrough:new Ee('fallthrough',l.keyword,'fallthrough'),false:new Ee('false',l.keyword,'false'),fn:new Ee('fn',l.keyword,'fn'),for:new Ee('for',l.keyword,'for'),function:new Ee('function',l.keyword,'function'),if:new Ee('if',l.keyword,'if'),let:new Ee('let',l.keyword,'let'),const:new Ee('const',l.keyword,'const'),loop:new Ee('loop',l.keyword,'loop'),while:new Ee('while',l.keyword,'while'),private:new Ee('private',l.keyword,'private'),read:new Ee('read',l.keyword,'read'),read_write:new Ee('read_write',l.keyword,'read_write'),return:new Ee('return',l.keyword,'return'),requires:new Ee('requires',l.keyword,'requires'),storage:new Ee('storage',l.keyword,'storage'),switch:new Ee('switch',l.keyword,'switch'),true:new Ee('true',l.keyword,'true'),alias:new Ee('alias',l.keyword,'alias'),type:new Ee('type',l.keyword,'type'),uniform:new Ee('uniform',l.keyword,'uniform'),var:new Ee('var',l.keyword,'var'),override:new Ee('override',l.keyword,'override'),workgroup:new Ee('workgroup',l.keyword,'workgroup'),write:new Ee('write',l.keyword,'write'),r8unorm:new Ee('r8unorm',l.keyword,'r8unorm'),r8snorm:new Ee('r8snorm',l.keyword,'r8snorm'),r8uint:new Ee('r8uint',l.keyword,'r8uint'),r8sint:new Ee('r8sint',l.keyword,'r8sint'),r16uint:new Ee('r16uint',l.keyword,'r16uint'),r16sint:new Ee('r16sint',l.keyword,'r16sint'),r16float:new Ee('r16float',l.keyword,'r16float'),rg8unorm:new Ee('rg8unorm',l.keyword,'rg8unorm'),rg8snorm:new Ee('rg8snorm',l.keyword,'rg8snorm'),rg8uint:new Ee('rg8uint',l.keyword,'rg8uint'),rg8sint:new Ee('rg8sint',l.keyword,'rg8sint'),r32uint:new Ee('r32uint',l.keyword,'r32uint'),r32sint:new Ee('r32sint',l.keyword,'r32sint'),r32float:new Ee('r32float',l.keyword,'r32float'),rg16uint:new Ee('rg16uint',l.keyword,'rg16uint'),rg16sint:new Ee('rg16sint',l.keyword,'rg16sint'),rg16float:new Ee('rg16float',l.keyword,'rg16float'),rgba8unorm:new Ee('rgba8unorm',l.keyword,'rgba8unorm'),rgba8unorm_srgb:new Ee('rgba8unorm_srgb',l.keyword,'rgba8unorm_srgb'),rgba8snorm:new Ee('rgba8snorm',l.keyword,'rgba8snorm'),rgba8uint:new Ee('rgba8uint',l.keyword,'rgba8uint'),rgba8sint:new Ee('rgba8sint',l.keyword,'rgba8sint'),bgra8unorm:new Ee('bgra8unorm',l.keyword,'bgra8unorm'),bgra8unorm_srgb:new Ee('bgra8unorm_srgb',l.keyword,'bgra8unorm_srgb'),rgb10a2unorm:new Ee('rgb10a2unorm',l.keyword,'rgb10a2unorm'),rg11b10float:new Ee('rg11b10float',l.keyword,'rg11b10float'),rg32uint:new Ee('rg32uint',l.keyword,'rg32uint'),rg32sint:new Ee('rg32sint',l.keyword,'rg32sint'),rg32float:new Ee('rg32float',l.keyword,'rg32float'),rgba16uint:new Ee('rgba16uint',l.keyword,'rgba16uint'),rgba16sint:new Ee('rgba16sint',l.keyword,'rgba16sint'),rgba16float:new Ee('rgba16float',l.keyword,'rgba16float'),rgba32uint:new Ee('rgba32uint',l.keyword,'rgba32uint'),rgba32sint:new Ee('rgba32sint',l.keyword,'rgba32sint'),rgba32float:new Ee('rgba32float',l.keyword,'rgba32float'),static_assert:new Ee('static_assert',l.keyword,'static_assert')},Ae.tokens={decimal_float_literal:new Ee('decimal_float_literal',l.token,/((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?[fh]?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+[fh]?)|(-?[0-9]+[fh])/),hex_float_literal:new Ee('hex_float_literal',l.token,/-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+[fh]?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+[fh]?))/),int_literal:new Ee('int_literal',l.token,/-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),uint_literal:new Ee('uint_literal',l.token,/0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),name:new Ee('name',l.token,/[_a-zA-Z][0-9a-zA-Z_]*/),ident:new Ee('ident',l.token,/[_a-zA-Z][0-9a-zA-Z_]*/),and:new Ee('and',l.token,'&'),and_and:new Ee('and_and',l.token,'&&'),arrow:new Ee('arrow ',l.token,'->'),attr:new Ee('attr',l.token,'@'),forward_slash:new Ee('forward_slash',l.token,'/'),bang:new Ee('bang',l.token,'!'),bracket_left:new Ee('bracket_left',l.token,'['),bracket_right:new Ee('bracket_right',l.token,']'),brace_left:new Ee('brace_left',l.token,'{'),brace_right:new Ee('brace_right',l.token,'}'),colon:new Ee('colon',l.token,':'),comma:new Ee('comma',l.token,','),equal:new Ee('equal',l.token,'='),equal_equal:new Ee('equal_equal',l.token,'=='),not_equal:new Ee('not_equal',l.token,'!='),greater_than:new Ee('greater_than',l.token,'>'),greater_than_equal:new Ee('greater_than_equal',l.token,'>='),shift_right:new Ee('shift_right',l.token,'>>'),less_than:new Ee('less_than',l.token,'<'),less_than_equal:new Ee('less_than_equal',l.token,'<='),shift_left:new Ee('shift_left',l.token,'<<'),modulo:new Ee('modulo',l.token,'%'),minus:new Ee('minus',l.token,'-'),minus_minus:new Ee('minus_minus',l.token,'--'),period:new Ee('period',l.token,'.'),plus:new Ee('plus',l.token,'+'),plus_plus:new Ee('plus_plus',l.token,'++'),or:new Ee('or',l.token,'|'),or_or:new Ee('or_or',l.token,'||'),paren_left:new Ee('paren_left',l.token,'('),paren_right:new Ee('paren_right',l.token,')'),semicolon:new Ee('semicolon',l.token,';'),star:new Ee('star',l.token,'*'),tilde:new Ee('tilde',l.token,'~'),underscore:new Ee('underscore',l.token,'_'),xor:new Ee('xor',l.token,'^'),plus_equal:new Ee('plus_equal',l.token,'+='),minus_equal:new Ee('minus_equal',l.token,'-='),times_equal:new Ee('times_equal',l.token,'*='),division_equal:new Ee('division_equal',l.token,'/='),modulo_equal:new Ee('modulo_equal',l.token,'%='),and_equal:new Ee('and_equal',l.token,'&='),or_equal:new Ee('or_equal',l.token,'|='),xor_equal:new Ee('xor_equal',l.token,'^='),shift_right_equal:new Ee('shift_right_equal',l.token,'>>='),shift_left_equal:new Ee('shift_left_equal',l.token,'<<=')},Ae.simpleTokens={'@':u.tokens.attr,'{':u.tokens.brace_left,'}':u.tokens.brace_right,':':u.tokens.colon,',':u.tokens.comma,'(':u.tokens.paren_left,')':u.tokens.paren_right,';':u.tokens.semicolon},Ae.literalTokens={'&':u.tokens.and,'&&':u.tokens.and_and,'->':u.tokens.arrow,'/':u.tokens.forward_slash,'!':u.tokens.bang,'[':u.tokens.bracket_left,']':u.tokens.bracket_right,'=':u.tokens.equal,'==':u.tokens.equal_equal,'!=':u.tokens.not_equal,'>':u.tokens.greater_than,'>=':u.tokens.greater_than_equal,'>>':u.tokens.shift_right,'<':u.tokens.less_than,'<=':u.tokens.less_than_equal,'<<':u.tokens.shift_left,'%':u.tokens.modulo,'-':u.tokens.minus,'--':u.tokens.minus_minus,'.':u.tokens.period,'+':u.tokens.plus,'++':u.tokens.plus_plus,'|':u.tokens.or,'||':u.tokens.or_or,'*':u.tokens.star,'~':u.tokens.tilde,_:u.tokens.underscore,'^':u.tokens.xor,'+=':u.tokens.plus_equal,'-=':u.tokens.minus_equal,'*=':u.tokens.times_equal,'/=':u.tokens.division_equal,'%=':u.tokens.modulo_equal,'&=':u.tokens.and_equal,'|=':u.tokens.or_equal,'^=':u.tokens.xor_equal,'>>=':u.tokens.shift_right_equal,'<<=':u.tokens.shift_left_equal},Ae.regexTokens={decimal_float_literal:u.tokens.decimal_float_literal,hex_float_literal:u.tokens.hex_float_literal,int_literal:u.tokens.int_literal,uint_literal:u.tokens.uint_literal,ident:u.tokens.ident},Ae.storage_class=[u.keywords.function,u.keywords.private,u.keywords.workgroup,u.keywords.uniform,u.keywords.storage],Ae.access_mode=[u.keywords.read,u.keywords.write,u.keywords.read_write],Ae.sampler_type=[u.keywords.sampler,u.keywords.sampler_comparison],Ae.sampled_texture_type=[u.keywords.texture_1d,u.keywords.texture_2d,u.keywords.texture_2d_array,u.keywords.texture_3d,u.keywords.texture_cube,u.keywords.texture_cube_array],Ae.multisampled_texture_type=[u.keywords.texture_multisampled_2d],Ae.storage_texture_type=[u.keywords.texture_storage_1d,u.keywords.texture_storage_2d,u.keywords.texture_storage_2d_array,u.keywords.texture_storage_3d],Ae.depth_texture_type=[u.keywords.texture_depth_2d,u.keywords.texture_depth_2d_array,u.keywords.texture_depth_cube,u.keywords.texture_depth_cube_array,u.keywords.texture_depth_multisampled_2d],Ae.texture_external_type=[u.keywords.texture_external],Ae.any_texture_type=[...u.sampled_texture_type,...u.multisampled_texture_type,...u.storage_texture_type,...u.depth_texture_type,...u.texture_external_type],Ae.texel_format=[u.keywords.r8unorm,u.keywords.r8snorm,u.keywords.r8uint,u.keywords.r8sint,u.keywords.r16uint,u.keywords.r16sint,u.keywords.r16float,u.keywords.rg8unorm,u.keywords.rg8snorm,u.keywords.rg8uint,u.keywords.rg8sint,u.keywords.r32uint,u.keywords.r32sint,u.keywords.r32float,u.keywords.rg16uint,u.keywords.rg16sint,u.keywords.rg16float,u.keywords.rgba8unorm,u.keywords.rgba8unorm_srgb,u.keywords.rgba8snorm,u.keywords.rgba8uint,u.keywords.rgba8sint,u.keywords.bgra8unorm,u.keywords.bgra8unorm_srgb,u.keywords.rgb10a2unorm,u.keywords.rg11b10float,u.keywords.rg32uint,u.keywords.rg32sint,u.keywords.rg32float,u.keywords.rgba16uint,u.keywords.rgba16sint,u.keywords.rgba16float,u.keywords.rgba32uint,u.keywords.rgba32sint,u.keywords.rgba32float],Ae.const_literal=[u.tokens.int_literal,u.tokens.uint_literal,u.tokens.decimal_float_literal,u.tokens.hex_float_literal,u.keywords.true,u.keywords.false],Ae.literal_or_ident=[u.tokens.ident,u.tokens.int_literal,u.tokens.uint_literal,u.tokens.decimal_float_literal,u.tokens.hex_float_literal,u.tokens.name],Ae.element_count_expression=[u.tokens.int_literal,u.tokens.uint_literal,u.tokens.ident],Ae.template_types=[u.keywords.vec2,u.keywords.vec3,u.keywords.vec4,u.keywords.mat2x2,u.keywords.mat2x3,u.keywords.mat2x4,u.keywords.mat3x2,u.keywords.mat3x3,u.keywords.mat3x4,u.keywords.mat4x2,u.keywords.mat4x3,u.keywords.mat4x4,u.keywords.atomic,u.keywords.bitcast,...u.any_texture_type],Ae.attribute_name=[u.tokens.ident,u.keywords.block,u.keywords.diagnostic],Ae.assignment_operators=[u.tokens.equal,u.tokens.plus_equal,u.tokens.minus_equal,u.tokens.times_equal,u.tokens.division_equal,u.tokens.modulo_equal,u.tokens.and_equal,u.tokens.or_equal,u.tokens.xor_equal,u.tokens.shift_right_equal,u.tokens.shift_left_equal],Ae.increment_operators=[u.tokens.plus_plus,u.tokens.minus_minus];class $e{constructor(e,t,n){this.type=e,this.lexeme=t,this.line=n}toString(){return this.lexeme}isTemplateType(){return-1!=Ae.template_types.indexOf(this.type)}isArrayType(){return this.type==Ae.keywords.array}isArrayOrTemplateType(){return this.isArrayType()||this.isTemplateType()}}class Ve{constructor(e){this._tokens=[],this._start=0,this._current=0,this._line=1,this._source=null!=e?e:''}scanTokens(){for(;!this._isAtEnd();)if(this._start=this._current,!this.scanToken())throw`Invalid syntax at line ${this._line}`;return this._tokens.push(new $e(Ae.eof,'',this._line)),this._tokens}scanToken(){let e=this._advance();if('\\n'==e)return this._line++,!0;if(this._isWhitespace(e))return!0;if('/'==e){if('/'==this._peekAhead()){for(;'\\n'!=e;){if(this._isAtEnd())return!0;e=this._advance()}return this._line++,!0}if('*'==this._peekAhead()){this._advance();let t=1;for(;t>0;){if(this._isAtEnd())return!0;if(e=this._advance(),'\\n'==e)this._line++;else if('*'==e){if('/'==this._peekAhead()&&(this._advance(),t--,0==t))return!0}else'/'==e&&'*'==this._peekAhead()&&(this._advance(),t++)}return!0}}const t=Ae.simpleTokens[e];if(t)return this._addToken(t),!0;let n=Ae.none;const s=this._isAlpha(e),r='_'===e;if(this._isAlphaNumeric(e)){let t=this._peekAhead();for(;this._isAlphaNumeric(t);)e+=this._advance(),t=this._peekAhead()}if(s){const t=Ae.keywords[e];if(t)return this._addToken(t),!0}if(s||r)return this._addToken(Ae.tokens.ident),!0;for(;;){let t=this._findType(e);const s=this._peekAhead();if('-'==e&&this._tokens.length>0){if('='==s)return this._current++,e+=s,this._addToken(Ae.tokens.minus_equal),!0;if('-'==s)return this._current++,e+=s,this._addToken(Ae.tokens.minus_minus),!0;const n=this._tokens.length-1;if((-1!=Ae.literal_or_ident.indexOf(this._tokens[n].type)||this._tokens[n].type==Ae.tokens.paren_right)&&'>'!=s)return this._addToken(t),!0}if('>'==e&&('>'==s||'='==s)){let e=!1,n=this._tokens.length-1;for(let t=0;t<5&&n>=0&&-1===Ae.assignment_operators.indexOf(this._tokens[n].type);++t,--n)if(this._tokens[n].type===Ae.tokens.less_than){n>0&&this._tokens[n-1].isArrayOrTemplateType()&&(e=!0);break}if(e)return this._addToken(t),!0}if(t===Ae.none){let s=e,r=0;const a=2;for(let e=0;e<a;++e)if(s+=this._peekAhead(e),t=this._findType(s),t!==Ae.none){r=e;break}if(t===Ae.none)return n!==Ae.none&&(this._current--,this._addToken(n),!0);e=s,this._current+=r+1}if(n=t,this._isAtEnd())break;e+=this._advance()}return n!==Ae.none&&(this._addToken(n),!0)}_findType(e){for(const t in Ae.regexTokens){const n=Ae.regexTokens[t];if(this._match(e,n.rule))return n}const t=Ae.literalTokens[e];return t||Ae.none}_match(e,t){const n=t.exec(e);return n&&0==n.index&&n[0]==e}_isAtEnd(){return this._current>=this._source.length}_isAlpha(e){return e>='a'&&e<='z'||e>='A'&&e<='Z'}_isAlphaNumeric(e){return e>='a'&&e<='z'||e>='A'&&e<='Z'||'_'==e||e>='0'&&e<='9'}_isWhitespace(e){return' '==e||'\\t'==e||'\\r'==e}_advance(e=0){let t=this._source[this._current];return e=e||0,e++,this._current+=e,t}_peekAhead(e=0){return e=e||0,this._current+e>=this._source.length?'\\0':this._source[this._current+e]}_addToken(e){const t=this._source.substring(this._start,this._current);this._tokens.push(new $e(e,t,this._line))}}class Ne{constructor(e){this.resources=null,this.inUse=!1,this.info=null,this.node=e}}class Le{constructor(e,t){this.align=e,this.size=t}}class Oe{constructor(){this.uniforms=[],this.storage=[],this.textures=[],this.samplers=[],this.aliases=[],this.overrides=[],this.structs=[],this.entry=new v,this.functions=[],this._types=new Map,this._functions=new Map}_isStorageTexture(e){return'texture_storage_1d'==e.name||'texture_storage_2d'==e.name||'texture_storage_2d_array'==e.name||'texture_storage_3d'==e.name}updateAST(e){for(const t of e)t instanceof k&&this._functions.set(t.name,new Ne(t));for(const t of e)if(t instanceof Z){const e=this.getTypeInfo(t,null);e instanceof n&&this.structs.push(e)}for(const t of e)if(t instanceof R)this.aliases.push(this._getAliasInfo(t));else if(t instanceof $){const e=t,n=this._getAttributeNum(e.attributes,'id',0),s=null!=e.type?this.getTypeInfo(e.type,e.attributes):null;this.overrides.push(new m(e.name,s,e.attributes,n))}else if(this._isUniformVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=new c(e.name,r,n,s,e.attributes,a.Uniform,e.access);this.uniforms.push(i)}else if(this._isStorageVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=this._isStorageTexture(r),o=new c(e.name,r,n,s,e.attributes,i?a.StorageTexture:a.Storage,e.access);this.storage.push(o)}else if(this._isTextureVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=this._isStorageTexture(r),o=new c(e.name,r,n,s,e.attributes,i?a.StorageTexture:a.Texture,e.access);i?this.storage.push(o):this.textures.push(o)}else if(this._isSamplerVar(t)){const e=t,n=this._getAttributeNum(e.attributes,'group',0),s=this._getAttributeNum(e.attributes,'binding',0),r=this.getTypeInfo(e.type,e.attributes),i=new c(e.name,r,n,s,e.attributes,a.Sampler,e.access);this.samplers.push(i)}else if(t instanceof k){const e=this._getAttribute(t,'vertex'),n=this._getAttribute(t,'fragment'),s=this._getAttribute(t,'compute'),r=e||n||s,a=new _(t.name,null==r?void 0:r.name,t.attributes);a.attributes=t.attributes,a.startLine=t.startLine,a.endLine=t.endLine,this.functions.push(a),this._functions.get(t.name).info=a,r&&(this._functions.get(t.name).inUse=!0,a.inUse=!0,a.resources=this._findResources(t,!!r),a.inputs=this._getInputs(t.args),a.outputs=this._getOutputs(t.returnType),this.entry[r.name].push(a)),a.arguments=t.args.map((e=>new d(e.name,this.getTypeInfo(e.type,e.attributes),e.attributes))),a.returnType=t.returnType?this.getTypeInfo(t.returnType,t.attributes):null}else;for(const e of this._functions.values())e.info&&(e.info.inUse=e.inUse,this._addCalls(e.node,e.info.calls));for(const e of this._functions.values())e.node.search((t=>{var n;if('varExpr'===t.astNodeType){const s=t;for(const t of this.overrides)s.name==t.name&&(null===(n=e.info)||void 0===n||n.overrides.push(t))}}));for(const e of this.uniforms)this._markStructsInUse(e.type);for(const e of this.storage)this._markStructsInUse(e.type)}getStructInfo(e){for(const t of this.structs)if(t.name==e)return t;return null}getOverrideInfo(e){for(const t of this.overrides)if(t.name==e)return t;return null}_markStructsInUse(e){if(e)if(e.isStruct){if(e.inUse=!0,e.members)for(const t of e.members)this._markStructsInUse(t.type)}else if(e.isArray)this._markStructsInUse(e.format);else if(e.isTemplate)e.format&&this._markStructsInUse(e.format);else{const t=this._getAlias(e.name);t&&this._markStructsInUse(t)}}_addCalls(e,t){var n;for(const s of e.calls){const e=null===(n=this._functions.get(s.name))||void 0===n?void 0:n.info;e&&t.add(e)}}findResource(e,t){for(const n of this.uniforms)if(n.group==e&&n.binding==t)return n;for(const n of this.storage)if(n.group==e&&n.binding==t)return n;for(const n of this.textures)if(n.group==e&&n.binding==t)return n;for(const n of this.samplers)if(n.group==e&&n.binding==t)return n;return null}_findResource(e){for(const t of this.uniforms)if(t.name==e)return t;for(const t of this.storage)if(t.name==e)return t;for(const t of this.textures)if(t.name==e)return t;for(const t of this.samplers)if(t.name==e)return t;return null}_markStructsFromAST(e){const t=this.getTypeInfo(e,null);this._markStructsInUse(t)}_findResources(e,t){const n=[],s=this,r=[];return e.search((a=>{if(a instanceof y)r.push({});else if(a instanceof w)r.pop();else if(a instanceof A){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof ee){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type)}else if(a instanceof V){const e=a;t&&null!==e.type&&this._markStructsFromAST(e.type),r.length>0&&(r[r.length-1][e.name]=e)}else if(a instanceof ne){const e=a;if(r.length>0){if(r[r.length-1][e.name])return}const t=s._findResource(e.name);t&&n.push(t)}else if(a instanceof te){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}else if(a instanceof D){const r=a,i=s._functions.get(r.name);i&&(t&&(i.inUse=!0),e.calls.add(i.node),null===i.resources&&(i.resources=s._findResources(i.node,t)),n.push(...i.resources))}})),[...new Map(n.map((e=>[e.name,e]))).values()]}getBindGroups(){const e=[];function t(t,n){t>=e.length&&(e.length=t+1),void 0===e[t]&&(e[t]=[]),n>=e[t].length&&(e[t].length=n+1)}for(const n of this.uniforms){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.storage){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.textures){t(n.group,n.binding);e[n.group][n.binding]=n}for(const n of this.samplers){t(n.group,n.binding);e[n.group][n.binding]=n}return e}_getOutputs(e,t=void 0){if(void 0===t&&(t=[]),e instanceof Z)this._getStructOutputs(e,t);else{const n=this._getOutputInfo(e);null!==n&&t.push(n)}return t}_getStructOutputs(e,t){for(const n of e.members)if(n.type instanceof Z)this._getStructOutputs(n.type,t);else{const e=this._getAttribute(n,'location')||this._getAttribute(n,'builtin');if(null!==e){const s=this.getTypeInfo(n.type,n.type.attributes),r=this._parseInt(e.value),a=new p(n.name,s,e.name,r);t.push(a)}}}_getOutputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this.getTypeInfo(e,e.attributes),s=this._parseInt(t.value);return new p('',n,t.name,s)}return null}_getInputs(e,t=void 0){void 0===t&&(t=[]);for(const n of e)if(n.type instanceof Z)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}return t}_getStructInputs(e,t){for(const n of e.members)if(n.type instanceof Z)this._getStructInputs(n.type,t);else{const e=this._getInputInfo(n);null!==e&&t.push(e)}}_getInputInfo(e){const t=this._getAttribute(e,'location')||this._getAttribute(e,'builtin');if(null!==t){const n=this._getAttribute(e,'interpolation'),s=this.getTypeInfo(e.type,e.attributes),r=this._parseInt(t.value),a=new f(e.name,s,t.name,r);return null!==n&&(a.interpolation=this._parseString(n.value)),a}return null}_parseString(e){return e instanceof Array&&(e=e[0]),e}_parseInt(e){e instanceof Array&&(e=e[0]);const t=parseInt(e);return isNaN(t)?e:t}_getAlias(e){for(const t of this.aliases)if(t.name==e)return t.type;return null}_getAliasInfo(e){return new h(e.name,this.getTypeInfo(e.type,null))}getTypeInfo(a,i=null){if(this._types.has(a))return this._types.get(a);if(a instanceof Y){const e=a,t=e.format?this.getTypeInfo(e.format,e.attributes):null,n=new s(e.name,i);return n.format=t,n.count=e.count,this._types.set(a,n),this._updateTypeInfo(n),n}if(a instanceof Z){const e=a,s=new n(e.name,i);s.startLine=e.startLine,s.endLine=e.endLine;for(const n of e.members){const e=this.getTypeInfo(n.type,n.attributes);s.members.push(new t(n.name,e,n.attributes))}return this._types.set(a,s),this._updateTypeInfo(s),s}if(a instanceof K){const t=a,n=t.format instanceof X,s=t.format?n?this.getTypeInfo(t.format,null):new e(t.format,null):null,o=new r(t.name,s,i,t.access);return this._types.set(a,o),this._updateTypeInfo(o),o}if(a instanceof j){const e=a,t=e.format?this.getTypeInfo(e.format,null):null,n=new r(e.name,t,i,e.access);return this._types.set(a,n),this._updateTypeInfo(n),n}const o=new e(a.name,i);return this._types.set(a,o),this._updateTypeInfo(o),o}_updateTypeInfo(e){var t,r,a;const i=this._getTypeSize(e);if(e.size=null!==(t=null==i?void 0:i.size)&&void 0!==t?t:0,e instanceof s&&e.format){const t=this._getTypeSize(e.format);e.stride=Math.max(null!==(r=null==t?void 0:t.size)&&void 0!==r?r:0,null!==(a=null==t?void 0:t.align)&&void 0!==a?a:0),this._updateTypeInfo(e.format)}e instanceof n&&this._updateStructInfo(e)}_updateStructInfo(e){var t;let n=0,s=0,r=0,a=0;for(let i=0,o=e.members.length;i<o;++i){const o=e.members[i],u=this._getTypeSize(o);if(!u)continue;null!==(t=this._getAlias(o.type.name))&&void 0!==t||o.type;const l=u.align,c=u.size;n=this._roundUp(l,n+s),s=c,r=n,a=Math.max(a,l),o.offset=n,o.size=c,this._updateTypeInfo(o.type)}e.size=this._roundUp(a,r+s),e.align=a}_getTypeSize(r){var a,i;if(null==r)return null;const o=this._getAttributeNum(r.attributes,'size',0),u=this._getAttributeNum(r.attributes,'align',0);if(r instanceof t&&(r=r.type),r instanceof e){const e=this._getAlias(r.name);null!==e&&(r=e)}{const e=Oe._typeInfo[r.name];if(void 0!==e){const t='f16'===(null===(a=r.format)||void 0===a?void 0:a.name)?2:1;return new Le(Math.max(u,e.align/t),Math.max(o,e.size/t))}}{const e=Oe._typeInfo[r.name.substring(0,r.name.length-1)];if(e){const t='h'===r.name[r.name.length-1]?2:1;return new Le(Math.max(u,e.align/t),Math.max(o,e.size/t))}}if(r instanceof s){let e=r,t=8,n=8;const s=this._getTypeSize(e.format);null!==s&&(n=s.size,t=s.align);return n=e.count*this._getAttributeNum(null!==(i=null==r?void 0:r.attributes)&&void 0!==i?i:null,'stride',this._roundUp(t,n)),o&&(n=o),new Le(Math.max(u,t),Math.max(o,n))}if(r instanceof n){let e=0,t=0,n=0,s=0,a=0;for(const t of r.members){const r=this._getTypeSize(t.type);null!==r&&(e=Math.max(r.align,e),n=this._roundUp(r.align,n+s),s=r.size,a=n)}return t=this._roundUp(e,a+s),new Le(Math.max(u,e),Math.max(o,t))}return null}_isUniformVar(e){return e instanceof A&&'uniform'==e.storage}_isStorageVar(e){return e instanceof A&&'storage'==e.storage}_isTextureVar(e){return e instanceof A&&null!==e.type&&-1!=Oe._textureTypes.indexOf(e.type.name)}_isSamplerVar(e){return e instanceof A&&null!==e.type&&-1!=Oe._samplerTypes.indexOf(e.type.name)}_getAttribute(e,t){const n=e;if(!n||!n.attributes)return null;const s=n.attributes;for(let e of s)if(e.name==t)return e;return null}_getAttributeNum(e,t,n){if(null===e)return n;for(let s of e)if(s.name==t){let e=null!==s&&null!==s.value?s.value:n;return e instanceof Array&&(e=e[0]),'number'==typeof e?e:'string'==typeof e?parseInt(e):n}return n}_roundUp(e,t){return Math.ceil(t/e)*e}}Oe._typeInfo={f16:{align:2,size:2},i32:{align:4,size:4},u32:{align:4,size:4},f32:{align:4,size:4},atomic:{align:4,size:4},vec2:{align:8,size:8},vec3:{align:16,size:12},vec4:{align:16,size:16},mat2x2:{align:8,size:16},mat3x2:{align:8,size:24},mat4x2:{align:8,size:32},mat2x3:{align:16,size:32},mat3x3:{align:16,size:48},mat4x3:{align:16,size:64},mat2x4:{align:16,size:32},mat3x4:{align:16,size:48},mat4x4:{align:16,size:64}},Oe._textureTypes=Ae.any_texture_type.map((e=>e.name)),Oe._samplerTypes=Ae.sampler_type.map((e=>e.name));class De{constructor(e,t,n){this.name=e,this.value=t,this.node=n}clone(){return new De(this.name,this.value,this.node)}}class Ce{constructor(e){this.name=e.name,this.node=e}clone(){return new Ce(this.node)}}class Me{constructor(e){this.parent=null,this.variables=new Map,this.functions=new Map,this.currentFunctionName='',e&&(this.parent=e,this.currentFunctionName=e.currentFunctionName)}getVariable(e){var t;return this.variables.has(e)?null!==(t=this.variables.get(e))&&void 0!==t?t:null:this.parent?this.parent.getVariable(e):null}getFunction(e){var t;return this.functions.has(e)?null!==(t=this.functions.get(e))&&void 0!==t?t:null:this.parent?this.parent.getFunction(e):null}createVariable(e,t,n){this.variables.set(e,new De(e,t,null!=n?n:null))}setVariable(e,t,n){const s=this.getVariable(e);null!==s?s.value=t:this.createVariable(e,t,n)}getVariableValue(e){var t;const n=this.getVariable(e);return null!==(t=null==n?void 0:n.value)&&void 0!==t?t:null}clone(){return new Me(this)}}class Fe{evalExpression(e,t){return null}getTypeName(e){return''}getTypeInfo(e){return null}getVariableName(e,t){return''}}class Ue{constructor(e){this.exec=e}getTypeInfo(e){return this.exec.getTypeInfo(e)}All(e,t){const n=this.exec.evalExpression(e.args[0],t);let s=!0;if(n instanceof Ie)return n.value.forEach((e=>{e||(s=!1)})),new be(s?1:0,this.getTypeInfo('bool'));throw new Error(`All() expects a vector argument. Line ${e.line}`)}Any(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){const e=n.value.some((e=>e));return new be(e?1:0,this.getTypeInfo('bool'))}throw new Error(`Any() expects a vector argument. Line ${e.line}`)}Select(e,t){const n=this.exec.evalExpression(e.args[2],t);if(!(n instanceof be))throw new Error(`Select() expects a bool condition. Line ${e.line}`);return n.value?this.exec.evalExpression(e.args[1],t):this.exec.evalExpression(e.args[0],t)}ArrayLength(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.evalExpression(n,t);if(s instanceof Se&&0===s.typeInfo.size){const e=s.typeInfo,t=s.buffer.byteLength/e.stride;return new be(t,this.getTypeInfo('u32'))}return new be(s.typeInfo.size,this.getTypeInfo('u32'))}Abs(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.abs(e))),n.typeInfo);const s=n;return new be(Math.abs(s.value),s.typeInfo)}Acos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.acos(e))),n.typeInfo);const s=n;return new be(Math.acos(s.value),n.typeInfo)}Acosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.acosh(e))),n.typeInfo);const s=n;return new be(Math.acosh(s.value),n.typeInfo)}Asin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.asin(e))),n.typeInfo);const s=n;return new be(Math.asin(s.value),n.typeInfo)}Asinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.asinh(e))),n.typeInfo);const s=n;return new be(Math.asinh(s.value),n.typeInfo)}Atan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.atan(e))),n.typeInfo);const s=n;return new be(Math.atan(s.value),n.typeInfo)}Atanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.atanh(e))),n.typeInfo);const s=n;return new be(Math.atanh(s.value),n.typeInfo)}Atan2(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.atan2(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.atan2(r.value,a.value),n.typeInfo)}Ceil(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.ceil(e))),n.typeInfo);const s=n;return new be(Math.ceil(s.value),n.typeInfo)}_clamp(e,t,n){return Math.min(Math.max(e,t),n)}Clamp(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return new Ie(n.value.map(((e,t)=>this._clamp(e,s.value[t],r.value[t]))),n.typeInfo);const a=n,i=s,o=r;return new be(this._clamp(a.value,i.value,o.value),n.typeInfo)}Cos(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.cos(e))),n.typeInfo);const s=n;return new be(Math.cos(s.value),n.typeInfo)}Cosh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.cosh(e))),n.typeInfo);const s=n;return new be(Math.cos(s.value),n.typeInfo)}CountLeadingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.clz32(e))),n.typeInfo);const s=n;return new be(Math.clz32(s.value),n.typeInfo)}_countOneBits(e){let t=0;for(;0!==e;)1&e&&t++,e>>=1;return t}CountOneBits(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._countOneBits(e))),n.typeInfo);const s=n;return new be(this._countOneBits(s.value),n.typeInfo)}_countTrailingZeros(e){if(0===e)return 32;let t=0;for(;!(1&e);)e>>=1,t++;return t}CountTrailingZeros(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._countTrailingZeros(e))),n.typeInfo);const s=n;return new be(this._countTrailingZeros(s.value),n.typeInfo)}Cross(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){if(3!==n.value.length||3!==s.value.length)return console.error(`Cross() expects 3D vectors. Line ${e.line}`),null;const t=n.value,r=s.value;return new Ie([t[1]*r[2]-r[1]*t[2],t[2]*r[0]-r[2]*t[0],t[0]*r[1]-r[0]*t[1]],n.typeInfo)}return console.error(`Cross() expects vector arguments. Line ${e.line}`),null}Degrees(e,t){const n=this.exec.evalExpression(e.args[0],t),s=180/Math.PI;if(n instanceof Ie)return new Ie(n.value.map((e=>e*s)),n.typeInfo);return new be(n.value*s,n.typeInfo)}Determinant(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Te){const e=n.value,t=this.exec.getTypeName(n.typeInfo),s=t.endsWith('h')?this.getTypeInfo('f16'):this.getTypeInfo('f32');if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t)return new be(e[0]*e[3]-e[1]*e[2],s);if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t)return new be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t)console.error(`TODO: Determinant for ${t}`);else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t)console.error(`TODO: Determinant for ${t}`);else{if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t)return new be(e[0]*(e[4]*e[8]-e[5]*e[7])-e[1]*(e[3]*e[8]-e[5]*e[6])+e[2]*(e[3]*e[7]-e[4]*e[6]),s);'mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t||'mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t||'mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t?console.error(`TODO: Determinant for ${t}`):'mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t||console.error(`TODO: Determinant for ${t}`)}}return console.error(`Determinant expects a matrix argument. Line ${e.line}`),null}Distance(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){let e=0;for(let t=0;t<n.value.length;++t)e+=(n.value[t]-s.value[t])*(n.value[t]-s.value[t]);return new be(Math.sqrt(e),this.getTypeInfo('f32'))}const r=n,a=s;return new be(Math.abs(r.value-a.value),n.typeInfo)}_dot(e,t){let n=0;for(let s=0;s<e.length;++s)n+=t[s]*e[s];return n}Dot(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);return n instanceof Ie&&s instanceof Ie?new be(this._dot(n.value,s.value),this.getTypeInfo('f32')):(console.error(`Dot() expects vector arguments. Line ${e.line}`),null)}Dot4U8Packed(e,t){return console.error(`TODO: dot4U8Packed. Line ${e.line}`),null}Dot4I8Packed(e,t){return console.error(`TODO: dot4I8Packed. Line ${e.line}`),null}Exp(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.exp(e))),n.typeInfo);const s=n;return new be(Math.exp(s.value),n.typeInfo)}Exp2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.pow(2,e))),n.typeInfo);const s=n;return new be(Math.pow(2,s.value),n.typeInfo)}ExtractBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if('u32'!==s.typeInfo.name&&'x32'!==s.typeInfo.name)return console.error(`ExtractBits() expects an i32 offset argument. Line ${e.line}`),null;if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`ExtractBits() expects an i32 count argument. Line ${e.line}`),null;const a=s.value,i=r.value;if(n instanceof Ie)return new Ie(n.value.map((e=>e>>a&(1<<i)-1)),n.typeInfo);if('i32'!==n.typeInfo.name&&'x32'!==n.typeInfo.name)return console.error(`ExtractBits() expects an i32 argument. Line ${e.line}`),null;const o=n.value;return new be(o>>a&(1<<i)-1,this.getTypeInfo('i32'))}FaceForward(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie){const e=this._dot(s.value,r.value);return new Ie(e<0?n.value:n.value.map((e=>-e)),n.typeInfo)}return console.error(`FaceForward() expects vector arguments. Line ${e.line}`),null}_firstLeadingBit(e){return 0===e?-1:31-Math.clz32(e)}FirstLeadingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._firstLeadingBit(e))),n.typeInfo);const s=n;return new be(this._firstLeadingBit(s.value),n.typeInfo)}_firstTrailingBit(e){return 0===e?-1:Math.log2(e&-e)}FirstTrailingBit(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>this._firstTrailingBit(e))),n.typeInfo);const s=n;return new be(this._firstTrailingBit(s.value),n.typeInfo)}Floor(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.floor(e))),n.typeInfo);const s=n;return new be(Math.floor(s.value),n.typeInfo)}Fma(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return n.value.length!==s.value.length||n.value.length!==r.value.length?(console.error(`Fma() expects vectors of the same length. Line ${e.line}`),null):new Ie(n.value.map(((e,t)=>e*s.value[t]+r.value[t])),n.typeInfo);const a=n,i=s,o=r;return new be(a.value*i.value+o.value,a.typeInfo)}Fract(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e-Math.floor(e))),n.typeInfo);const s=n;return new be(s.value-Math.floor(s.value),n.typeInfo)}Frexp(e,t){return console.error(`TODO: frexp. Line ${e.line}`),null}InsertBits(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t),a=this.exec.evalExpression(e.args[3],t);if('u32'!==r.typeInfo.name&&'x32'!==r.typeInfo.name)return console.error(`InsertBits() expects an i32 offset argument. Line ${e.line}`),null;const i=r.value,o=(1<<a.value)-1<<i,u=~o;if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>e&u|s.value[t]<<i&o)),n.typeInfo);const l=n.value,c=s.value;return new be(l&u|c<<i&o,n.typeInfo)}InverseSqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>1/Math.sqrt(e))),n.typeInfo);const s=n;return new be(1/Math.sqrt(s.value),n.typeInfo)}Ldexp(e,t){return console.error(`TODO: ldexp. Line ${e.line}`),null}Length(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){let e=0;return n.value.forEach((t=>{e+=t*t})),new be(Math.sqrt(e),this.getTypeInfo('f32'))}const s=n;return new be(Math.abs(s.value),n.typeInfo)}Log(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.log(e))),n.typeInfo);const s=n;return new be(Math.log(s.value),n.typeInfo)}Log2(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.log2(e))),n.typeInfo);const s=n;return new be(Math.log2(s.value),n.typeInfo)}Max(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.max(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.max(r.value,a.value),n.typeInfo)}Min(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.min(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.min(r.value,a.value),n.typeInfo)}Mix(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof Ie)return new Ie(n.value.map(((e,t)=>n.value[t]*(1-r.value[t])+s.value[t]*r.value[t])),n.typeInfo);const a=s,i=r;return new be(n.value*(1-i.value)+a.value*i.value,n.typeInfo)}Modf(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>e%s.value[t])),n.typeInfo);const r=s;return new be(n.value%r.value,n.typeInfo)}Normalize(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie){const s=this.Length(e,t).value;return new Ie(n.value.map((e=>e/s)),n.typeInfo)}return console.error(`Normalize() expects a vector argument. Line ${e.line}`),null}Pow(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie)return new Ie(n.value.map(((e,t)=>Math.pow(e,s.value[t]))),n.typeInfo);const r=n,a=s;return new be(Math.pow(r.value,a.value),n.typeInfo)}QuantizeToF16(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e)),n.typeInfo);return new be(n.value,n.typeInfo)}Radians(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>e*Math.PI/180)),n.typeInfo);return new be(n.value*Math.PI/180,n.typeInfo)}Reflect(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(n instanceof Ie&&s instanceof Ie){const e=this._dot(n.value,s.value);return new Ie(n.value.map(((t,n)=>t-2*e*s.value[n])),n.typeInfo)}return console.error(`Reflect() expects vector arguments. Line ${e.line}`),null}Refract(e,t){let n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(n instanceof Ie&&s instanceof Ie&&r instanceof be){const e=this._dot(s.value,n.value);return new Ie(n.value.map(((t,n)=>{const a=1-r.value*r.value*(1-e*e);if(a<0)return 0;const i=Math.sqrt(a);return r.value*t-(r.value*e+i)*s.value[n]})),n.typeInfo)}return console.error(`Refract() expects vector arguments and a scalar argument. Line ${e.line}`),null}ReverseBits(e,t){return console.error(`TODO: reverseBits. Line ${e.line}`),null}Round(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.round(e))),n.typeInfo);const s=n;return new be(Math.round(s.value),n.typeInfo)}Saturate(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.min(Math.max(e,0),1))),n.typeInfo);const s=n;return new be(Math.min(Math.max(s.value,0),1),n.typeInfo)}Sign(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sign(e))),n.typeInfo);const s=n;return new be(Math.sign(s.value),n.typeInfo)}Sin(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sin(e))),n.typeInfo);const s=n;return new be(Math.sin(s.value),n.typeInfo)}Sinh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sinh(e))),n.typeInfo);const s=n;return new be(Math.sinh(s.value),n.typeInfo)}_smoothstep(e,t,n){const s=Math.min(Math.max((n-e)/(t-e),0),1);return s*s*(3-2*s)}SmoothStep(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t);if(r instanceof Ie&&n instanceof Ie&&s instanceof Ie)return new Ie(r.value.map(((e,t)=>this._smoothstep(n.value[t],s.value[t],e))),r.typeInfo);const a=n,i=s,o=r;return new be(this._smoothstep(a.value,i.value,o.value),r.typeInfo)}Sqrt(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.sqrt(e))),n.typeInfo);const s=n;return new be(Math.sqrt(s.value),n.typeInfo)}Step(e,t){const n=this.exec.evalExpression(e.args[0],t),s=this.exec.evalExpression(e.args[1],t);if(s instanceof Ie&&n instanceof Ie)return new Ie(s.value.map(((e,t)=>e<n.value[t]?0:1)),s.typeInfo);const r=n;return new be(s.value<r.value?0:1,r.typeInfo)}Tan(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.tan(e))),n.typeInfo);const s=n;return new be(Math.tan(s.value),n.typeInfo)}Tanh(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.tanh(e))),n.typeInfo);const s=n;return new be(Math.tanh(s.value),n.typeInfo)}_getTransposeType(e){const t=this.exec.getTypeName(e);return'mat2x2f'===t||'mat2x2h'===t?e:'mat2x3f'===t?this.getTypeInfo('mat3x2f'):'mat2x3h'===t?this.getTypeInfo('mat3x2h'):'mat2x4f'===t?this.getTypeInfo('mat4x2f'):'mat2x4h'===t?this.getTypeInfo('mat4x2h'):'mat3x2f'===t?this.getTypeInfo('mat2x3f'):'mat3x2h'===t?this.getTypeInfo('mat2x3h'):'mat3x3f'===t||'mat3x3h'===t?e:'mat3x4f'===t?this.getTypeInfo('mat4x3f'):'mat3x4h'===t?this.getTypeInfo('mat4x3h'):'mat4x2f'===t?this.getTypeInfo('mat2x4f'):'mat4x2h'===t?this.getTypeInfo('mat2x4h'):'mat4x3f'===t?this.getTypeInfo('mat3x4f'):'mat4x3h'===t?this.getTypeInfo('mat3x4h'):('mat4x4f'===t||'mat4x4h'===t||console.error(`Invalid matrix type ${t}`),e)}Transpose(e,t){const n=this.exec.evalExpression(e.args[0],t);if(!(n instanceof Te))return console.error(`Transpose() expects a matrix argument. Line ${e.line}`),null;const s=this._getTransposeType(n.typeInfo);if('mat2x2'===n.typeInfo.name||'mat2x2f'===n.typeInfo.name||'mat2x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[2],e[1],e[3]],s)}if('mat2x3'===n.typeInfo.name||'mat2x3f'===n.typeInfo.name||'mat2x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[6],e[1],e[4],e[7]],s)}if('mat2x4'===n.typeInfo.name||'mat2x4f'===n.typeInfo.name||'mat2x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13]],s)}if('mat3x2'===n.typeInfo.name||'mat3x2f'===n.typeInfo.name||'mat3x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[1],e[4],e[2],e[5]],s)}if('mat3x3'===n.typeInfo.name||'mat3x3f'===n.typeInfo.name||'mat3x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]],s)}if('mat3x4'===n.typeInfo.name||'mat3x4f'===n.typeInfo.name||'mat3x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14]],s)}if('mat4x2'===n.typeInfo.name||'mat4x2f'===n.typeInfo.name||'mat4x2h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[1],e[5],e[2],e[6]],s)}if('mat4x3'===n.typeInfo.name||'mat4x3f'===n.typeInfo.name||'mat4x3h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]],s)}if('mat4x4'===n.typeInfo.name||'mat4x4f'===n.typeInfo.name||'mat4x4h'===n.typeInfo.name){const e=n.value;return new Te([e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]],s)}return console.error(`Invalid matrix type ${n.typeInfo.name}`),null}Trunc(e,t){const n=this.exec.evalExpression(e.args[0],t);if(n instanceof Ie)return new Ie(n.value.map((e=>Math.trunc(e))),n.typeInfo);const s=n;return new be(Math.trunc(s.value),n.typeInfo)}Dpdx(e,t){return console.error(`TODO: dpdx. Line ${e.line}`),null}DpdxCoarse(e,t){return console.error(`TODO: dpdxCoarse. Line ${e.line}`),null}DpdxFine(e,t){return console.error('TODO: dpdxFine'),null}Dpdy(e,t){return console.error('TODO: dpdy'),null}DpdyCoarse(e,t){return console.error('TODO: dpdyCoarse'),null}DpdyFine(e,t){return console.error('TODO: dpdyFine'),null}Fwidth(e,t){return console.error('TODO: fwidth'),null}FwidthCoarse(e,t){return console.error('TODO: fwidthCoarse'),null}FwidthFine(e,t){return console.error('TODO: fwidthFine'),null}TextureDimensions(e,t){const n=e.args[0];if((e.args.length>1?this.exec.evalExpression(e.args[1],t).value:0)>0)return console.error(`TODO: Mip levels. Line ${e.line}`),null;if(n instanceof ne){const s=n.name,r=t.getVariableValue(s);return r instanceof Se?new Ie(r.textureSize,this.getTypeInfo('vec2u')):(console.error(`Texture ${s} not found. Line ${e.line}`),null)}return console.error(`Invalid texture argument for textureDimensions. Line ${e.line}`),null}TextureGather(e,t){return console.error('TODO: textureGather'),null}TextureGatherCompare(e,t){return console.error('TODO: textureGatherCompare'),null}TextureLoad(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t);if((e.args.length>2?this.exec.evalExpression(e.args[2],t).value:0)>0)return console.error(`TODO: Mip levels. Line ${e.line}`),null;if(!(s instanceof Ie)||2!==s.value.length)return console.error(`Invalid UV argument for textureLoad. Line ${e.line}`),null;if(n instanceof ne){const r=n.name,a=t.getVariableValue(r);if(a instanceof Se){const t=a.textureSize,n=Math.floor(s.value[0]),i=Math.floor(s.value[1]);if(n<0||n>=t[0]||i<0||i>=t[1])return console.error(`Texture ${r} out of bounds. Line ${e.line}`),null;const o=4*(i*t[0]+n),u=new Uint8Array(a.buffer,o,4);return new Ie([u[0]/255,u[1]/255,u[2]/255,u[3]/255],this.getTypeInfo('vec4f'))}return console.error(`Texture ${r} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureLoad. Line ${e.line}`),null}TextureNumLayers(e,t){return console.error('TODO: textureNumLayers'),null}TextureNumLevels(e,t){return console.error('TODO: textureNumLevels'),null}TextureNumSamples(e,t){return console.error('TODO: textureNumSamples'),null}TextureSample(e,t){return console.error('TODO: textureSample'),null}TextureSampleBias(e,t){return console.error('TODO: textureSampleBias'),null}TextureSampleCompare(e,t){return console.error('TODO: textureSampleCompare'),null}TextureSampleCompareLevel(e,t){return console.error('TODO: textureSampleCompareLevel'),null}TextureSampleGrad(e,t){return console.error('TODO: textureSampleGrad'),null}TextureSampleLevel(e,t){return console.error('TODO: textureSampleLevel'),null}TextureSampleBaseClampToEdge(e,t){return console.error('TODO: textureSampleBaseClampToEdge'),null}TextureStore(e,t){const n=e.args[0],s=this.exec.evalExpression(e.args[1],t),r=this.exec.evalExpression(e.args[2],t).value;if(4!==r.length)return console.error(`Invalid value argument for textureStore. Line ${e.line}`),null;if(!(s instanceof Ie)||2!==s.value.length)return console.error(`Invalid UV argument for textureStore. Line ${e.line}`),null;if(n instanceof ne){const a=n.name,i=t.getVariableValue(a);if(i instanceof Se){const t=i.textureSize,n=Math.floor(s.value[0]),o=Math.floor(s.value[1]);if(n<0||n>=t[0]||o<0||o>=t[1])return console.error(`Texture ${a} out of bounds. Line ${e.line}`),null;const u=4*(o*t[0]+n),l=new Uint8Array(i.buffer,u,4);return l[0]=255*r[0],l[1]=255*r[1],l[2]=255*r[2],l[3]=255*r[3],null}return console.error(`Texture ${a} not found. Line ${e.line}`),null}return console.error(`Invalid texture argument for textureStore. Line ${e.line}`),null}AtomicLoad(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t);return t.getVariable(s).value.getDataValue(this.exec,n.postfix,t)}AtomicStore(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicAdd(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value+=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicSub(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t);return o instanceof be&&i instanceof be&&(o.value-=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),null}AtomicMax(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=Math.max(o.value,i.value)),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicMin(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=Math.min(o.value,i.value)),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicAnd(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value&i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicOr(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value|i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicXor(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=o.value^i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicExchange(e,t){let n=e.args[0];n instanceof ce&&(n=n.right);const s=this.exec.getVariableName(n,t),r=t.getVariable(s);let a=e.args[1];const i=this.exec.evalExpression(a,t),o=r.value.getDataValue(this.exec,n.postfix,t),u=new be(o.value,o.typeInfo);return o instanceof be&&i instanceof be&&(o.value=i.value),r.value instanceof Se&&r.value.setDataValue(this.exec,o,n.postfix,t),u}AtomicCompareExchangeWeak(e,t){return console.error('TODO: atomicCompareExchangeWeak'),null}Pack4x8snorm(e,t){return console.error('TODO: pack4x8snorm'),null}Pack4x8unorm(e,t){return console.error('TODO: pack4x8unorm'),null}Pack4xI8(e,t){return console.error('TODO: pack4xI8'),null}Pack4xU8(e,t){return console.error('TODO: pack4xU8'),null}Pack4x8Clamp(e,t){return console.error('TODO: pack4x8Clamp'),null}Pack4xU8Clamp(e,t){return console.error('TODO: pack4xU8Clamp'),null}Pack2x16snorm(e,t){return console.error('TODO: pack2x16snorm'),null}Pack2x16unorm(e,t){return console.error('TODO: pack2x16unorm'),null}Pack2x16float(e,t){return console.error('TODO: pack2x16float'),null}Unpack4x8snorm(e,t){return console.error('TODO: unpack4x8snorm'),null}Unpack4x8unorm(e,t){return console.error('TODO: unpack4x8unorm'),null}Unpack4xI8(e,t){return console.error('TODO: unpack4xI8'),null}Unpack4xU8(e,t){return console.error('TODO: unpack4xU8'),null}Unpack2x16snorm(e,t){return console.error('TODO: unpack2x16snorm'),null}Unpack2x16unorm(e,t){return console.error('TODO: unpack2x16unorm'),null}Unpack2x16float(e,t){return console.error('TODO: unpack2x16float'),null}StorageBarrier(e,t){return null}TextureBarrier(e,t){return null}WorkgroupBarrier(e,t){return null}WorkgroupUniformLoad(e,t){return null}SubgroupAdd(e,t){return console.error('TODO: subgroupAdd'),null}SubgroupExclusiveAdd(e,t){return console.error('TODO: subgroupExclusiveAdd'),null}SubgroupInclusiveAdd(e,t){return console.error('TODO: subgroupInclusiveAdd'),null}SubgroupAll(e,t){return console.error('TODO: subgroupAll'),null}SubgroupAnd(e,t){return console.error('TODO: subgroupAnd'),null}SubgroupAny(e,t){return console.error('TODO: subgroupAny'),null}SubgroupBallot(e,t){return console.error('TODO: subgroupBallot'),null}SubgroupBroadcast(e,t){return console.error('TODO: subgroupBroadcast'),null}SubgroupBroadcastFirst(e,t){return console.error('TODO: subgroupBroadcastFirst'),null}SubgroupElect(e,t){return console.error('TODO: subgroupElect'),null}SubgroupMax(e,t){return console.error('TODO: subgroupMax'),null}SubgroupMin(e,t){return console.error('TODO: subgroupMin'),null}SubgroupMul(e,t){return console.error('TODO: subgroupMul'),null}SubgroupExclusiveMul(e,t){return console.error('TODO: subgroupExclusiveMul'),null}SubgroupInclusiveMul(e,t){return console.error('TODO: subgroupInclusiveMul'),null}SubgroupOr(e,t){return console.error('TODO: subgroupOr'),null}SubgroupShuffle(e,t){return console.error('TODO: subgroupShuffle'),null}SubgroupShuffleDown(e,t){return console.error('TODO: subgroupShuffleDown'),null}SubgroupShuffleUp(e,t){return console.error('TODO: subgroupShuffleUp'),null}SubgroupShuffleXor(e,t){return console.error('TODO: subgroupShuffleXor'),null}SubgroupXor(e,t){return console.error('TODO: subgroupXor'),null}QuadBroadcast(e,t){return console.error('TODO: quadBroadcast'),null}QuadSwapDiagonal(e,t){return console.error('TODO: quadSwapDiagonal'),null}QuadSwapX(e,t){return console.error('TODO: quadSwapX'),null}QuadSwapY(e,t){return console.error('TODO: quadSwapY'),null}}function qe(e){return Array.isArray(e)||(null==e?void 0:e.buffer)instanceof ArrayBuffer}const Be=new Float32Array(1),ze=new Uint32Array(Be.buffer),Re=new Uint32Array(Be.buffer),Ge=new Int32Array(1),We=new Float32Array(Ge.buffer),Pe=new Uint32Array(Ge.buffer),Xe=new Uint32Array(1),Ze=new Float32Array(Xe.buffer),je=new Int32Array(Xe.buffer);function Qe(e,t,n){if(t===n)return e;if('f32'===t){if('i32'===n||'x32'===n)return Be[0]=e,ze[0];if('u32'===n)return Be[0]=e,Re[0]}else if('i32'===t||'x32'===t){if('f32'===n)return Ge[0]=e,We[0];if('u32'===n)return Ge[0]=e,Pe[0]}else if('u32'===t){if('f32'===n)return Xe[0]=e,Ze[0];if('i32'===n||'x32'===n)return Xe[0]=e,je[0]}return console.error(`Unsupported cast from ${t} to ${n}`),e}class Ye extends Fe{constructor(e,t){var n;super(),this.ast=null!=e?e:[],this.reflection=new Oe,this.reflection.updateAST(this.ast),this.context=null!==(n=null==t?void 0:t.clone())&&void 0!==n?n:new Me,this.builtins=new Ue(this),this.typeInfo={bool:this.getTypeInfo(X.bool),i32:this.getTypeInfo(X.i32),u32:this.getTypeInfo(X.u32),f32:this.getTypeInfo(X.f32),f16:this.getTypeInfo(X.f16),vec2f:this.getTypeInfo(j.vec2f),vec2u:this.getTypeInfo(j.vec2u),vec2i:this.getTypeInfo(j.vec2i),vec2h:this.getTypeInfo(j.vec2h),vec3f:this.getTypeInfo(j.vec3f),vec3u:this.getTypeInfo(j.vec3u),vec3i:this.getTypeInfo(j.vec3i),vec3h:this.getTypeInfo(j.vec3h),vec4f:this.getTypeInfo(j.vec4f),vec4u:this.getTypeInfo(j.vec4u),vec4i:this.getTypeInfo(j.vec4i),vec4h:this.getTypeInfo(j.vec4h),mat2x2f:this.getTypeInfo(j.mat2x2f),mat2x3f:this.getTypeInfo(j.mat2x3f),mat2x4f:this.getTypeInfo(j.mat2x4f),mat3x2f:this.getTypeInfo(j.mat3x2f),mat3x3f:this.getTypeInfo(j.mat3x3f),mat3x4f:this.getTypeInfo(j.mat3x4f),mat4x2f:this.getTypeInfo(j.mat4x2f),mat4x3f:this.getTypeInfo(j.mat4x3f),mat4x4f:this.getTypeInfo(j.mat4x4f)}}getVariableValue(e){var t,n;const s=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;return null===s?null:s instanceof be||s instanceof Ie||s instanceof Te?s.value:(console.error(`Unsupported return variable type ${s.typeInfo.name}`),null)}execute(e){(e=null!=e?e:{}).constants&&this._setOverrides(e.constants,this.context),this._execStatements(this.ast,this.context)}dispatchWorkgroups(e,t,n,s){const r=this.context.clone();(s=null!=s?s:{}).constants&&this._setOverrides(s.constants,r),this._execStatements(this.ast,r);const a=r.getFunction(e);if(!a)return void console.error(`Function ${e} not found`);if('number'==typeof t)t=[t,1,1];else{if(0===t.length)return void console.error('Invalid dispatch count');1===t.length?t=[t[0],1,1]:2===t.length?t=[t[0],t[1],1]:t.length>3&&(t=[t[0],t[1],t[2]])}const i=t[0],o=t[1],u=t[2],l=this.getTypeInfo('vec3u');r.setVariable('@num_workgroups',new Ie(t,l));for(const e in n)for(const t in n[e]){const s=n[e][t];r.variables.forEach((n=>{const r=n.node;if(null==r?void 0:r.attributes){let a=null,i=null;for(const e of r.attributes)'binding'===e.name?a=e.value:'group'===e.name&&(i=e.value);t==a&&e==i&&(void 0!==s.texture&&void 0!==s.size?n.value=new Se(s.texture,this.getTypeInfo(r.type),0,s.size):void 0!==s.uniform?n.value=new Se(s.uniform,this.getTypeInfo(r.type)):n.value=new Se(s,this.getTypeInfo(r.type)))}}))}for(let e=0;e<u;++e)for(let t=0;t<o;++t)for(let n=0;n<i;++n)r.setVariable('@workgroup_id',new Ie([n,t,e],this.getTypeInfo('vec3u'))),this._dispatchWorkgroup(a,[n,t,e],r)}execStatement(e,t){if(e instanceof U)return this.evalExpression(e.value,t);if(e instanceof W){if(e.condition){const n=this.evalExpression(e.condition,t);if(!(n instanceof be))throw new Error('Invalid break-if condition');if(!n.value)return null}return Ye._breakObj}if(e instanceof P)return Ye._continueObj;if(e instanceof V)this._let(e,t);else if(e instanceof A)this._var(e,t);else if(e instanceof N)this._const(e,t);else if(e instanceof k)this._function(e,t);else{if(e instanceof F)return this._if(e,t);if(e instanceof M)return this._switch(e,t);if(e instanceof E)return this._for(e,t);if(e instanceof T)return this._while(e,t);if(e instanceof C)return this._loop(e,t);if(e instanceof S){const n=t.clone();return n.currentFunctionName=t.currentFunctionName,this._execStatements(e.body,n)}if(e instanceof O)this._assign(e,t);else if(e instanceof L)this._increment(e,t);else{if(e instanceof Z)return null;if(e instanceof $){const n=e.name;null===t.getVariable(n)&&t.setVariable(n,new be(0,this.getTypeInfo('u32')))}else if(e instanceof D)this._call(e,t);else{if(e instanceof z)return null;if(e instanceof R)return null;console.error('Invalid statement type.',e,`Line ${e.line}`)}}}return null}evalExpression(e,t){for(;e instanceof oe;)e=e.contents[0];return e instanceof he?this._evalBinaryOp(e,t):e instanceof re?this._evalLiteral(e,t):e instanceof ne?this._evalVariable(e,t):e instanceof te?this._evalCall(e,t):e instanceof ee?this._evalCreate(e,t):e instanceof se?this._evalConst(e,t):e instanceof ae?this._evalBitcast(e,t):e instanceof ce?this._evalUnaryOp(e,t):(console.error('Invalid expression type',e,`Line ${e.line}`),null)}getTypeInfo(e){var t;if(e instanceof X){const t=this.reflection.getTypeInfo(e);if(null!==t)return t}const n=null!==(t=this.typeInfo[e])&&void 0!==t?t:null;return null!==n?n:null}getTypeName(e){if(null===e)return console.error('Type is null.'),'unknown';let t=e.name;if(e instanceof r||e instanceof j)if(null!==e.format){if('vec2'===t||'vec3'===t||'vec4'===t||'mat2x2'===t||'mat2x3'===t||'mat2x4'===t||'mat3x2'===t||'mat3x3'===t||'mat3x4'===t||'mat4x2'===t||'mat4x3'===t||'mat4x4'===t){if('f32'===e.format.name)return t+='f',t;if('i32'===e.format.name)return t+='i',t;if('u32'===e.format.name)return t+='u',t;if('bool'===e.format.name)return t+='b',t;if('f16'===e.format.name)return t+='h',t}t+=`<${e.format.name}>`}else if('vec2'===t||'vec3'===t||'vec4'===t)return t;return t}_setOverrides(e,t){for(const n in e){const s=e[n],r=this.reflection.getOverrideInfo(n);null!==r?'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Ie(s,r.type)):console.error(`Invalid constant type for ${n}`):console.error(`Override ${n} does not exist in the shader.`)}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof be?e.value:parseInt(t.value[2])}}const r=this.getTypeInfo('vec3u'),a=this.getTypeInfo('u32');n.setVariable('@workgroup_size',new Ie(s,r));const i=s[0],o=s[1],u=s[2];for(let l=0,c=0;l<u;++l)for(let u=0;u<o;++u)for(let o=0;o<i;++o,++c){const i=[o,u,l],h=[o+t[0]*s[0],u+t[1]*s[1],l+t[2]*s[2]];n.setVariable('@local_invocation_id',new Ie(i,r)),n.setVariable('@global_invocation_id',new Ie(h,r)),n.setVariable('@local_invocation_index',new be(c,a)),this._dispatchExec(e,n)}}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);void 0!==r&&t.variables.set(n.name,r)}this._execStatements(e.node.body,t)}getVariableName(e,t){return e instanceof ne?e.name:(console.error('Unknown variable type',e,'Line',e.line),null)}_execStatements(e,t){for(const n of e){if(n instanceof Array){const e=t.clone(),s=this._execStatements(n,e);if(s)return s;continue}const e=this.execStatement(n,t);if(e)return e}return null}_call(e,t){const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(s){for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.setVariable(r.name,a,r)}this._execStatements(s.node.body,n)}else this._callBuiltinFunction(e,n)}_increment(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);s?'++'===e.operator?s.value instanceof be?s.value.value++:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):'--'===e.operator?s.value instanceof be?s.value.value--:console.error(`Variable ${n} is not a scalar. Line ${e.line}`):console.error(`Unknown increment operator ${e.operator}. Line ${e.line}`):console.error(`Variable ${n} not found. Line ${e.line}`)}_assign(e,t){const n=this.getVariableName(e.variable,t),s=t.getVariable(n);if(null===s)return void console.error(`Variable ${n} not found. Line ${e.line}`);const r=this.evalExpression(e.value,t),a=e.operator;if('='===a)if(s.value instanceof Se)s.value.setDataValue(this,r,e.variable.postfix,t);else if(e.variable.postfix){if(!(s.value instanceof Ie||s.value instanceof Te))return void console.error(`Variable ${s.name} is not a vector or matrix. Line ${e.line}`);if(e.variable.postfix instanceof ue){const n=this.evalExpression(e.variable.postfix.index,t).value;if(s.value instanceof Ie){if(!(r instanceof be))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[n]=r.value}else{if(!(s.value instanceof Te))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);{const n=this.evalExpression(e.variable.postfix.index,t).value;if(n<0)return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(!(r instanceof Ie))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);{const t=this.getTypeName(s.value.typeInfo);if('mat2x2'===t||'mat2x2f'===t||'mat2x2h'===t){if(!(n<2&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat2x3'===t||'mat2x3f'===t||'mat2x3h'===t){if(!(n<2&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else if('mat2x4'===t||'mat2x4f'===t||'mat2x4h'===t){if(!(n<2&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}else if('mat3x2'===t||'mat3x2f'===t||'mat3x2h'===t){if(!(n<3&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat3x3'===t||'mat3x3f'===t||'mat3x3h'===t){if(!(n<3&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else if('mat3x4'===t||'mat3x4f'===t||'mat3x4h'===t){if(!(n<3&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}else if('mat4x2'===t||'mat4x2f'===t||'mat4x2h'===t){if(!(n<4&&2===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[2*n]=r.value[0],s.value.value[2*n+1]=r.value[1]}else if('mat4x3'===t||'mat4x3f'===t||'mat4x3h'===t){if(!(n<4&&3===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[3*n]=r.value[0],s.value.value[3*n+1]=r.value[1],s.value.value[3*n+2]=r.value[2]}else{if('mat4x4'!==t&&'mat4x4f'!==t&&'mat4x4h'!==t)return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(!(n<4&&4===r.value.length))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);s.value.value[4*n]=r.value[0],s.value.value[4*n+1]=r.value[1],s.value.value[4*n+2]=r.value[2],s.value.value[4*n+3]=r.value[3]}}}}}else if(e.variable.postfix instanceof J){const t=e.variable.postfix.value;if(!(s.value instanceof Ie))return void console.error(`Invalid assignment to ${t}. Variable ${s.name} is not a vector. Line ${e.line}`);if(r instanceof be){if(t.length>1)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);if('x'===t)s.value.value[0]=r.value;else if('y'===t){if(s.value.value.length<2)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[1]=r.value}else if('z'===t){if(s.value.value.length<3)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[2]=r.value}else if('w'===t){if(s.value.value.length<4)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);s.value.value[3]=r.value}}else{if(!(r instanceof Ie))return void console.error(`Invalid assignment to ${s.name}. Line ${e.line}`);if(t.length!==r.value.length)return void console.error(`Invalid assignment to ${t} for variable ${s.name}. Line ${e.line}`);for(let n=0;n<t.length;++n){const a=t[n];if('x'===a||'r'===a)s.value.value[0]=r.value[n];else if('y'===a||'g'===a){if(r.value.length<2)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[1]=r.value[n]}else if('z'===a||'b'===a){if(r.value.length<3)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[2]=r.value[n]}else{if('w'!==a&&'a'!==a)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);if(r.value.length<4)return void console.error(`Invalid assignment to ${a} for variable ${s.name}. Line ${e.line}`);s.value.value[3]=r.value[n]}}}}}else s.value=r;else{const n=s.value.getDataValue(this,e.variable.postfix,t);if(n instanceof Ie&&r instanceof be){const t=n.value,s=r.value;if('+='===a)for(let e=0;e<t.length;++e)t[e]+=s;else if('-='===a)for(let e=0;e<t.length;++e)t[e]-=s;else if('*='===a)for(let e=0;e<t.length;++e)t[e]*=s;else if('/='===a)for(let e=0;e<t.length;++e)t[e]/=s;else if('%='===a)for(let e=0;e<t.length;++e)t[e]%=s;else if('&='===a)for(let e=0;e<t.length;++e)t[e]&=s;else if('|='===a)for(let e=0;e<t.length;++e)t[e]|=s;else if('^='===a)for(let e=0;e<t.length;++e)t[e]^=s;else if('<<='===a)for(let e=0;e<t.length;++e)t[e]<<=s;else if('>>='===a)for(let e=0;e<t.length;++e)t[e]>>=s;else console.error(`Invalid operator ${a}. Line ${e.line}`)}else if(n instanceof Ie&&r instanceof Ie){const t=n.value,s=r.value;if(t.length!==s.length)return void console.error(`Vector length mismatch. Line ${e.line}`);if('+='===a)for(let e=0;e<t.length;++e)t[e]+=s[e];else if('-='===a)for(let e=0;e<t.length;++e)t[e]-=s[e];else if('*='===a)for(let e=0;e<t.length;++e)t[e]*=s[e];else if('/='===a)for(let e=0;e<t.length;++e)t[e]/=s[e];else if('%='===a)for(let e=0;e<t.length;++e)t[e]%=s[e];else if('&='===a)for(let e=0;e<t.length;++e)t[e]&=s[e];else if('|='===a)for(let e=0;e<t.length;++e)t[e]|=s[e];else if('^='===a)for(let e=0;e<t.length;++e)t[e]^=s[e];else if('<<='===a)for(let e=0;e<t.length;++e)t[e]<<=s[e];else if('>>='===a)for(let e=0;e<t.length;++e)t[e]>>=s[e];else console.error(`Invalid operator ${a}. Line ${e.line}`)}else{if(!(n instanceof be&&r instanceof be))return void console.error(`Invalid type for ${e.operator} operator. Line ${e.line}`);'+='===a?n.value+=r.value:'-='===a?n.value-=r.value:'*='===a?n.value*=r.value:'/='===a?n.value/=r.value:'%='===a?n.value%=r.value:'&='===a?n.value&=r.value:'|='===a?n.value|=r.value:'^='===a?n.value^=r.value:'<<='===a?n.value<<=r.value:'>>='===a?n.value>>=r.value:console.error(`Invalid operator ${a}. Line ${e.line}`)}s.value instanceof Se&&s.value.setDataValue(this,n,e.variable.postfix,t)}}_function(e,t){const n=new Ce(e);t.functions.set(e.name,n)}_const(e,t){let n=null;null!=e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_let(e,t){let n=null;null!=e.value&&(n=this.evalExpression(e.value,t)),t.createVariable(e.name,n,e)}_var(e,t){let n=null;if(null!==e.value)n=this.evalExpression(e.value,t);else{if(null===e.type)return void console.error(`Variable ${e.name} has no type. Line ${e.line}`);if('f32'===e.type.name||'i32'===e.type.name||'u32'===e.type.name||'bool'===e.type.name||'f16'===e.type.name||'vec2'===e.type.name||'vec3'===e.type.name||'vec4'===e.type.name||'vec2f'===e.type.name||'vec3f'===e.type.name||'vec4f'===e.type.name||'vec2i'===e.type.name||'vec3i'===e.type.name||'vec4i'===e.type.name||'vec2u'===e.type.name||'vec3u'===e.type.name||'vec4u'===e.type.name||'vec2h'===e.type.name||'vec3h'===e.type.name||'vec4h'===e.type.name||'mat2x2'===e.type.name||'mat2x3'===e.type.name||'mat2x4'===e.type.name||'mat3x2'===e.type.name||'mat3x3'===e.type.name||'mat3x4'===e.type.name||'mat4x2'===e.type.name||'mat4x3'===e.type.name||'mat4x4'===e.type.name||'mat2x2f'===e.type.name||'mat2x3f'===e.type.name||'mat2x4f'===e.type.name||'mat3x2f'===e.type.name||'mat3x3f'===e.type.name||'mat3x4f'===e.type.name||'mat4x2f'===e.type.name||'mat4x3f'===e.type.name||'mat4x4f'===e.type.name||'mat2x2h'===e.type.name||'mat2x3h'===e.type.name||'mat2x4h'===e.type.name||'mat3x2h'===e.type.name||'mat3x3h'===e.type.name||'mat3x4h'===e.type.name||'mat4x2h'===e.type.name||'mat4x3h'===e.type.name||'mat4x4h'===e.type.name){const s=new ee(e.type,[]);n=this._evalCreate(s,t)}if('array'===e.type.name){const s=new ee(e.type,[]);n=this._evalCreate(s,t)}}t.createVariable(e.name,n,e)}_switch(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;let s=null;for(const r of e.cases)if(r instanceof me)for(const a of r.selectors){if(a instanceof pe){s=r;continue}const i=this.evalExpression(a,t);if(!(i instanceof be))return console.error(`Invalid case selector. Line ${e.line}`),null;if(i.value===n.value)return this._execStatements(r.body,t)}else r instanceof de&&(s=r);return s?this._execStatements(s.body,t):null}_if(e,t){t=t.clone();const n=this.evalExpression(e.condition,t);if(!(n instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(n.value)return this._execStatements(e.body,t);for(const n of e.elseif){const s=this.evalExpression(n.condition,t);if(!(s instanceof be))return console.error(`Invalid if condition. Line ${e.line}`),null;if(s.value)return this._execStatements(n.body,t)}return e.else?this._execStatements(e.else,t):null}_getScalarValue(e){return e instanceof be?e.value:(console.error('Expected scalar value.',e),0)}_for(e,t){for(t=t.clone(),this.execStatement(e.init,t);this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(null!==n&&n!==Ye._continueObj)return n;this.execStatement(e.increment,t)}return null}_loop(e,t){for(t=t.clone();;){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(n===Ye._continueObj){if(e.continuing){if(this._execStatements(e.continuing.body,t)===Ye._breakObj)break}}else if(null!==n)return n}return null}_while(e,t){for(t=t.clone();this._getScalarValue(this.evalExpression(e.condition,t));){const n=this._execStatements(e.body,t);if(n===Ye._breakObj)break;if(n!==Ye._continueObj&&null!==n)return n}return null}_evalBitcast(e,t){const n=this.evalExpression(e.value,t),s=e.type;if(n instanceof be){const e=Qe(n.value,n.typeInfo.name,s.name);return new be(e,this.getTypeInfo(s))}if(n instanceof Ie){const t=this.getTypeName(n.typeInfo);let r='';if(t.endsWith('f'))r='f32';else if(t.endsWith('i'))r='i32';else if(t.endsWith('u'))r='u32';else if(t.endsWith('b'))r='bool';else{if(!t.endsWith('h'))return console.error(`Unknown vector type ${t}. Line ${e.line}`),null;r='f16'}const a=this.getTypeName(s);let i='';if(a.endsWith('f'))i='f32';else if(a.endsWith('i'))i='i32';else if(a.endsWith('u'))i='u32';else if(a.endsWith('b'))i='bool';else{if(!a.endsWith('h'))return console.error(`Unknown vector type ${i}. Line ${e.line}`),null;i='f16'}const o=function(e,t,n){if(t===n)return e;const s=new Array(e.length);for(let r=0;r<e.length;r++)s[r]=Qe(e[r],t,n);return s}(n.value,r,i);return new Ie(o,this.getTypeInfo(s))}return console.error(`TODO: bitcast for ${n.typeInfo.name}. Line ${e.line}`),null}_evalConst(e,t){const n=t.getVariableValue(e.name);return e.postfix?n.getDataValue(this,e.postfix,t):n}_evalCreate(e,t){var r;if(null===e.type)return we.void;const a=this.getTypeName(e.type);switch(a){case'bool':case'i32':case'u32':case'f32':case'f16':return this._callConstructorValue(e,t);case'vec2':case'vec3':case'vec4':case'vec2f':case'vec3f':case'vec4f':case'vec2h':case'vec3h':case'vec4h':case'vec2i':case'vec3i':case'vec4i':case'vec2u':case'vec3u':case'vec4u':case'vec2b':case'vec3b':case'vec4b':return this._callConstructorVec(e,t);case'mat2x2':case'mat2x2f':case'mat2x2h':case'mat2x3':case'mat2x3f':case'mat2x3h':case'mat2x4':case'mat2x4f':case'mat2x4h':case'mat3x2':case'mat3x2f':case'mat3x2h':case'mat3x3':case'mat3x3f':case'mat3x3h':case'mat3x4':case'mat3x4f':case'mat3x4h':case'mat4x2':case'mat4x2f':case'mat4x2h':case'mat4x3':case'mat4x3f':case'mat4x3h':case'mat4x4':case'mat4x4f':case'mat4x4h':return this._callConstructorMatrix(e,t)}const i=this.getTypeInfo(e.type);if(null===i)return console.error(`Unknown type ${a}. Line ${e.line}`),null;if(0===i.size)return null;const o=new Se(new ArrayBuffer(i.size),i,0);if(i instanceof n){if(e.args)for(let n=0;n<e.args.length;++n){const s=i.members[n],r=e.args[n],a=this.evalExpression(r,t);o.setData(this,a,s.type,s.offset,t)}}else if(i instanceof s){let n=0;if(e.args)for(let s=0;s<e.args.length;++s){const a=e.args[s],u=this.evalExpression(a,t);null===i.format&&('x32'===(null===(r=u.typeInfo)||void 0===r?void 0:r.name)?i.format=this.getTypeInfo('i32'):i.format=u.typeInfo),o.setData(this,u,i.format,n,t),n+=i.stride}}else console.error(`Unknown type \"${a}\". Line ${e.line}`);return o}_evalLiteral(e,t){const n=this.getTypeInfo(e.type),s=n.name;if('x32'===s||'u32'===s||'f32'===s||'f16'===s||'i32'===s||'bool'===s){return new be(e.scalarValue,n)}return'vec2'===s||'vec3'===s||'vec4'===s||'vec2f'===s||'vec3f'===s||'vec4f'===s||'vec2h'===s||'vec3h'===s||'vec4h'===s||'vec2i'===s||'vec3i'===s||'vec4i'===s||'vec2u'===s||'vec3u'===s||'vec4u'===s?this._callConstructorVec(e,t):'mat2x2'===s||'mat2x3'===s||'mat2x4'===s||'mat3x2'===s||'mat3x3'===s||'mat3x4'===s||'mat4x2'===s||'mat4x3'===s||'mat4x4'===s||'mat2x2f'===s||'mat2x3f'===s||'mat2x4f'===s||'mat3x2f'===s||'mat3x3f'===s||'mat3x4f'===s||'mat4x2f'===s||'mat4x3f'===s||'mat4x4f'===s||'mat2x2h'===s||'mat2x3h'===s||'mat2x4h'===s||'mat3x2h'===s||'mat3x3h'===s||'mat3x4h'===s||'mat4x2h'===s||'mat4x3h'===s||'mat4x4h'===s?this._callConstructorMatrix(e,t):e.value}_evalVariable(e,t){const n=t.getVariableValue(e.name);return null===n?n:(null==e?void 0:e.postfix)?n.getDataValue(this,e.postfix,t):n}_maxFormatTypeInfo(e){let t=e[0];if('f32'===t.name)return t;for(let n=1;n<e.length;++n){const s=Ye._priority.get(t.name);Ye._priority.get(e[n].name)<s&&(t=e[n])}return'x32'===t.name?this.getTypeInfo('i32'):t}_evalUnaryOp(e,t){const n=this.evalExpression(e.right,t),s=n instanceof be||n instanceof Ie?n.value:null;switch(e.operator){case'+':{if(qe(s)){const e=s.map(((e,t)=>+e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(+e,t)}case'-':{if(qe(s)){const e=s.map(((e,t)=>-e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(-e,t)}case'!':{if(qe(s)){const e=s.map(((e,t)=>e?0:1));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(e?0:1,t)}case'~':{if(qe(s)){const e=s.map(((e,t)=>~e));return new Ie(e,n.typeInfo)}const e=s,t=this._maxFormatTypeInfo([n.typeInfo,n.typeInfo]);return new be(~e,t)}}return console.error(`Invalid unary operator ${e.operator}. Line ${e.line}`),null}_evalBinaryOp(e,t){const n=this.evalExpression(e.left,t),s=this.evalExpression(e.right,t),r=n instanceof be||n instanceof Ie||n instanceof Te?n.value:null,a=s instanceof be||s instanceof Ie||s instanceof Te?s.value:null;switch(e.operator){case'+':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e+s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t+e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e+t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t+i,o)}case'-':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e-s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t-e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e-t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t-i,o)}case'*':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e*s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t*e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e*t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t*i,o)}case'%':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e%s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t%e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e%t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t%i,o)}case'/':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e/s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t/e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e/t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t/i,o)}case'&':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t&e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e&t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t&i,o)}case'|':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e|s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t|e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e|t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t|i,o)}case'^':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e^s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t^e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e^t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t^i,o)}case'<<':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<<s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<<e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<<t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t<<i,o)}case'>>':{if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>>s[t]));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>>e));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>>t));return new Ie(t,s.typeInfo)}const t=r,i=a,o=this._maxFormatTypeInfo([n.typeInfo,s.typeInfo]);return new be(t>>i,o)}case'>':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>t?1:0));return new Ie(t,s.typeInfo)}return new be(r>a?1:0,this.getTypeInfo('bool'));case'<':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<t?1:0));return new Ie(t,s.typeInfo)}return new be(r<a?1:0,this.getTypeInfo('bool'));case'==':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e===s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t==e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e==t?1:0));return new Ie(t,s.typeInfo)}return new be(r===a?1:0,this.getTypeInfo('bool'));case'!=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e!==s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t!==e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e!==t?1:0));return new Ie(t,s.typeInfo)}return new be(r!==a?1:0,this.getTypeInfo('bool'));case'>=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e>=s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t>=e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e>=t?1:0));return new Ie(t,s.typeInfo)}return new be(r>=a?1:0,this.getTypeInfo('bool'));case'<=':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e<=s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t<=e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e<=t?1:0));return new Ie(t,s.typeInfo)}return new be(r<=a?1:0,this.getTypeInfo('bool'));case'&&':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e&&s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t&&e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e&&t?1:0));return new Ie(t,s.typeInfo)}return new be(r&&a?1:0,this.getTypeInfo('bool'));case'||':if(qe(r)&&qe(a)){const t=r,s=a;if(t.length!==s.length)return console.error(`Vector length mismatch. Line ${e.line}.`),null;const i=t.map(((e,t)=>e||s[t]?1:0));return new Ie(i,n.typeInfo)}if(qe(r)){const e=a,t=r.map(((t,n)=>t||e?1:0));return new Ie(t,n.typeInfo)}if(qe(a)){const e=r,t=a.map(((t,n)=>e||t?1:0));return new Ie(t,s.typeInfo)}return new be(r||a?1:0,this.getTypeInfo('bool'))}return console.error(`Unknown operator ${e.operator}. Line ${e.line}`),null}_evalCall(e,t){if(null!==e.cachedReturnValue)return e.cachedReturnValue;const n=t.clone();n.currentFunctionName=e.name;const s=t.getFunction(e.name);if(!s)return this._callBuiltinFunction(e,n);for(let t=0;t<s.node.args.length;++t){const r=s.node.args[t],a=this.evalExpression(e.args[t],n);n.createVariable(r.name,a,r)}return this._execStatements(s.node.body,n)}_callBuiltinFunction(e,t){switch(e.name){case'all':return this.builtins.All(e,t);case'any':return this.builtins.Any(e,t);case'select':return this.builtins.Select(e,t);case'arrayLength':return this.builtins.ArrayLength(e,t);case'abs':return this.builtins.Abs(e,t);case'acos':return this.builtins.Acos(e,t);case'acosh':return this.builtins.Acosh(e,t);case'asin':return this.builtins.Asin(e,t);case'asinh':return this.builtins.Asinh(e,t);case'atan':return this.builtins.Atan(e,t);case'atanh':return this.builtins.Atanh(e,t);case'atan2':return this.builtins.Atan2(e,t);case'ceil':return this.builtins.Ceil(e,t);case'clamp':return this.builtins.Clamp(e,t);case'cos':return this.builtins.Cos(e,t);case'cosh':return this.builtins.Cosh(e,t);case'countLeadingZeros':return this.builtins.CountLeadingZeros(e,t);case'countOneBits':return this.builtins.CountOneBits(e,t);case'countTrailingZeros':return this.builtins.CountTrailingZeros(e,t);case'cross':return this.builtins.Cross(e,t);case'degrees':return this.builtins.Degrees(e,t);case'determinant':return this.builtins.Determinant(e,t);case'distance':return this.builtins.Distance(e,t);case'dot':return this.builtins.Dot(e,t);case'dot4U8Packed':return this.builtins.Dot4U8Packed(e,t);case'dot4I8Packed':return this.builtins.Dot4I8Packed(e,t);case'exp':return this.builtins.Exp(e,t);case'exp2':return this.builtins.Exp2(e,t);case'extractBits':return this.builtins.ExtractBits(e,t);case'faceForward':return this.builtins.FaceForward(e,t);case'firstLeadingBit':return this.builtins.FirstLeadingBit(e,t);case'firstTrailingBit':return this.builtins.FirstTrailingBit(e,t);case'floor':return this.builtins.Floor(e,t);case'fma':return this.builtins.Fma(e,t);case'fract':return this.builtins.Fract(e,t);case'frexp':return this.builtins.Frexp(e,t);case'insertBits':return this.builtins.InsertBits(e,t);case'inverseSqrt':return this.builtins.InverseSqrt(e,t);case'ldexp':return this.builtins.Ldexp(e,t);case'length':return this.builtins.Length(e,t);case'log':return this.builtins.Log(e,t);case'log2':return this.builtins.Log2(e,t);case'max':return this.builtins.Max(e,t);case'min':return this.builtins.Min(e,t);case'mix':return this.builtins.Mix(e,t);case'modf':return this.builtins.Modf(e,t);case'normalize':return this.builtins.Normalize(e,t);case'pow':return this.builtins.Pow(e,t);case'quantizeToF16':return this.builtins.QuantizeToF16(e,t);case'radians':return this.builtins.Radians(e,t);case'reflect':return this.builtins.Reflect(e,t);case'refract':return this.builtins.Refract(e,t);case'reverseBits':return this.builtins.ReverseBits(e,t);case'round':return this.builtins.Round(e,t);case'saturate':return this.builtins.Saturate(e,t);case'sign':return this.builtins.Sign(e,t);case'sin':return this.builtins.Sin(e,t);case'sinh':return this.builtins.Sinh(e,t);case'smoothStep':return this.builtins.SmoothStep(e,t);case'sqrt':return this.builtins.Sqrt(e,t);case'step':return this.builtins.Step(e,t);case'tan':return this.builtins.Tan(e,t);case'tanh':return this.builtins.Tanh(e,t);case'transpose':return this.builtins.Transpose(e,t);case'trunc':return this.builtins.Trunc(e,t);case'dpdx':return this.builtins.Dpdx(e,t);case'dpdxCoarse':return this.builtins.DpdxCoarse(e,t);case'dpdxFine':return this.builtins.DpdxFine(e,t);case'dpdy':return this.builtins.Dpdy(e,t);case'dpdyCoarse':return this.builtins.DpdyCoarse(e,t);case'dpdyFine':return this.builtins.DpdyFine(e,t);case'fwidth':return this.builtins.Fwidth(e,t);case'fwidthCoarse':return this.builtins.FwidthCoarse(e,t);case'fwidthFine':return this.builtins.FwidthFine(e,t);case'textureDimensions':return this.builtins.TextureDimensions(e,t);case'textureGather':return this.builtins.TextureGather(e,t);case'textureGatherCompare':return this.builtins.TextureGatherCompare(e,t);case'textureLoad':return this.builtins.TextureLoad(e,t);case'textureNumLayers':return this.builtins.TextureNumLayers(e,t);case'textureNumLevels':return this.builtins.TextureNumLevels(e,t);case'textureNumSamples':return this.builtins.TextureNumSamples(e,t);case'textureSample':return this.builtins.TextureSample(e,t);case'textureSampleBias':return this.builtins.TextureSampleBias(e,t);case'textureSampleCompare':return this.builtins.TextureSampleCompare(e,t);case'textureSampleCompareLevel':return this.builtins.TextureSampleCompareLevel(e,t);case'textureSampleGrad':return this.builtins.TextureSampleGrad(e,t);case'textureSampleLevel':return this.builtins.TextureSampleLevel(e,t);case'textureSampleBaseClampToEdge':return this.builtins.TextureSampleBaseClampToEdge(e,t);case'textureStore':return this.builtins.TextureStore(e,t);case'atomicLoad':return this.builtins.AtomicLoad(e,t);case'atomicStore':return this.builtins.AtomicStore(e,t);case'atomicAdd':return this.builtins.AtomicAdd(e,t);case'atomicSub':return this.builtins.AtomicSub(e,t);case'atomicMax':return this.builtins.AtomicMax(e,t);case'atomicMin':return this.builtins.AtomicMin(e,t);case'atomicAnd':return this.builtins.AtomicAnd(e,t);case'atomicOr':return this.builtins.AtomicOr(e,t);case'atomicXor':return this.builtins.AtomicXor(e,t);case'atomicExchange':return this.builtins.AtomicExchange(e,t);case'atomicCompareExchangeWeak':return this.builtins.AtomicCompareExchangeWeak(e,t);case'pack4x8snorm':return this.builtins.Pack4x8snorm(e,t);case'pack4x8unorm':return this.builtins.Pack4x8unorm(e,t);case'pack4xI8':return this.builtins.Pack4xI8(e,t);case'pack4xU8':return this.builtins.Pack4xU8(e,t);case'pack4x8Clamp':return this.builtins.Pack4x8Clamp(e,t);case'pack4xU8Clamp':return this.builtins.Pack4xU8Clamp(e,t);case'pack2x16snorm':return this.builtins.Pack2x16snorm(e,t);case'pack2x16unorm':return this.builtins.Pack2x16unorm(e,t);case'pack2x16float':return this.builtins.Pack2x16float(e,t);case'unpack4x8snorm':return this.builtins.Unpack4x8snorm(e,t);case'unpack4x8unorm':return this.builtins.Unpack4x8unorm(e,t);case'unpack4xI8':return this.builtins.Unpack4xI8(e,t);case'unpack4xU8':return this.builtins.Unpack4xU8(e,t);case'unpack2x16snorm':return this.builtins.Unpack2x16snorm(e,t);case'unpack2x16unorm':return this.builtins.Unpack2x16unorm(e,t);case'unpack2x16float':return this.builtins.Unpack2x16float(e,t);case'storageBarrier':return this.builtins.StorageBarrier(e,t);case'textureBarrier':return this.builtins.TextureBarrier(e,t);case'workgroupBarrier':return this.builtins.WorkgroupBarrier(e,t);case'workgroupUniformLoad':return this.builtins.WorkgroupUniformLoad(e,t);case'subgroupAdd':return this.builtins.SubgroupAdd(e,t);case'subgroupExclusiveAdd':return this.builtins.SubgroupExclusiveAdd(e,t);case'subgroupInclusiveAdd':return this.builtins.SubgroupInclusiveAdd(e,t);case'subgroupAll':return this.builtins.SubgroupAll(e,t);case'subgroupAnd':return this.builtins.SubgroupAnd(e,t);case'subgroupAny':return this.builtins.SubgroupAny(e,t);case'subgroupBallot':return this.builtins.SubgroupBallot(e,t);case'subgroupBroadcast':return this.builtins.SubgroupBroadcast(e,t);case'subgroupBroadcastFirst':return this.builtins.SubgroupBroadcastFirst(e,t);case'subgroupElect':return this.builtins.SubgroupElect(e,t);case'subgroupMax':return this.builtins.SubgroupMax(e,t);case'subgroupMin':return this.builtins.SubgroupMin(e,t);case'subgroupMul':return this.builtins.SubgroupMul(e,t);case'subgroupExclusiveMul':return this.builtins.SubgroupExclusiveMul(e,t);case'subgroupInclusiveMul':return this.builtins.SubgroupInclusiveMul(e,t);case'subgroupOr':return this.builtins.SubgroupOr(e,t);case'subgroupShuffle':return this.builtins.SubgroupShuffle(e,t);case'subgroupShuffleDown':return this.builtins.SubgroupShuffleDown(e,t);case'subgroupShuffleUp':return this.builtins.SubgroupShuffleUp(e,t);case'subgroupShuffleXor':return this.builtins.SubgroupShuffleXor(e,t);case'subgroupXor':return this.builtins.SubgroupXor(e,t);case'quadBroadcast':return this.builtins.QuadBroadcast(e,t);case'quadSwapDiagonal':return this.builtins.QuadSwapDiagonal(e,t);case'quadSwapX':return this.builtins.QuadSwapX(e,t);case'quadSwapY':return this.builtins.QuadSwapY(e,t)}const n=t.getFunction(e.name);if(n){const s=t.clone();for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this.evalExpression(e.args[t],s);s.setVariable(r.name,a,r)}return this._execStatements(n.node.body,s)}return null}_callConstructorValue(e,t){if(!e.args||0===e.args.length)return new be(0,this.getTypeInfo(e.type));const n=this.evalExpression(e.args[0],t);return n.typeInfo=this.getTypeInfo(e.type),n}_callConstructorVec(e,t){const n=this.getTypeInfo(e.type),s=this.getTypeName(e.type),r={vec2:2,vec2f:2,vec2i:2,vec2u:2,vec2b:2,vec2h:2,vec3:3,vec3f:3,vec3i:3,vec3u:3,vec3b:3,vec3h:3,vec4:4,vec4f:4,vec4i:4,vec4u:4,vec4b:4,vec4h:4}[s];if(void 0===r)return console.error(`Invalid vec constructor ${s}. Line ${e.line}`),null;const a=s.endsWith('i')||s.endsWith('u'),i=[];if(e instanceof re)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Ie){const t=e.value;for(let e=0;e<t.length;++e){let n=t[e];a&&(n=Math.floor(n)),i.push(n)}}else if(e instanceof be){let t=e.value;a&&(t=Math.floor(t)),i.push(t)}}if(e.type instanceof j&&null===e.type.format&&(e.type.format=j.f32),0===i.length){const e=new Array(r).fill(0);return new Ie(e,n)}if(1===i.length)for(;i.length<r;)i.push(i[0]);return i.length<r?(console.error(`Invalid vec constructor. Line ${e.line}`),null):new Ie(i.length>r?i.slice(0,r):i,n)}_callConstructorMatrix(e,t){const n=this.getTypeInfo(e.type),s=this.getTypeName(e.type),a={mat2x2:4,mat2x2f:4,mat2x2h:4,mat2x3:6,mat2x3f:6,mat2x3h:6,mat2x4:8,mat2x4f:8,mat2x4h:8,mat3x2:6,mat3x2f:6,mat3x2h:6,mat3x3:9,mat3x3f:9,mat3x3h:9,mat3x4:12,mat3x4f:12,mat3x4h:12,mat4x2:8,mat4x2f:8,mat4x2h:8,mat4x3:12,mat4x3f:12,mat4x3h:12,mat4x4:16,mat4x4f:16,mat4x4h:16}[s];if(void 0===a)return console.error(`Invalid matrix constructor ${s}. Line ${e.line}`),null;const i=[];if(e instanceof re)if(e.isVector){const t=e.vectorValue;for(const e of t)i.push(e)}else i.push(e.scalarValue);else if(e.args)for(const n of e.args){const e=this.evalExpression(n,t);if(e instanceof Ie){const t=e.value;for(let e=0;e<t.length;++e)i.push(t[e])}else e instanceof be?i.push(e.value):e instanceof Te&&i.push(...e.value)}if(n instanceof r&&null===n.format&&(n.format=this.getTypeInfo('f32')),0===i.length){const e=new Array(a).fill(0);return new Te(e,n)}return i.length!==a?(console.error(`Invalid matrix constructor. Line ${e.line}`),null):new Te(i,n)}}Ye._breakObj=new ye(new e('BREAK',null)),Ye._continueObj=new ye(new e('CONTINUE',null)),Ye._priority=new Map([['f32',0],['f16',1],['u32',2],['i32',3],['x32',3]]);class Ke{constructor(){this._tokens=[],this._current=0,this._currentLine=0,this._deferArrayCountEval=[],this._currentLoop=[],this._context=new x,this._exec=new Ye}parse(e){this._initialize(e),this._deferArrayCountEval.length=0;const t=[];for(;!this._isAtEnd();){const e=this._global_decl_or_directive();if(!e)break;t.push(e)}if(this._deferArrayCountEval.length>0){for(const e of this._deferArrayCountEval){const t=e.arrayType,n=e.countNode;if(n instanceof ne){const e=n.name,s=this._context.constants.get(e);if(s)try{const e=s.constEvaluate(this._exec);t.count=e}catch(e){}}}this._deferArrayCountEval.length=0}return t}_initialize(e){if(e)if('string'==typeof e){const t=new Ve(e);this._tokens=t.scanTokens()}else this._tokens=e;else this._tokens=[];this._current=0}_updateNode(e,t){return e.line=null!=t?t:this._currentLine,e}_error(e,t){return{token:e,message:t,toString:()=>`${t}`}}_isAtEnd(){return this._current>=this._tokens.length||this._peek().type==Ae.eof}_match(e){if(e instanceof Ee)return!!this._check(e)&&(this._advance(),!0);for(let t=0,n=e.length;t<n;++t){const n=e[t];if(this._check(n))return this._advance(),!0}return!1}_consume(e,t){if(this._check(e))return this._advance();throw this._error(this._peek(),`${t}. Line:${this._currentLine}`)}_check(e){if(this._isAtEnd())return!1;const t=this._peek();if(e instanceof Array){const n=t.type;let s=!1;for(const t of e){if(n===t)return!0;t===Ae.tokens.name&&(s=!0)}if(s){const e=Ae.tokens.name.rule.exec(t.lexeme);if(e&&0==e.index&&e[0]==t.lexeme)return!0}return!1}if(t.type===e)return!0;if(e===Ae.tokens.name){const e=Ae.tokens.name.rule.exec(t.lexeme);return e&&0==e.index&&e[0]==t.lexeme}return!1}_advance(){var e,t;return this._currentLine=null!==(t=null===(e=this._peek())||void 0===e?void 0:e.line)&&void 0!==t?t:-1,this._isAtEnd()||this._current++,this._previous()}_peek(){return this._tokens[this._current]}_previous(){return this._tokens[this._current-1]}_global_decl_or_directive(){for(;this._match(Ae.tokens.semicolon)&&!this._isAtEnd(););if(this._match(Ae.keywords.alias)){const e=this._type_alias();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.diagnostic)){const e=this._diagnostic();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.requires)){const e=this._requires_directive();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}if(this._match(Ae.keywords.enable)){const e=this._enable_directive();return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),this._exec.reflection.updateAST([e]),e}const e=this._attribute();if(this._check(Ae.keywords.var)){const t=this._global_variable_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.override)){const t=this._override_variable_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.let)){const t=this._global_let_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.const)){const t=this._global_const_decl();return null!=t&&(t.attributes=e),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.struct)){const t=this._struct_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}if(this._check(Ae.keywords.fn)){const t=this._function_decl();return null!=t&&(t.attributes=e),this._exec.reflection.updateAST([t]),t}return null}_function_decl(){if(!this._match(Ae.keywords.fn))return null;const e=this._currentLine,t=this._consume(Ae.tokens.ident,'Expected function name.').toString();this._consume(Ae.tokens.paren_left,'Expected \\'(\\' for function arguments.');const n=[];if(!this._check(Ae.tokens.paren_right))do{if(this._check(Ae.tokens.paren_right))break;const e=this._attribute(),t=this._consume(Ae.tokens.name,'Expected argument name.').toString();this._consume(Ae.tokens.colon,'Expected \\':\\' for argument type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s,n.push(this._updateNode(new _e(t,r,e))))}while(this._match(Ae.tokens.comma));this._consume(Ae.tokens.paren_right,'Expected \\')\\' after function arguments.');let s=null;if(this._match(Ae.tokens.arrow)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}const r=this._compound_statement(),a=this._currentLine;return this._updateNode(new k(t,n,s,r,e,a),e)}_compound_statement(){const e=[];for(this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for block.');!this._check(Ae.tokens.brace_right);){const t=this._statement();null!==t&&e.push(t)}return this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for block.'),e}_statement(){for(;this._match(Ae.tokens.semicolon)&&!this._isAtEnd(););if(this._check(Ae.tokens.attr)&&this._attribute(),this._check(Ae.keywords.if))return this._if_statement();if(this._check(Ae.keywords.switch))return this._switch_statement();if(this._check(Ae.keywords.loop))return this._loop_statement();if(this._check(Ae.keywords.for))return this._for_statement();if(this._check(Ae.keywords.while))return this._while_statement();if(this._check(Ae.keywords.continuing))return this._continuing_statement();if(this._check(Ae.keywords.static_assert))return this._static_assert_statement();if(this._check(Ae.tokens.brace_left))return this._compound_statement();let e=null;if(this._check(Ae.keywords.return))e=this._return_statement();else if(this._check([Ae.keywords.var,Ae.keywords.let,Ae.keywords.const]))e=this._variable_statement();else if(this._match(Ae.keywords.discard))e=this._updateNode(new G);else if(this._match(Ae.keywords.break)){const t=this._updateNode(new W);if(this._currentLoop.length>0){const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t,this._check(Ae.keywords.if)&&(this._advance(),t.condition=this._optional_paren_expression(),t.condition instanceof oe&&1===t.condition.contents.length&&(t.condition=t.condition.contents[0]))}else if(this._match(Ae.keywords.continue)){const t=this._updateNode(new P);if(!(this._currentLoop.length>0))throw this._error(this._peek(),`Continue statement must be inside a loop. Line: ${t.line}`);{const e=this._currentLoop[this._currentLoop.length-1];t.loopId=e.id}e=t}else e=this._increment_decrement_statement()||this._func_call_statement()||this._assignment_statement();return null!=e&&this._consume(Ae.tokens.semicolon,'Expected \\';\\' after statement.'),e}_static_assert_statement(){if(!this._match(Ae.keywords.static_assert))return null;const e=this._optional_paren_expression();return this._updateNode(new I(e))}_while_statement(){if(!this._match(Ae.keywords.while))return null;const e=this._updateNode(new T(null,null));return this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(Ae.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_continuing_statement(){if(!this._match(Ae.keywords.continuing))return null;const e=this._compound_statement();return this._updateNode(new S(e))}_for_statement(){if(!this._match(Ae.keywords.for))return null;this._consume(Ae.tokens.paren_left,'Expected \\'(\\'.');const e=this._updateNode(new E(null,null,null,null));return this._currentLoop.push(e),e.init=this._check(Ae.tokens.semicolon)?null:this._for_init(),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),e.condition=this._check(Ae.tokens.semicolon)?null:this._short_circuit_or_expression(),this._consume(Ae.tokens.semicolon,'Expected \\';\\'.'),e.increment=this._check(Ae.tokens.paren_right)?null:this._for_increment(),this._consume(Ae.tokens.paren_right,'Expected \\')\\'.'),this._check(Ae.tokens.attr)&&this._attribute(),e.body=this._compound_statement(),this._currentLoop.pop(),e}_for_init(){return this._variable_statement()||this._func_call_statement()||this._assignment_statement()}_for_increment(){return this._func_call_statement()||this._increment_decrement_statement()||this._assignment_statement()}_variable_statement(){if(this._check(Ae.keywords.var)){const e=this._variable_decl();if(null===e)throw this._error(this._peek(),'Variable declaration expected.');let t=null;return this._match(Ae.tokens.equal)&&(t=this._short_circuit_or_expression()),this._updateNode(new A(e.name,e.type,e.storage,e.access,t))}if(this._match(Ae.keywords.let)){const e=this._consume(Ae.tokens.name,'Expected name for let.').toString();let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Ae.tokens.equal,'Expected \\'=\\' for let.');const n=this._short_circuit_or_expression();return this._updateNode(new V(e,t,null,null,n))}if(this._match(Ae.keywords.const)){const e=this._consume(Ae.tokens.name,'Expected name for const.').toString();let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}this._consume(Ae.tokens.equal,'Expected \\'=\\' for const.');const n=this._short_circuit_or_expression();return null===t&&n instanceof re&&(t=n.type),this._updateNode(new N(e,t,null,null,n))}return null}_increment_decrement_statement(){const e=this._current,t=this._unary_expression();if(null==t)return null;if(!this._check(Ae.increment_operators))return this._current=e,null;const n=this._consume(Ae.increment_operators,'Expected increment operator');return this._updateNode(new L(n.type===Ae.tokens.plus_plus?i.increment:i.decrement,t))}_assignment_statement(){let e=null;if(this._check(Ae.tokens.brace_right))return null;let t=this._match(Ae.tokens.underscore);if(t||(e=this._unary_expression()),!t&&null==e)return null;const n=this._consume(Ae.assignment_operators,'Expected assignment operator.'),s=this._short_circuit_or_expression();return this._updateNode(new O(o.parse(n.lexeme),e,s))}_func_call_statement(){if(!this._check(Ae.tokens.ident))return null;const e=this._current,t=this._consume(Ae.tokens.ident,'Expected function name.'),n=this._argument_expression_list();return null===n?(this._current=e,null):this._updateNode(new D(t.lexeme,n))}_loop_statement(){if(!this._match(Ae.keywords.loop))return null;this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for loop.');const e=this._updateNode(new C([],null));this._currentLoop.push(e);let t=this._statement();for(;null!==t;){if(Array.isArray(t))for(let n of t)e.body.push(n);else e.body.push(t);if(t instanceof S){e.continuing=t;break}t=this._statement()}return this._currentLoop.pop(),this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for loop.'),e}_switch_statement(){if(!this._match(Ae.keywords.switch))return null;const e=this._updateNode(new M(null,[]));if(this._currentLoop.push(e),e.condition=this._optional_paren_expression(),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for switch.'),e.cases=this._switch_body(),null==e.cases||0==e.cases.length)throw this._error(this._previous(),'Expected \\'case\\' or \\'default\\'.');return this._consume(Ae.tokens.brace_right,'Expected \\'}\\' for switch.'),this._currentLoop.pop(),e}_switch_body(){const e=[];let t=!1;for(;this._check([Ae.keywords.default,Ae.keywords.case]);){if(this._match(Ae.keywords.case)){const n=this._case_selectors();for(const e of n)if(e instanceof pe){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');t=!0;break}this._match(Ae.tokens.colon),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Exected \\'{\\' for switch case.');const s=this._case_body();this._consume(Ae.tokens.brace_right,'Exected \\'}\\' for switch case.'),e.push(this._updateNode(new me(n,s)))}if(this._match(Ae.keywords.default)){if(t)throw this._error(this._previous(),'Multiple default cases in switch statement.');this._match(Ae.tokens.colon),this._check(Ae.tokens.attr)&&this._attribute(),this._consume(Ae.tokens.brace_left,'Exected \\'{\\' for switch default.');const n=this._case_body();this._consume(Ae.tokens.brace_right,'Exected \\'}\\' for switch default.'),e.push(this._updateNode(new de(n)))}}return e}_case_selectors(){const e=[];for(this._match(Ae.keywords.default)?e.push(this._updateNode(new pe)):e.push(this._shift_expression());this._match(Ae.tokens.comma);)this._match(Ae.keywords.default)?e.push(this._updateNode(new pe)):e.push(this._shift_expression());return e}_case_body(){if(this._match(Ae.keywords.fallthrough))return this._consume(Ae.tokens.semicolon,'Expected \\';\\''),[];let e=this._statement();if(null==e)return[];e instanceof Array||(e=[e]);const t=this._case_body();return 0==t.length?e:[...e,t[0]]}_if_statement(){if(!this._match(Ae.keywords.if))return null;const e=this._currentLine,t=this._optional_paren_expression();this._check(Ae.tokens.attr)&&this._attribute();const n=this._compound_statement();let s=[];this._match_elseif()&&(this._check(Ae.tokens.attr)&&this._attribute(),s=this._elseif_statement(s));let r=null;return this._match(Ae.keywords.else)&&(this._check(Ae.tokens.attr)&&this._attribute(),r=this._compound_statement()),this._updateNode(new F(t,n,s,r),e)}_match_elseif(){return this._tokens[this._current].type===Ae.keywords.else&&this._tokens[this._current+1].type===Ae.keywords.if&&(this._advance(),this._advance(),!0)}_elseif_statement(e=[]){const t=this._optional_paren_expression(),n=this._compound_statement();return e.push(this._updateNode(new ve(t,n))),this._match_elseif()&&(this._check(Ae.tokens.attr)&&this._attribute(),this._elseif_statement(e)),e}_return_statement(){if(!this._match(Ae.keywords.return))return null;const e=this._short_circuit_or_expression();return this._updateNode(new U(e))}_short_circuit_or_expression(){let e=this._short_circuit_and_expr();for(;this._match(Ae.tokens.or_or);)e=this._updateNode(new he(this._previous().toString(),e,this._short_circuit_and_expr()));return e}_short_circuit_and_expr(){let e=this._inclusive_or_expression();for(;this._match(Ae.tokens.and_and);)e=this._updateNode(new he(this._previous().toString(),e,this._inclusive_or_expression()));return e}_inclusive_or_expression(){let e=this._exclusive_or_expression();for(;this._match(Ae.tokens.or);)e=this._updateNode(new he(this._previous().toString(),e,this._exclusive_or_expression()));return e}_exclusive_or_expression(){let e=this._and_expression();for(;this._match(Ae.tokens.xor);)e=this._updateNode(new he(this._previous().toString(),e,this._and_expression()));return e}_and_expression(){let e=this._equality_expression();for(;this._match(Ae.tokens.and);)e=this._updateNode(new he(this._previous().toString(),e,this._equality_expression()));return e}_equality_expression(){const e=this._relational_expression();return this._match([Ae.tokens.equal_equal,Ae.tokens.not_equal])?this._updateNode(new he(this._previous().toString(),e,this._relational_expression())):e}_relational_expression(){let e=this._shift_expression();for(;this._match([Ae.tokens.less_than,Ae.tokens.greater_than,Ae.tokens.less_than_equal,Ae.tokens.greater_than_equal]);)e=this._updateNode(new he(this._previous().toString(),e,this._shift_expression()));return e}_shift_expression(){let e=this._additive_expression();for(;this._match([Ae.tokens.shift_left,Ae.tokens.shift_right]);)e=this._updateNode(new he(this._previous().toString(),e,this._additive_expression()));return e}_additive_expression(){let e=this._multiplicative_expression();for(;this._match([Ae.tokens.plus,Ae.tokens.minus]);)e=this._updateNode(new he(this._previous().toString(),e,this._multiplicative_expression()));return e}_multiplicative_expression(){let e=this._unary_expression();for(;this._match([Ae.tokens.star,Ae.tokens.forward_slash,Ae.tokens.modulo]);)e=this._updateNode(new he(this._previous().toString(),e,this._unary_expression()));return e}_unary_expression(){return this._match([Ae.tokens.minus,Ae.tokens.bang,Ae.tokens.tilde,Ae.tokens.star,Ae.tokens.and])?this._updateNode(new ce(this._previous().toString(),this._unary_expression())):this._singular_expression()}_singular_expression(){const e=this._primary_expression(),t=this._postfix_expression();return t&&(e.postfix=t),e}_postfix_expression(){if(this._match(Ae.tokens.bracket_left)){const e=this._short_circuit_or_expression();this._consume(Ae.tokens.bracket_right,'Expected \\']\\'.');const t=this._updateNode(new ue(e)),n=this._postfix_expression();return n&&(t.postfix=n),t}if(this._match(Ae.tokens.period)){const e=this._consume(Ae.tokens.name,'Expected member name.'),t=this._postfix_expression(),n=this._updateNode(new J(e.lexeme));return t&&(n.postfix=t),n}return null}_getStruct(e){if(this._context.aliases.has(e)){return this._context.aliases.get(e).type}if(this._context.structs.has(e)){return this._context.structs.get(e)}return null}_getType(e){const t=this._getStruct(e);if(null!==t)return t;switch(e){case'bool':return X.bool;case'i32':return X.i32;case'u32':return X.u32;case'f32':return X.f32;case'f16':return X.f16;case'vec2f':return j.vec2f;case'vec3f':return j.vec3f;case'vec4f':return j.vec4f;case'vec2i':return j.vec2i;case'vec3i':return j.vec3i;case'vec4i':return j.vec4i;case'vec2u':return j.vec2u;case'vec3u':return j.vec3u;case'vec4u':return j.vec4u;case'vec2h':return j.vec2h;case'vec3h':return j.vec3h;case'vec4h':return j.vec4h;case'mat2x2f':return j.mat2x2f;case'mat2x3f':return j.mat2x3f;case'mat2x4f':return j.mat2x4f;case'mat3x2f':return j.mat3x2f;case'mat3x3f':return j.mat3x3f;case'mat3x4f':return j.mat3x4f;case'mat4x2f':return j.mat4x2f;case'mat4x3f':return j.mat4x3f;case'mat4x4f':return j.mat4x4f;case'mat2x2h':return j.mat2x2h;case'mat2x3h':return j.mat2x3h;case'mat2x4h':return j.mat2x4h;case'mat3x2h':return j.mat3x2h;case'mat3x3h':return j.mat3x3h;case'mat3x4h':return j.mat3x4h;case'mat4x2h':return j.mat4x2h;case'mat4x3h':return j.mat4x3h;case'mat4x4h':return j.mat4x4h}return null}_validateTypeRange(e,t){if('i32'===t.name){if(e<-2147483648||e>2147483647)throw this._error(this._previous(),`Value out of range for i32: ${e}. Line: ${this._currentLine}.`)}else if('u32'===t.name&&(e<0||e>4294967295))throw this._error(this._previous(),`Value out of range for u32: ${e}. Line: ${this._currentLine}.`)}_primary_expression(){if(this._match(Ae.tokens.ident)){const e=this._previous().toString();if(this._check(Ae.tokens.paren_left)){const t=this._argument_expression_list(),n=this._getType(e);return null!==n?this._updateNode(new ee(n,t)):this._updateNode(new te(e,t))}if(this._context.constants.has(e)){const t=this._context.constants.get(e);return this._updateNode(new se(e,t.value))}return this._updateNode(new ne(e))}if(this._match(Ae.tokens.int_literal)){const e=this._previous().toString();let t=e.endsWith('i')||e.endsWith('i')?X.i32:e.endsWith('u')||e.endsWith('U')?X.u32:X.x32;const n=parseInt(e);return this._validateTypeRange(n,t),this._updateNode(new re(new be(n,this._exec.getTypeInfo(t)),t))}if(this._match(Ae.tokens.uint_literal)){const e=parseInt(this._previous().toString());return this._validateTypeRange(e,X.u32),this._updateNode(new re(new be(e,this._exec.getTypeInfo(X.u32)),X.u32))}if(this._match([Ae.tokens.decimal_float_literal,Ae.tokens.hex_float_literal])){let e=this._previous().toString(),t=e.endsWith('h');t&&(e=e.substring(0,e.length-1));const n=parseFloat(e);this._validateTypeRange(n,t?X.f16:X.f32);const s=t?X.f16:X.f32;return this._updateNode(new re(new be(n,this._exec.getTypeInfo(s)),s))}if(this._match([Ae.keywords.true,Ae.keywords.false])){let e=this._previous().toString()===Ae.keywords.true.rule;return this._updateNode(new re(new be(e?1:0,this._exec.getTypeInfo(X.bool)),X.bool))}if(this._check(Ae.tokens.paren_left))return this._paren_expression();if(this._match(Ae.keywords.bitcast)){this._consume(Ae.tokens.less_than,'Expected \\'<\\'.');const e=this._type_decl();this._consume(Ae.tokens.greater_than,'Expected \\'>\\'.');const t=this._paren_expression();return this._updateNode(new ae(e,t))}const e=this._type_decl(),t=this._argument_expression_list();return this._updateNode(new ee(e,t))}_argument_expression_list(){if(!this._match(Ae.tokens.paren_left))return null;const e=[];do{if(this._check(Ae.tokens.paren_right))break;const t=this._short_circuit_or_expression();e.push(t)}while(this._match(Ae.tokens.comma));return this._consume(Ae.tokens.paren_right,'Expected \\')\\' for agument list'),e}_optional_paren_expression(){this._match(Ae.tokens.paren_left);const e=this._short_circuit_or_expression();return this._match(Ae.tokens.paren_right),this._updateNode(new oe([e]))}_paren_expression(){this._consume(Ae.tokens.paren_left,'Expected \\'(\\'.');const e=this._short_circuit_or_expression();return this._consume(Ae.tokens.paren_right,'Expected \\')\\'.'),this._updateNode(new oe([e]))}_struct_decl(){if(!this._match(Ae.keywords.struct))return null;const e=this._currentLine,t=this._consume(Ae.tokens.ident,'Expected name for struct.').toString();this._consume(Ae.tokens.brace_left,'Expected \\'{\\' for struct body.');const n=[];for(;!this._check(Ae.tokens.brace_right);){const e=this._attribute(),t=this._consume(Ae.tokens.name,'Expected variable name.').toString();this._consume(Ae.tokens.colon,'Expected \\':\\' for struct member type.');const s=this._attribute(),r=this._type_decl();null!=r&&(r.attributes=s),this._check(Ae.tokens.brace_right)?this._match(Ae.tokens.comma):this._consume(Ae.tokens.comma,'Expected \\',\\' for struct member.'),n.push(this._updateNode(new xe(t,r,e)))}this._consume(Ae.tokens.brace_right,'Expected \\'}\\' after struct body.');const s=this._currentLine,r=this._updateNode(new Z(t,n,e,s),e);return this._context.structs.set(t,r),r}_global_variable_decl(){const e=this._variable_decl();if(!e)return null;if(this._match(Ae.tokens.equal)){const t=this._const_expression(),n=[X.f32];try{const s=t.constEvaluate(this._exec,n);e.value=new re(s,n[0]),this._exec.context.setVariable(e.name,s)}catch(n){e.value=t}}else{const t=new ee(e.type,null),n=this._exec.evalExpression(t,this._exec.context);null!==n&&(e.value=new re(n,e.type),this._exec.context.setVariable(e.name,n))}if(null!==e.type&&e.value instanceof re){if('x32'!==e.value.type.name){if(this._exec.getTypeName(e.type)!==this._exec.getTypeName(e.value.type))throw this._error(this._peek(),`Invalid cast from ${e.value.type.name} to ${e.type.name}. Line:${this._currentLine}`)}e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type),e.value.type=e.type}else null===e.type&&e.value instanceof re&&(e.type='x32'===e.value.type.name?X.i32:e.value.type,e.value.isScalar&&this._validateTypeRange(e.value.scalarValue,e.type));return e}_override_variable_decl(){const e=this._override_decl();return e&&this._match(Ae.tokens.equal)&&(e.value=this._const_expression()),e}_global_const_decl(){var e;if(!this._match(Ae.keywords.const))return null;const t=this._consume(Ae.tokens.name,'Expected variable name');let n=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();n=this._type_decl(),null!=n&&(n.attributes=e)}let s=null;this._consume(Ae.tokens.equal,'const declarations require an assignment');const a=this._short_circuit_or_expression();try{let e=[X.f32];const n=a.constEvaluate(this._exec,e);n instanceof be&&this._validateTypeRange(n.value,e[0]),e[0]instanceof j&&null===e[0].format&&n.typeInfo instanceof r&&null!==n.typeInfo.format&&('f16'===n.typeInfo.format.name?e[0].format=X.f16:'f32'===n.typeInfo.format.name?e[0].format=X.f32:'i32'===n.typeInfo.format.name?e[0].format=X.i32:'u32'===n.typeInfo.format.name?e[0].format=X.u32:'bool'===n.typeInfo.format.name?e[0].format=X.bool:console.error(`TODO: impelement template format type ${n.typeInfo.format.name}`)),s=this._updateNode(new re(n,e[0])),this._exec.context.setVariable(t.toString(),n)}catch(e){s=a}if(null!==n&&s instanceof re){if('x32'!==s.type.name){if(this._exec.getTypeName(n)!==this._exec.getTypeName(s.type))throw this._error(this._peek(),`Invalid cast from ${s.type.name} to ${n.name}. Line:${this._currentLine}`)}s.type=n,s.isScalar&&this._validateTypeRange(s.scalarValue,s.type)}else null===n&&s instanceof re&&(n=null!==(e=null==s?void 0:s.type)&&void 0!==e?e:X.f32,n===X.x32&&(n=X.i32));const i=this._updateNode(new N(t.toString(),n,'','',s));return this._context.constants.set(i.name,i),i}_global_let_decl(){if(!this._match(Ae.keywords.let))return null;const e=this._consume(Ae.tokens.name,'Expected variable name');let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}let n=null;if(this._match(Ae.tokens.equal)){n=this._const_expression();const e=[X.f32];try{const t=n.constEvaluate(this._exec,e);null!==t&&(n=new re(t,e[0]))}catch(e){}}if(null!==t&&n instanceof re){if('x32'!==n.type.name){if(this._exec.getTypeName(t)!==this._exec.getTypeName(n.type))throw this._error(this._peek(),`Invalid cast from ${n.type.name} to ${t.name}. Line:${this._currentLine}`)}n.type=t}else null===t&&n instanceof re&&(t='x32'===n.type.name?X.i32:n.type);return n instanceof re&&n.isScalar&&this._validateTypeRange(n.scalarValue,t),this._updateNode(new V(e.toString(),t,'','',n))}_const_expression(){return this._short_circuit_or_expression()}_variable_decl(){if(!this._match(Ae.keywords.var))return null;let e='',t='';this._match(Ae.tokens.less_than)&&(e=this._consume(Ae.storage_class,'Expected storage_class.').toString(),this._match(Ae.tokens.comma)&&(t=this._consume(Ae.access_mode,'Expected access_mode.').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\'.'));const n=this._consume(Ae.tokens.name,'Expected variable name');let s=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();s=this._type_decl(),null!=s&&(s.attributes=e)}return this._updateNode(new A(n.toString(),s,e,t,null))}_override_decl(){if(!this._match(Ae.keywords.override))return null;const e=this._consume(Ae.tokens.name,'Expected variable name');let t=null;if(this._match(Ae.tokens.colon)){const e=this._attribute();t=this._type_decl(),null!=t&&(t.attributes=e)}return this._updateNode(new $(e.toString(),t,null))}_diagnostic(){this._consume(Ae.tokens.paren_left,'Expected \\'(\\'');const e=this._consume(Ae.tokens.ident,'Expected severity control name.');this._consume(Ae.tokens.comma,'Expected \\',\\'');let t=this._consume(Ae.tokens.ident,'Expected diagnostic rule name.').toString();if(this._match(Ae.tokens.period)){t+=`.${this._consume(Ae.tokens.ident,'Expected diagnostic message.').toString()}`}return this._consume(Ae.tokens.paren_right,'Expected \\')\\''),this._updateNode(new z(e.toString(),t))}_enable_directive(){const e=this._consume(Ae.tokens.ident,'identity expected.');return this._updateNode(new q(e.toString()))}_requires_directive(){const e=[this._consume(Ae.tokens.ident,'identity expected.').toString()];for(;this._match(Ae.tokens.comma);){const t=this._consume(Ae.tokens.ident,'identity expected.');e.push(t.toString())}return this._updateNode(new B(e))}_type_alias(){const e=this._consume(Ae.tokens.ident,'identity expected.');this._consume(Ae.tokens.equal,'Expected \\'=\\' for type alias.');let t=this._type_decl();if(null===t)throw this._error(this._peek(),'Expected Type for Alias.');this._context.aliases.has(t.name)&&(t=this._context.aliases.get(t.name).type);const n=this._updateNode(new R(e.toString(),t));return this._context.aliases.set(n.name,n),n}_type_decl(){if(this._check([Ae.tokens.ident,...Ae.texel_format,Ae.keywords.bool,Ae.keywords.f32,Ae.keywords.i32,Ae.keywords.u32])){const e=this._advance(),t=e.toString();return this._context.structs.has(t)?this._context.structs.get(t):this._context.aliases.has(t)?this._context.aliases.get(t).type:this._updateNode(new X(e.toString()))}let e=this._texture_sampler_types();if(e)return e;if(this._check(Ae.template_types)){let e=this._advance().toString(),t=null,n=null;return this._match(Ae.tokens.less_than)&&(t=this._type_decl(),n=null,this._match(Ae.tokens.comma)&&(n=this._consume(Ae.access_mode,'Expected access_mode for pointer').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for type.')),this._updateNode(new j(e,t,n))}if(this._match(Ae.keywords.ptr)){let e=this._previous().toString();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for pointer.');const t=this._consume(Ae.storage_class,'Expected storage_class for pointer');this._consume(Ae.tokens.comma,'Expected \\',\\' for pointer.');const n=this._type_decl();let s=null;return this._match(Ae.tokens.comma)&&(s=this._consume(Ae.access_mode,'Expected access_mode for pointer').toString()),this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for pointer.'),this._updateNode(new Q(e,t.toString(),n,s))}const t=this._attribute();if(this._match(Ae.keywords.array)){let e=null,n=-1;const s=this._previous();let r=null;if(this._match(Ae.tokens.less_than)){e=this._type_decl(),this._context.aliases.has(e.name)&&(e=this._context.aliases.get(e.name).type);let t='';if(this._match(Ae.tokens.comma)){r=this._shift_expression();try{t=r.constEvaluate(this._exec).toString(),r=null}catch(e){t='1'}}this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for array.'),n=t?parseInt(t):0}const a=this._updateNode(new Y(s.toString(),t,e,n));return r&&this._deferArrayCountEval.push({arrayType:a,countNode:r}),a}return null}_texture_sampler_types(){if(this._match(Ae.sampler_type))return this._updateNode(new K(this._previous().toString(),null,null));if(this._match(Ae.depth_texture_type))return this._updateNode(new K(this._previous().toString(),null,null));if(this._match(Ae.sampled_texture_type)||this._match(Ae.multisampled_texture_type)){const e=this._previous();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._type_decl();return this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new K(e.toString(),t,null))}if(this._match(Ae.storage_texture_type)){const e=this._previous();this._consume(Ae.tokens.less_than,'Expected \\'<\\' for sampler type.');const t=this._consume(Ae.texel_format,'Invalid texel format.').toString();this._consume(Ae.tokens.comma,'Expected \\',\\' after texel format.');const n=this._consume(Ae.access_mode,'Expected access mode for storage texture type.').toString();return this._consume(Ae.tokens.greater_than,'Expected \\'>\\' for sampler type.'),this._updateNode(new K(e.toString(),t,n))}return null}_attribute(){let e=[];for(;this._match(Ae.tokens.attr);){const t=this._consume(Ae.attribute_name,'Expected attribute name'),n=this._updateNode(new ge(t.toString(),null));if(this._match(Ae.tokens.paren_left)){if(n.value=this._consume(Ae.literal_or_ident,'Expected attribute value').toString(),this._check(Ae.tokens.comma)){this._advance();do{const e=this._consume(Ae.literal_or_ident,'Expected attribute value').toString();n.value instanceof Array||(n.value=[n.value]),n.value.push(e)}while(this._match(Ae.tokens.comma))}this._consume(Ae.tokens.paren_right,'Expected \\')\\'')}e.push(n)}return 0==e.length?null:e}}class He extends Oe{constructor(e){super(),e&&this.update(e)}update(e){const t=(new Ke).parse(e);this.updateAST(t)}}class Je{get line(){return-1}}class et extends Je{constructor(e){super(),this.node=e}get line(){return this.node.line}}class tt extends Je{constructor(e,t){super(),this.node=e,this.statement=t}get line(){return this.statement.line}}class nt extends Je{constructor(e){super(),this.id=e}}class st extends Je{constructor(e){super(),this.id=e}}class rt extends Je{constructor(e,t){super(),this.id=e,this.node=t}get line(){return this.node.line}}class at extends Je{constructor(e,t,n){super(),this.id=e,this.condition=t,this.node=n}get line(){return this.node.line}}class it extends Je{constructor(e,t,n){super(),this.lineNo=-1,this.condition=e,this.position=t,this.lineNo=n}get line(){var e,t;return null!==(t=null===(e=this.condition)||void 0===e?void 0:e.line)&&void 0!==t?t:this.lineNo}}class ot extends Je{constructor(e){super(),this.statements=[],this.statements=e}get line(){return this.statements.length>0?this.statements[0].line:-1}}class ut{constructor(e,t){this.parent=null,this.commands=[],this.current=0,this.parentCallExpr=null,this.context=e,this.parent=null!=t?t:null}get isAtEnd(){return this.current>=this.commands.length}getNextCommand(){if(this.current>=this.commands.length)return null;const e=this.commands[this.current];return this.current++,e}getCurrentCommand(){return this.current>=this.commands.length?null:this.commands[this.current]}}class lt{constructor(){this.states=[]}get isEmpty(){return 0==this.states.length}get last(){var e;return null!==(e=this.states[this.states.length-1])&&void 0!==e?e:null}pop(){this.states.pop()}}class ct{constructor(e,t){this._runTimer=null,this.breakpoints=new Set,this.runStateCallback=null,this._code=e;const n=(new Ke).parse(e);this._exec=new Ye(n),this.runStateCallback=null!=t?t:null}getVariableValue(e){var t,n;const s=null!==(n=null===(t=this.context.getVariable(e))||void 0===t?void 0:t.value)&&void 0!==n?n:null;return null===s?null:s instanceof be||s instanceof Ie||s instanceof Te?s.value:(console.error(`Unsupported return variable type ${s.typeInfo.name}`),null)}reset(){this._exec=new Ye(this._exec.ast),this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}startDebug(){this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}get context(){const e=this.currentState;return null===e?this._exec.context:e.context}get currentState(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}return e}}get currentCommand(){for(;;){if(this._execStack.isEmpty)return null;let e=this._execStack.last;if(null===e)return null;if(e.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return null;e=this._execStack.last}const t=e.getCurrentCommand();if(null!==t)return t}}toggleBreakpoint(e){this.breakpoints.has(e)?this.breakpoints.delete(e):this.breakpoints.add(e)}clearBreakpoints(){this.breakpoints.clear()}get isRunning(){return null!==this._runTimer}run(){this.isRunning||(this._runTimer=setInterval((()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}),0),null!==this.runStateCallback&&this.runStateCallback())}pause(){null!==this._runTimer&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}_setOverrides(e,t){for(const n in e){const s=e[n],r=this._exec.reflection.getOverrideInfo(n);null!==r?'u32'===r.type.name||'i32'===r.type.name||'f32'===r.type.name||'f16'===r.type.name?t.setVariable(n,new be(s,r.type)):'bool'===r.type.name?t.setVariable(n,new be(s?1:0,r.type)):'vec2'===r.type.name||'vec3'===r.type.name||'vec4'===r.type.name||'vec2f'===r.type.name||'vec3f'===r.type.name||'vec4f'===r.type.name||'vec2i'===r.type.name||'vec3i'===r.type.name||'vec4i'===r.type.name||'vec2u'===r.type.name||'vec3u'===r.type.name||'vec4u'===r.type.name||'vec2h'===r.type.name||'vec3h'===r.type.name||'vec4h'===r.type.name?t.setVariable(n,new Ie(s,r.type)):console.error(`Invalid constant type for ${n}`):console.error(`Override ${n} does not exist in the shader.`)}}debugWorkgroup(e,t,n,s,r){this._execStack=new lt;const a=this._exec.context;a.currentFunctionName=e,this._dispatchId=t,(r=null!=r?r:{}).constants&&this._setOverrides(r.constants,a),this._exec._execStatements(this._exec.ast,a);const i=a.getFunction(e);if(!i)return console.error(`Function ${e} not found`),!1;if('number'==typeof n)n=[n,1,1];else{if(0===n.length)return console.error('Invalid dispatch count'),!1;1===n.length?n=[n[0],1,1]:2===n.length?n=[n[0],n[1],1]:n.length>3&&(n=[n[0],n[1],n[2]])}const o=n[2],u=n[1],l=n[0],c=this._exec.typeInfo.vec3u;a.setVariable('@num_workgroups',new Ie(n,c));for(const e in s)for(const t in s[e]){const n=s[e][t];a.variables.forEach((s=>{const r=s.node;if(null==r?void 0:r.attributes){let a=null,i=null;for(const e of r.attributes)'binding'===e.name?a=e.value:'group'===e.name&&(i=e.value);t==a&&e==i&&(void 0!==n.texture&&void 0!==n.size?s.value=new Se(n.texture,this._exec.getTypeInfo(r.type),0,n.size):void 0!==n.uniform?s.value=new Se(n.uniform,this._exec.getTypeInfo(r.type)):s.value=new Se(n,this._exec.getTypeInfo(r.type)))}}))}let h=!1;for(let e=0;e<o&&!h;++e)for(let t=0;t<u&&!h;++t)for(let n=0;n<l&&!h;++n)if(a.setVariable('@workgroup_id',new Ie([n,t,e],c)),this._dispatchWorkgroup(i,[n,t,e],a)){h=!0;break}return h}_shouldExecuteNectCommand(){const e=this.currentCommand;if(null===e)return!1;if(e instanceof it){if(null===e.condition)return!0}else if(e instanceof nt||e instanceof st)return!0;return!1}stepInto(){this.isRunning||this.stepNext(!0)}stepOver(){this.isRunning||this.stepNext(!1)}stepOut(){const e=this.currentState;if(null===e)return;const t=e.parent;this.isRunning&&(clearInterval(this._runTimer),this._runTimer=null),this._runTimer=setInterval((()=>{const e=this.currentCommand;if(e&&this.breakpoints.has(e.line))return clearInterval(this._runTimer),this._runTimer=null,void(null!==this.runStateCallback&&this.runStateCallback());this.stepNext(!0)||(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback());this.currentState===t&&(clearInterval(this._runTimer),this._runTimer=null,null!==this.runStateCallback&&this.runStateCallback())}),0),null!==this.runStateCallback&&this.runStateCallback()}stepNext(e=!0){if(!this._execStack){this._execStack=new lt;const e=this._createState(this._exec.ast,this._exec.context);this._execStack.states.push(e)}for(;;){if(this._execStack.isEmpty)return!1;let t=this._execStack.last;if(null===t)return!1;if(t.isAtEnd){if(this._execStack.pop(),this._execStack.isEmpty)return!1;t=this._execStack.last}const n=t.getNextCommand();if(null!==n){if(e&&n instanceof tt){const e=n.node,s=t.context.getFunction(e.name);if(!s)continue;const r=this._createState(s.node.body,t.context.clone(),t);for(let t=0;t<s.node.args.length;++t){const n=s.node.args[t],a=this._exec.evalExpression(e.args[t],r.context);r.context.createVariable(n.name,a,n)}if(r.parentCallExpr=e,this._execStack.states.push(r),r.context.currentFunctionName=s.name,this._shouldExecuteNectCommand())continue;return!0}if(n instanceof et){const e=n.node;if(e instanceof D){const n=t.context.getFunction(e.name);if(n){const s=this._createState(n.node.body,t.context.clone(),t);for(let t=0;t<n.node.args.length;++t){const r=n.node.args[t],a=this._exec.evalExpression(e.args[t],s.context);s.context.createVariable(r.name,a,r)}if(this._execStack.states.push(s),s.context.currentFunctionName=n.name,this._shouldExecuteNectCommand())continue;return!0}}const s=this._exec.execStatement(e,t.context);if(null!=s&&!(s instanceof we)){let e=t;for(;e;){if(e.parentCallExpr){e.parentCallExpr.setCachedReturnValue(s);break}e=e.parent}if(null===e&&console.error('Could not find CallExpr to store return value in'),this._shouldExecuteNectCommand())continue;return!0}}else{if(n instanceof nt)continue;if(n instanceof st)continue;if(n instanceof rt){const e=n.id;for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof nt&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Continue statement used outside of a loop'),!1}if(n instanceof at){const e=n.id;if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof be))return console.error('Condition must be a scalar'),!1;if(!e.value){if(this._shouldExecuteNectCommand())continue;return!0}}for(;!this._execStack.isEmpty;){t=this._execStack.last;for(let n=t.commands.length-1;n>=0;--n){const s=t.commands[n];if(s instanceof st&&s.id===e)return t.current=n+1,!0}this._execStack.pop()}return console.error('Break statement used outside of a loop'),!1}if(n instanceof it){if(n.condition){const e=this._exec.evalExpression(n.condition,t.context);if(!(e instanceof be))return console.error('Condition must be a scalar'),!1;if(e.value){if(this._shouldExecuteNectCommand())continue;return!0}}if(t.current=n.position,this._shouldExecuteNectCommand())continue;return!0}if(n instanceof ot){const e=this._createState(n.statements,t.context.clone(),t);this._execStack.states.push(e);continue}}if(t.isAtEnd&&(this._execStack.pop(),this._execStack.isEmpty))return!1;if(!this._shouldExecuteNectCommand())return!0}}}_dispatchWorkgroup(e,t,n){const s=[1,1,1];for(const t of e.node.attributes)if('workgroup_size'===t.name)if(Array.isArray(t.value)){if(t.value.length>0){const e=n.getVariableValue(t.value[0]);s[0]=e instanceof be?e.value:parseInt(t.value[0])}if(t.value.length>1){const e=n.getVariableValue(t.value[1]);s[1]=e instanceof be?e.value:parseInt(t.value[1])}if(t.value.length>2){const e=n.getVariableValue(t.value[2]);s[2]=e instanceof be?e.value:parseInt(t.value[2])}}else{const e=n.getVariableValue(t.value);e instanceof be?s[0]=e.value:e instanceof Ie?(s[0]=e.value[0],s[1]=e.value.length>1?e.value[1]:1,s[2]=e.value.length>2?e.value[2]:1):s[0]=parseInt(t.value)}const r=this._exec.typeInfo.vec3u,a=this._exec.typeInfo.u32;n.setVariable('@workgroup_size',new Ie(s,r));const i=s[0],o=s[1],u=s[2];let l=!1;for(let e=0,c=0;e<u&&!l;++e)for(let u=0;u<o&&!l;++u)for(let o=0;o<i&&!l;++o,++c){const i=[o,u,e],h=[o+t[0]*s[0],u+t[1]*s[1],e+t[2]*s[2]];if(n.setVariable('@local_invocation_id',new Ie(i,r)),n.setVariable('@global_invocation_id',new Ie(h,r)),n.setVariable('@local_invocation_index',new be(c,a)),h[0]===this._dispatchId[0]&&h[1]===this._dispatchId[1]&&h[2]===this._dispatchId[2]){l=!0;break}}return l&&this._dispatchExec(e,n),l}_dispatchExec(e,t){for(const n of e.node.args)for(const e of n.attributes)if('builtin'===e.name){const s=`@${e.value}`,r=t.getVariable(s);null!==r&&t.variables.set(n.name,r)}const n=this._createState(e.node.body,t);this._execStack.states.push(n)}_createState(e,t,n){const s=new ut(t,null!=n?n:null);for(const t of e)if(t instanceof V||t instanceof A||t instanceof N||t instanceof O){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof D){const e=[];for(const n of t.args)this._collectFunctionCalls(n,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof U){const e=[];this._collectFunctionCalls(t.value,e);for(const n of e)s.commands.push(new tt(n,t));s.commands.push(new et(t))}else if(t instanceof L)s.commands.push(new et(t));else{if(t instanceof k){const e=new Ce(t);s.context.functions.set(t.name,e);continue}if(t instanceof F){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));let n=new it(t.condition,0,t.line);s.commands.push(n),t.body.length>0&&s.commands.push(new ot(t.body));const r=new it(null,0,t.line);s.commands.push(r);for(const e of t.elseif){n.position=s.commands.length;const a=[];this._collectFunctionCalls(e.condition,a);for(const e of a)s.commands.push(new tt(e,t));n=new it(e.condition,0,e.line),s.commands.push(n),e.body.length>0&&s.commands.push(new ot(e.body)),s.commands.push(r)}n.position=s.commands.length,t.else&&s.commands.push(new ot(t.else)),r.position=s.commands.length}else if(t instanceof M){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));let n=null;for(const e of t.cases){if(e instanceof de){n=e;break}if(e instanceof me)for(const t of e.selectors)if(t instanceof pe){n=e;break}}const r=[];for(const e of t.cases){if(e===n)continue;if(!(e instanceof me))continue;let a=null;for(const n of e.selectors){let e=new he('==',t.condition,n);a&&(e=new he('||',a,e)),a=e}const i=new it(a,0,e.line);s.commands.push(i),e.body.length>0&&s.commands.push(new ot(e.body));const o=new it(null,0,e.line);r.push(o),s.commands.push(o),i.position=s.commands.length}n&&s.commands.push(new ot(n.body)),s.commands.push(new st(t.id));const a=s.commands.length;for(let e=0;e<r.length;++e)r[e].position=a}else if(t instanceof T){const e=[];s.commands.push(new nt(t.id)),this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));const n=new it(t.condition,0,t.line);s.commands.push(n);let r=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),r=t.body[t.body.length-1].line),s.commands.push(new it(t.condition,0,r)),s.commands.push(new st(t.id)),n.position=s.commands.length}else if(t instanceof E){t.init&&s.commands.push(new et(t.init));let e=s.commands.length;null===t.increment&&s.commands.push(new nt(t.id));let n=null;if(t.condition){const e=[];this._collectFunctionCalls(t.condition,e);for(const n of e)s.commands.push(new tt(n,t));n=new it(t.condition,0,t.line),s.commands.push(n)}let r=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),r=t.body[t.body.length-1].line),t.increment&&(s.commands.push(new nt(t.id)),s.commands.push(new et(t.increment))),s.commands.push(new it(null,e,r)),s.commands.push(new st(t.id)),n.position=s.commands.length}else if(t instanceof C){let e=s.commands.length;t.continuing||s.commands.push(new nt(t.id));let n=t.line;t.body.length>0&&(s.commands.push(new ot(t.body)),n=t.body[t.body.length-1].line),s.commands.push(new it(null,e,n)),s.commands.push(new st(t.id))}else t instanceof S?(s.commands.push(new nt(t.id)),s.commands.push(new ot(t.body))):t instanceof P?s.commands.push(new rt(t.loopId,t)):t instanceof W?s.commands.push(new at(t.loopId,t.condition,t)):t instanceof I?s.commands.push(new et(t)):console.error(`TODO: statement type ${t.constructor.name}`)}return s}_collectFunctionCalls(e,t){if(e instanceof te){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t);e.isBuiltin||t.push(e)}else if(e instanceof he)this._collectFunctionCalls(e.left,t),this._collectFunctionCalls(e.right,t);else if(e instanceof ce)this._collectFunctionCalls(e.right,t);else if(e instanceof oe)for(const n of e.contents)this._collectFunctionCalls(n,t);else if(e instanceof ee){if(e.args)for(const n of e.args)this._collectFunctionCalls(n,t)}else e instanceof ae?this._collectFunctionCalls(e.value,t):e instanceof ue?this._collectFunctionCalls(e.index,t):re||console.error(`TODO: expression type ${e.constructor.name}`)}}export{R as Alias,h as AliasInfo,_e as Argument,d as ArgumentInfo,ue as ArrayIndex,s as ArrayInfo,Y as ArrayType,O as Assign,o as AssignOperator,ge as Attribute,he as BinaryOperator,ae as BitcastExpr,W as Break,D as Call,te as CallExpr,me as Case,N as Const,se as ConstExpr,P as Continue,S as Continuing,ee as CreateExpr,ye as Data,de as Default,pe as DefaultSelector,z as Diagnostic,G as Discard,ve as ElseIf,q as Enable,v as EntryFunctions,H as Expression,E as For,k as Function,_ as FunctionInfo,oe as GroupingExpr,F as If,L as Increment,i as IncrementOperator,f as InputInfo,V as Let,re as LiteralExpr,C as Loop,Te as MatrixData,xe as Member,t as MemberInfo,g as Node,le as Operator,p as OutputInfo,$ as Override,m as OverrideInfo,x as ParseContext,Q as PointerType,B as Requires,a as ResourceType,U as Return,K as SamplerType,be as ScalarData,ut as StackFrame,b as Statement,I as StaticAssert,J as StringExpr,Z as Struct,n as StructInfo,M as Switch,fe as SwitchCase,r as TemplateInfo,j as TemplateType,$e as Token,l as TokenClass,Ee as TokenType,Ae as TokenTypes,X as Type,e as TypeInfo,ie as TypecastExpr,Se as TypedData,ce as UnaryOperator,A as Var,ne as VariableExpr,c as VariableInfo,Ie as VectorData,we as VoidData,ct as WgslDebug,Ye as WgslExec,Ke as WgslParser,He as WgslReflect,Ve as WgslScanner,T as While,w as _BlockEnd,y as _BlockStart};\n//# sourceMappingURL=wgsl_reflect.module.js.map\n","import {\n    WgslReflect,\n    ArrayInfo,\n    StructInfo,\n    TemplateInfo,\n    TypeInfo,\n    VariableInfo,\n    FunctionInfo,\n    ResourceType,\n} from 'wgsl_reflect';\nimport {\n    WGSLType,\n} from './wgsl-types.js';\n\nexport type FieldDefinition = {\n    offset: number;\n    type: TypeDefinition;\n};\n\nexport type FieldDefinitions = {\n    [x: string]: FieldDefinition;\n};\n\nexport type TypeDefinition = {\n    size: number;\n};\n\n// These 3 types are wonky. Maybe we should make them inherit from a common\n// type with a `type` field. I wanted this to be a plain object though, not an object\n// with a constructor. In any case, right now, the way you tell them apart is\n// If it's got `elementType` then it's an ArrayDefinition\n// If it's got `fields` then it's a StructDefinition\n// else it's an IntrinsicDefinition\nexport type StructDefinition = TypeDefinition & {\n    fields: FieldDefinitions;\n    size: number;\n};\n\nexport { WGSLType };\n\nexport type IntrinsicDefinition = TypeDefinition & {\n    type: WGSLType;\n    numElements?: number;\n};\n\nexport type ArrayDefinition = TypeDefinition & {\n    elementType: TypeDefinition,\n    numElements: number,\n};\n\nexport type TextureDefinition = TypeDefinition & {\n    type: string,\n};\n\nexport type SamplerDefinition = TypeDefinition & {\n    type: string,\n};\n\n/**\n * @group(x) @binding(y) var<...> definition\n */\nexport interface VariableDefinition {\n    binding: number;\n    group: number;\n    size: number;\n    typeDefinition: TypeDefinition;\n}\n\nexport type StructDefinitions = {\n    [x: string]: StructDefinition;\n};\n\nexport type VariableDefinitions = {\n    [x: string]: VariableDefinition;\n};\n\nexport type Resource = {\n    name: string;\n    group: number;\n    entry: GPUBindGroupLayoutEntry;\n};\n\nexport type EntryPoint = {\n    stage: GPUShaderStageFlags;\n    resources: Resource[];\n}\n\nexport type EntryPoints = {\n    [x: string]: EntryPoint;\n}\n\n/**\n * The data definitions and other reflection data from some WGSL shader source.\n */\nexport type ShaderDataDefinitions = {\n    /**\n     * definitions for uniform bindings by name\n     */\n    uniforms: VariableDefinitions,\n    /**\n     * definitions for storage bindings by name\n     */\n    storages: VariableDefinitions,\n    /**\n     * definitions for sampler bindings by name\n     */\n    samplers: VariableDefinitions,\n    /**\n     * definitions for texture bindings by name\n     */\n    textures: VariableDefinitions,\n    /**\n     * definitions for storage texture bindings by name\n     */\n    storageTextures: VariableDefinitions,\n    /**\n     * definitions for external texture bindings by name\n     */\n    externalTextures: VariableDefinitions,\n    /**\n     * definitions for structures by name\n     */\n    structs: StructDefinitions,\n    /**\n     * Entry points by name.\n     */\n    entryPoints: EntryPoints,\n};\n\n/**\n * This should be compatible with GPUProgramableStage\n */\nexport type ProgrammableStage = {\n    entryPoint?: string,\n}\n\n/**\n * Compatible with GPURenderPipelineDescriptor and GPUComputePipelineDescriptor\n */\nexport type PipelineDescriptor = {\n    vertex?: ProgrammableStage,\n    fragment?: ProgrammableStage,\n    compute?: ProgrammableStage,\n};\n\nfunction getEntryPointForStage(defs: ShaderDataDefinitions, stage: ProgrammableStage, stageFlags: GPUShaderStageFlags) {\n    const {entryPoint: entryPointName} = stage;\n    if (entryPointName) {\n        const ep = defs.entryPoints[entryPointName];\n        return (ep && ep.stage === stageFlags) ? ep : undefined;\n    }\n\n    return Object.values(defs.entryPoints).filter(ep => ep.stage === stageFlags)[0];\n}\n\nfunction getStageResources(defs: ShaderDataDefinitions, stage: ProgrammableStage | undefined, stageFlags: GPUShaderStageFlags) {\n    if (!stage) {\n        return [];\n    }\n    const entryPoint = getEntryPointForStage(defs, stage, stageFlags);\n    return entryPoint?.resources || [];\n}\n\nconst byBinding = (a: GPUBindGroupLayoutEntry, b: GPUBindGroupLayoutEntry) => Math.sign(a.binding - b.binding);\n\n/**\n * Gets GPUBindGroupLayoutDescriptors for the given pipeline.\n *\n * Important: Assumes you pipeline is valid (it doesn't check for errors).\n *\n * Note: In WebGPU some layouts must be specified manually. For example an unfiltered-float\n *    sampler can not be derived since it is unknown at compile time pipeline creation time\n *    which texture you'll use.\n *\n * MAINTENANCE_TODO: Add example\n *\n * @param defs ShaderDataDefinitions or an array of ShaderDataDefinitions as\n *    returned from {@link makeShaderDataDefinitions}. If an array more than 1\n *    definition it's assumed the vertex shader is in the first and the fragment\n *    shader in the second.\n * @param desc A PipelineDescriptor. You should be able to pass in the same object you passed\n *    to `createRenderPipeline` or `createComputePipeline`.\n * @returns An array of GPUBindGroupLayoutDescriptors which you can pass, one at a time, to\n *    `createBindGroupLayout`. Note: the array will be sparse if there are gaps in group\n *    numbers. Note: Each GPUBindGroupLayoutDescriptor.entries will be sorted by binding.\n */\nexport function makeBindGroupLayoutDescriptors(\n    defs: ShaderDataDefinitions | ShaderDataDefinitions[],\n    desc: PipelineDescriptor,\n): GPUBindGroupLayoutDescriptor[] {\n    defs = Array.isArray(defs) ? defs : [defs];\n    const resources = [\n        ...getStageResources(defs[0], desc.vertex, GPUShaderStage.VERTEX),\n        ...getStageResources(defs[defs.length - 1], desc.fragment, GPUShaderStage.FRAGMENT),\n        ...getStageResources(defs[0], desc.compute, GPUShaderStage.COMPUTE),\n    ];\n    const bindGroupLayoutDescriptorsByGroupByBinding: Map<number, GPUBindGroupLayoutEntry>[] = [];\n    for (const resource of resources) {\n        const bindingsToBindGroupEntry = bindGroupLayoutDescriptorsByGroupByBinding[resource.group] || new Map<number, GPUBindGroupLayoutEntry>();\n        bindGroupLayoutDescriptorsByGroupByBinding[resource.group] = bindingsToBindGroupEntry;\n        // Should we error here if the 2 don't match?\n        const entry = bindingsToBindGroupEntry.get(resource.entry.binding);\n        bindingsToBindGroupEntry.set(resource.entry.binding, {\n            ...resource.entry,\n            visibility: resource.entry.visibility | (entry?.visibility || 0),\n        });\n    }\n    const descriptors = bindGroupLayoutDescriptorsByGroupByBinding.map(v => ({entries: [...v.values()].sort(byBinding) }));\n    for (let i = 0; i < descriptors.length; ++i) {\n        if (!descriptors[i]) {\n            descriptors[i] = { entries: [] };\n        }\n    }\n    return descriptors;\n}\n\nfunction getNamedVariables(reflect: WgslReflect, variables: VariableInfo[]): VariableDefinitions {\n    return Object.fromEntries(variables.map(v => {\n        const typeDefinition = addVariableType(reflect, v, 0);\n        return [\n            v.name,\n            {\n                typeDefinition,\n                group: v.group,\n                binding: v.binding,\n                size: typeDefinition.size,\n            },\n        ];\n    })) as VariableDefinitions;\n}\n\nfunction makeStructDefinition(reflect: WgslReflect, structInfo: StructInfo, offset: number) {\n    // StructDefinition\n    const fields: FieldDefinitions = Object.fromEntries(structInfo.members.map(m => {\n        return [\n            m.name,\n            {\n                offset: m.offset,\n                type: addType(reflect, m.type, 0),\n            },\n        ];\n    }));\n    return {\n        fields,\n        size: structInfo.size,\n        offset,\n    };\n}\n\nfunction getTextureSampleType(type: TypeInfo) {\n    if (type.name.includes('depth')) {\n        return 'depth';\n    }\n    // unfiltered-float\n    switch ((type as TemplateInfo).format?.name) {\n        case 'f32': return 'float';\n        case 'i32': return 'sint';\n        case 'u32': return 'uint';\n        default:\n            throw new Error('unknown texture sample type');\n    }\n}\n\nfunction getViewDimension(type: TypeInfo): GPUTextureViewDimension {\n    if (type.name.includes('2d_array')) {\n        return '2d-array';\n    }\n    if (type.name.includes('cube_array')) {\n        return 'cube-array';\n    }\n    if (type.name.includes('3d')) {\n        return '3d';\n    }\n    if (type.name.includes('1d')) {\n        return '1d';\n    }\n    if (type.name.includes('cube')) {\n        return 'cube';\n    }\n    return '2d';\n}\n\nfunction getStorageTextureAccess(type: TypeInfo): GPUStorageTextureAccess {\n    switch ((type as TemplateInfo).access) {\n        case 'read': return 'read-only';\n        case 'write': return 'write-only';\n        case 'read_write': return 'read-write';\n        default:\n            throw new Error('unknonw storage texture access');\n    }\n}\n\nfunction getSamplerType(type: TypeInfo) {\n    // \"non-filtering\" can only be specified manually.\n    return type.name.endsWith('_comparison')\n        ? 'comparison'\n        : 'filtering';\n}\n\nfunction getBindGroupLayoutEntry(resource: VariableInfo, visibility: GPUShaderStageFlags): GPUBindGroupLayoutEntry {\n    const { binding, access, type } = resource;\n    switch (resource.resourceType) {\n        case ResourceType.Uniform:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case ResourceType.Storage:\n            return {\n                binding,\n                visibility,\n                buffer: {\n                    type: (access === '' || access === 'read') ? 'read-only-storage' : 'storage',\n                    ...(resource.size && { minBindingSize: resource.size }),\n                },\n            };\n        case ResourceType.Texture: {\n            if (type.name === 'texture_external') {\n                return {\n                    binding,\n                    visibility,\n                    externalTexture: {},\n                };\n            }\n            const multisampled = type.name.includes('multisampled');\n            return {\n                binding,\n                visibility,\n                texture: {\n                    sampleType: getTextureSampleType(type),\n                    viewDimension: getViewDimension(type),\n                    multisampled,\n                },\n            };\n        }\n        case ResourceType.Sampler:\n            return {\n                binding,\n                visibility,\n                sampler: {\n                    type: getSamplerType(type),\n                },\n            };\n        case ResourceType.StorageTexture:\n            return {\n                binding,\n                visibility,\n                storageTexture: {\n                    access: getStorageTextureAccess(type),\n                    format: ((type as TemplateInfo).format!.name as GPUTextureFormat),\n                    viewDimension: getViewDimension(type),\n                },\n            };\n        default:\n            throw new Error('unknown resource type');\n    }\n}\n\nfunction addEntryPoints(funcInfos: FunctionInfo[], stage: GPUShaderStageFlags): EntryPoints {\n    const entryPoints: EntryPoints = {};\n    for (const info of funcInfos) {\n        entryPoints[info.name] = {\n            stage,\n            resources: info.resources.map(resource => {\n                const {name, group} = resource;\n                return {\n                    name,\n                    group,\n                    entry: getBindGroupLayoutEntry(resource, stage),\n                };\n            }),\n        };\n    }\n    return entryPoints;\n}\n\n/**\n * Given a WGSL shader, returns data definitions for structures,\n * uniforms, and storage buffers\n *\n * Example:\n *\n * ```js\n * const code = `\n * struct MyStruct {\n *    color: vec4f,\n *    brightness: f32,\n *    kernel: array<f32, 9>,\n * };\n * @group(0) @binding(0) var<uniform> myUniforms: MyUniforms;\n * `;\n * const defs = makeShaderDataDefinitions(code);\n * const myUniformValues = makeStructuredView(defs.uniforms.myUniforms);\n *\n * myUniformValues.set({\n *   color: [1, 0, 1, 1],\n *   brightness: 0.8,\n *   kernel: [\n *      1, 0, -1,\n *      2, 0, -2,\n *      1, 0, -1,\n *   ],\n * });\n * device.queue.writeBuffer(uniformBuffer, 0, myUniformValues.arrayBuffer);\n * ```\n *\n * @param code WGSL shader. Note: it is not required for this to be a complete shader\n * @returns definitions of the structures by name. Useful for passing to {@link makeStructuredView}\n */\nexport function makeShaderDataDefinitions(code: string): ShaderDataDefinitions {\n    const reflect = new WgslReflect(code);\n\n    const structs = Object.fromEntries(reflect.structs.map(structInfo => {\n        return [structInfo.name, makeStructDefinition(reflect, structInfo, 0)];\n    }));\n\n    const uniforms = getNamedVariables(reflect, reflect.uniforms);\n    const storages = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.Storage));\n    const storageTextures = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.StorageTexture));\n    const textures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name !== 'texture_external'));\n    const externalTextures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name === 'texture_external'));\n    const samplers = getNamedVariables(reflect, reflect.samplers);\n\n    const entryPoints: EntryPoints = {\n        ...addEntryPoints(reflect.entry.vertex, GPUShaderStage.VERTEX),\n        ...addEntryPoints(reflect.entry.fragment, GPUShaderStage.FRAGMENT),\n        ...addEntryPoints(reflect.entry.compute, GPUShaderStage.COMPUTE),\n    };\n\n    return {\n        externalTextures,\n        samplers,\n        structs,\n        storages,\n        storageTextures,\n        textures,\n        uniforms,\n        entryPoints,\n    };\n}\n\nfunction assert(cond: boolean, msg = '') {\n    if (!cond) {\n        throw new Error(msg);\n    }\n}\n\n/*\n write down what I want for a given type\n\n    struct VSUniforms {\n        foo: u32,\n    };\n    @group(4) @binding(1) var<uniform> uni1: f32;\n    @group(3) @binding(2) var<uniform> uni2: array<f32, 5>;\n    @group(2) @binding(3) var<uniform> uni3: VSUniforms;\n    @group(1) @binding(4) var<uniform> uni4: array<VSUniforms, 6>;\n\n    uni1: {\n        type: 'f32',\n        numElements: undefined\n    },\n    uni2: {\n        type: 'array',\n        elementType: 'f32'\n        numElements: 5,\n    },\n    uni3: {\n        type: 'struct',\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n    },\n    uni4: {\n        type: 'array',\n        elementType:\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        fields: {\n            foo: {\n                type: 'f32',\n                numElements: undefined\n            }\n        },\n        ...\n    ]\n\n    */\n\nfunction addVariableType(reflect: WgslReflect, v: VariableInfo, offset: number):\n    StructDefinition |\n    IntrinsicDefinition |\n    ArrayDefinition |\n    TextureDefinition |\n    SamplerDefinition {\n    switch (v.resourceType) {\n        case ResourceType.Uniform:\n        case ResourceType.Storage:\n        case ResourceType.StorageTexture:\n            return addType(reflect, v.type, offset);\n        default:\n            return {\n                size: 0,\n                type: v.type.name,\n            };\n    }\n}\n\nfunction addType(reflect: WgslReflect, typeInfo: TypeInfo, offset: number):\n  StructDefinition |\n  IntrinsicDefinition |\n  ArrayDefinition {\n    if (typeInfo.isArray) {\n        assert(!typeInfo.isStruct, 'struct array is invalid');\n        assert(!typeInfo.isStruct, 'template array is invalid');\n        const arrayInfo = typeInfo as ArrayInfo;\n        // ArrayDefinition\n        return {\n            size: arrayInfo.size,\n            elementType: addType(reflect, arrayInfo.format, offset),\n            numElements: arrayInfo.count,\n        };\n    } else if (typeInfo.isStruct) {\n        assert(!typeInfo.isTemplate, 'template struct is invalid');\n        const structInfo = typeInfo as StructInfo;\n        return makeStructDefinition(reflect, structInfo, offset);\n    } else {\n        // template is like vec4<f32> or mat4x4<f16>\n        const asTemplateInfo = typeInfo as TemplateInfo;\n        const type = typeInfo.isTemplate\n           ? `${asTemplateInfo.name}<${asTemplateInfo.format!.name}>`\n           : typeInfo.name;\n        // IntrinsicDefinition\n        return {\n            size: typeInfo.size,\n            type: type as WGSLType,\n        };\n    }\n}\n","import {\n  isTypedArray,\n} from './typed-arrays.js';\n\nexport function guessTextureBindingViewDimensionForTexture(\n    dimension: GPUTextureDimension | undefined,\n    depthOrArrayLayers: number,\n): GPUTextureViewDimension {\n  switch (dimension) {\n    case '1d': return '1d';\n    case '3d': return '3d';\n    default: return depthOrArrayLayers > 1 ? '2d-array' : '2d';\n  }\n}\n\nfunction normalizeGPUExtent3Dict(size: GPUExtent3DDict) {\n  return [size.width, size.height || 1, size.depthOrArrayLayers || 1];\n}\n\n/**\n * Converts a `GPUExtent3D` into an array of numbers\n *\n * `GPUExtent3D` has two forms `[width, height?, depth?]` or\n * `{width: number, height?: number, depthOrArrayLayers?: number}`\n *\n * You pass one of those in here and it returns an array of 3 numbers\n * so that your code doesn't have to deal with multiple forms.\n *\n * @param size\n * @returns an array of 3 numbers, [width, height, depthOrArrayLayers]\n */\nexport function normalizeGPUExtent3D(size: GPUExtent3D): number[] {\n  return (Array.isArray(size) || isTypedArray(size))\n    ? [...(size as Iterable<number>), 1, 1].slice(0, 3)\n    : normalizeGPUExtent3Dict(size as GPUExtent3DDict);\n}\n\n/**\n * Given a GPUExtent3D returns the number of mip levels needed\n *\n * @param size\n * @returns number of mip levels needed for the given size\n */\nexport function numMipLevels(size: GPUExtent3D, dimension?: GPUTextureDimension): number {\n   const sizes = normalizeGPUExtent3D(size);\n   const maxSize = Math.max(...sizes.slice(0, dimension === '3d' ? 3 : 2));\n   return 1 + Math.log2(maxSize) | 0;\n}\n\n// Use a WeakMap so the device can be destroyed and/or lost\nconst byDevice = new WeakMap();\n\n/**\n * Generates mip levels from level 0 to the last mip for an existing texture\n *\n * The texture must have been created with TEXTURE_BINDING and RENDER_ATTACHMENT\n * and been created with mip levels\n *\n * @param device A GPUDevice\n * @param texture The texture to create mips for\n * @param textureBindingViewDimension This is only needed in compatibility mode\n *   and it is only needed when the texture is going to be used as a cube map.\n */\nexport function generateMipmap(\n    device: GPUDevice,\n    texture: GPUTexture,\n    textureBindingViewDimension?: GPUTextureViewDimension) {\n  let perDeviceInfo = byDevice.get(device);\n  if (!perDeviceInfo) {\n    perDeviceInfo = {\n      pipelineByFormatAndViewDimension: {},\n      moduleByViewDimension: {},\n    };\n    byDevice.set(device, perDeviceInfo);\n  }\n  let {\n    sampler,\n    module,\n  } = perDeviceInfo;\n  const {\n    pipelineByFormatAndViewDimension,\n  } = perDeviceInfo;\n  textureBindingViewDimension = device.features.has('core-features-and-limits')\n    ? '2d-array'\n    : textureBindingViewDimension ?? guessTextureBindingViewDimensionForTexture(\n        texture.dimension, texture.depthOrArrayLayers\n      );\n  if (!module) {\n    module = device.createShaderModule({\n      label: `mip level generation for ${textureBindingViewDimension}`,\n      code: `\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n          @location(1) @interpolate(flat, either) baseArrayLayer: u32,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32,\n          @builtin(instance_index) baseArrayLayer: u32,\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          vsOutput.baseArrayLayer = baseArrayLayer;\n          return vsOutput;\n        }\n\n        @group(0) @binding(0) var ourSampler: sampler;\n\n        @group(0) @binding(1) var ourTexture2d: texture_2d<f32>;\n        @fragment fn fs2d(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(ourTexture2d, ourSampler, fsInput.texcoord);\n        }\n\n        @group(0) @binding(1) var ourTexture2dArray: texture_2d_array<f32>;\n        @fragment fn fs2darray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTexture2dArray,\n            ourSampler,\n            fsInput.texcoord,\n            fsInput.baseArrayLayer);\n        }\n\n        @group(0) @binding(1) var ourTextureCube: texture_cube<f32>;\n        @fragment fn fscube(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCube,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1));\n        }\n\n        @group(0) @binding(1) var ourTextureCubeArray: texture_cube_array<f32>;\n        @fragment fn fscubearray(fsInput: VSOutput) -> @location(0) vec4f {\n          return textureSample(\n            ourTextureCubeArray,\n            ourSampler,\n            faceMat[fsInput.baseArrayLayer] * vec3f(fract(fsInput.texcoord), 1), fsInput.baseArrayLayer);\n        }\n      `,\n    });\n\n    sampler = device.createSampler({\n      minFilter: 'linear',\n      magFilter: 'linear',\n    });\n    Object.assign(perDeviceInfo, { sampler, module });\n  }\n\n  const id = `${texture.format}.${textureBindingViewDimension}`;\n\n  if (!pipelineByFormatAndViewDimension[id]) {\n    const entryPoint = `fs${textureBindingViewDimension.replace(/[\\W]/, '')}`;\n    pipelineByFormatAndViewDimension[id] = device.createRenderPipeline({\n      label: `mip level generator pipeline for ${textureBindingViewDimension}`,\n      layout: 'auto',\n      vertex: {\n        module,\n      },\n      fragment: {\n        module,\n        entryPoint,\n        targets: [{ format: texture.format }],\n      },\n    });\n  }\n  const pipeline = pipelineByFormatAndViewDimension[id];\n\n  const encoder = device.createCommandEncoder({\n    label: 'mip gen encoder',\n  });\n\n  for (let baseMipLevel = 1; baseMipLevel < texture.mipLevelCount; ++baseMipLevel) {\n    for (let baseArrayLayer = 0; baseArrayLayer < texture.depthOrArrayLayers; ++baseArrayLayer) {\n      const bindGroup = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: sampler },\n          {\n            binding: 1,\n            resource: texture.createView({\n              dimension: textureBindingViewDimension,\n              baseMipLevel: baseMipLevel - 1,\n              mipLevelCount: 1,\n            }),\n          },\n        ],\n      });\n\n      const renderPassDescriptor: GPURenderPassDescriptor = {\n        label: 'mip gen renderPass',\n        colorAttachments: [\n          {\n            view: texture.createView({\n               dimension: '2d',\n               baseMipLevel,\n               mipLevelCount: 1,\n               baseArrayLayer,\n               arrayLayerCount: 1,\n            }),\n            loadOp: 'clear',\n            storeOp: 'store',\n          },\n        ],\n      };\n\n      const pass = encoder.beginRenderPass(renderPassDescriptor);\n      pass.setPipeline(pipeline);\n      pass.setBindGroup(0, bindGroup);\n      pass.draw(3, 1, 0, baseArrayLayer);\n      pass.end();\n    }\n  }\n\n  const commandBuffer = encoder.finish();\n  device.queue.submit([commandBuffer]);\n}","import {\n  TypedArray,\n  TypedArrayConstructor,\n  isTypedArray,\n} from './typed-arrays.js';\n\nconst kTypedArrayToAttribFormat = new Map<TypedArrayConstructor, {formats: [string, string], defaultForType: number}>([\n  [ Int8Array,    { formats: ['sint8',   'snorm8' ], defaultForType: 1 } ],\n  [ Uint8Array,   { formats: ['uint8',   'unorm8' ], defaultForType: 1 } ],\n  [ Int16Array,   { formats: ['sint16',  'snorm16'], defaultForType: 1 } ],\n  [ Uint16Array,  { formats: ['uint16',  'unorm16'], defaultForType: 1 } ],\n  [ Int32Array,   { formats: ['sint32',  'snorm32'], defaultForType: 0 } ],\n  [ Uint32Array,  { formats: ['uint32',  'unorm32'], defaultForType: 0 } ],\n  [ Float32Array, { formats: ['float32', 'float32'], defaultForType: 0 } ],\n  // TODO: Add Float16Array\n]);\n\nconst kVertexFormatPrefixToType = new Map<string, TypedArrayConstructor>(\n  [...kTypedArrayToAttribFormat.entries()].map(([Type, {formats: [s1, s2]}]) => [[s1, Type], [s2, Type]] as [[string, TypedArrayConstructor], [string, TypedArrayConstructor]]).flat()\n);\n\n/**\n * See {@link Arrays} for details\n */\nexport type FullArraySpec = {\n  data: number | number[] | TypedArray,\n  type?: TypedArrayConstructor,\n  numComponents?: number,\n  shaderLocation?: number,\n  normalize?: boolean,\n};\n\nexport type ArrayUnion = number | number[] | TypedArray | FullArraySpec;\n\n/**\n * Named Arrays\n *\n * A set of named arrays are passed to various functions like\n * {@link createBufferLayoutsFromArrays} and {@link createBuffersAndAttributesFromArrays}\n *\n * Each array can be 1 of 4 things. A native JavaScript array, a TypedArray, a number, a {@link FullArraySpec}\n *\n * If it's a native array then, if the name of the array is `indices` the data will be converted\n * to a `Uint32Array`, otherwise a `Float32Array`.  Use a TypedArray or a {@link FullArraySpec} to choose a different type.\n * The {@link FullArraySpec} `type` is only used if it's not already a TypedArray\n *\n * If it's a native array or a TypedArray or if `numComponents` in a {@link FullArraySpec} is not\n * specified it will be guessed. If the name contains 'coord', 'texture' or 'uv' then numComponents will be 2.\n * If the name contains 'color' or 'colour' then numComponents will be 4. Otherwise it's 3.\n *\n * For attribute formats, guesses are made based on type and number of components. The guess is\n * based on this table where (d) is the default for that type if `normalize` is not specified\n *\n * | Type          |     ..      | normalize   |\n * | ------------  | ----------- | ----------- |\n * | Int8Array     | sint8       | snorm8 (d)  |\n * | Uint8Array    | uint8       | unorm8 (d)  |\n * | Int16Array    | sint16      | snorm16 (d) |\n * | Uint16Array   | uint16      | unorm16 (d) |\n * | Int32Array    | sint32 (d)  | snorm32     |\n * | Uint32Array   | uint32 (d)  | unorm32     |\n * | Float32Array  | float32 (d) | float32     |\n *\n */\nexport type Arrays = { [key: string]: ArrayUnion };\nexport type ArraysOptions = {\n  interleave?: boolean,\n  stepMode?: GPUVertexStepMode,\n  usage?: GPUBufferUsageFlags,\n  shaderLocation?: number,\n};\n\n/**\n * Returned by {@link createBuffersAndAttributesFromArrays}\n */\nexport type BuffersAndAttributes = {\n  numElements: number,\n  bufferLayouts: GPUVertexBufferLayout[],\n  buffers: GPUBuffer[],\n  indexBuffer?: GPUBuffer,\n  indexFormat?: GPUIndexFormat,\n};\n\nfunction isIndices(name: string) {\n  return name === \"indices\";\n}\n\nexport function makeTypedArrayFromArrayUnion(array: ArrayUnion, name: string): TypedArray {\n  if (isTypedArray(array)) {\n    return array as TypedArray;\n  }\n\n  let asFullSpec = array as FullArraySpec;\n  if (isTypedArray(asFullSpec.data)) {\n    return asFullSpec.data as TypedArray;\n  }\n\n  if (Array.isArray(array) || typeof array === 'number') {\n    asFullSpec = {\n      data: array,\n    };\n  }\n\n  let Type = asFullSpec.type;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint32Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(asFullSpec.data as any); // ugh!\n}\n\nfunction getArray(array: ArrayUnion): number[] | TypedArray {\n  const arr = (array as TypedArray).length ? array : (array as FullArraySpec).data;\n  return arr as TypedArray;\n}\n\nconst kNameToNumComponents = [\n  { re: /coord|texture|uv/i, numComponents: 2 },\n  { re: /color|colour/i, numComponents: 4 },\n];\n\nfunction guessNumComponentsFromNameImpl(name: string) {\n  for (const {re, numComponents} of kNameToNumComponents) {\n    if (re.test(name)) {\n      return numComponents;\n    }\n  }\n  return 3;\n}\n\nfunction guessNumComponentsFromName(name: string, length: number) {\n  const numComponents = guessNumComponentsFromNameImpl(name);\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n  return numComponents;\n}\n\nexport function getNumComponents(array: ArrayUnion , arrayName: string): number {\n  return (array as FullArraySpec).numComponents || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nconst kVertexFormatRE = /(\\w+)(?:x(\\d))$/;\nfunction numComponentsAndTypeFromVertexFormat(format: GPUVertexFormat) {\n  const m = kVertexFormatRE.exec(format);\n  const [prefix, numComponents] = m ? [m[1], parseInt(m[2])] : [format, 1];\n  return {\n    Type: kVertexFormatPrefixToType.get(prefix),\n    numComponents,\n  };\n}\n\nfunction createTypedArrayOfSameType(typedArray: TypedArray, arrayBuffer: ArrayBuffer) {\n  const Ctor = Object.getPrototypeOf(typedArray).constructor;\n  return new Ctor(arrayBuffer);\n}\n\nexport type TypedArrayWithOffsetAndStride = {\n  data: TypedArray,\n  offset: number, /** In elements, not bytes */\n  stride: number, /** In elements, not bytes */\n};\n\n/**\n * Given a set of named arrays, generates an array `GPUBufferLayout`s\n *\n * Examples:\n *\n * ```js\n *   const arrays = {\n *     position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *     normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *     texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *   };\n *\n *   const { bufferLayouts, typedArrays } = createBufferLayoutsFromArrays(arrays);\n * ```\n *\n * results in `bufferLayouts` being\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * and `typedArrays` being\n *\n * ```\n * [\n *   someFloat32Array0,\n *   someFloat32Array1,\n *   someFloat32Array2,\n * ]\n * ```\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: If typed arrays are passed in the same typed arrays will come out (copies will not be made)\n */\nexport function createBufferLayoutsFromArrays(arrays: Arrays, options: ArraysOptions = {}): {\n  bufferLayouts: GPUVertexBufferLayout[],\n  typedArrays: TypedArrayWithOffsetAndStride[],\n} {\n  const interleave = options.interleave === undefined ? true : options.interleave;\n  const stepMode = options.stepMode || 'vertex';\n  const shaderLocations: number[] = options.shaderLocation\n     ? (Array.isArray(options.shaderLocation) ? options.shaderLocation : [options.shaderLocation])\n     : [0];\n  let currentOffset = 0;\n  const bufferLayouts: GPUVertexBufferLayout[] = [];\n  const attributes: GPUVertexAttribute[] = [];\n  const typedArrays: TypedArrayWithOffsetAndStride[] = [];\n  Object.keys(arrays)\n    .filter(arrayName => !isIndices(arrayName))\n    .forEach(arrayName => {\n      const array = arrays[arrayName];\n      const data = makeTypedArrayFromArrayUnion(array, arrayName);\n      const totalNumComponents = getNumComponents(array, arrayName);\n      // if totalNumComponents > 4 then we clearly need to split this into multiple\n      // attributes\n      // (a) <= 4 doesn't mean don't split and\n      // (b) how to split? We could divide by 4 and if it's not even then divide by 3\n      //     as a guess?\n      //     5 is error? or 1x4 + 1x1?\n      //     6 is 2x3\n      //     7 is error? or 1x4 + 1x3?\n      //     8 is 2x4\n      //     9 is 3x3\n      //    10 is error? or 2x4 + 1x2?\n      //    11 is error? or 2x4 + 1x3?\n      //    12 is 3x4 or 4x3?\n      //    13 is error? or 3x4 + 1x1 or 4x3 + 1x1?\n      //    14 is error? or 3x4 + 1x2 or 4x3 + 1x2?\n      //    15 is error? or 3x4 + 1x3 or 4x3 + 1x3?\n      //    16 is 4x4\n      const by4 = totalNumComponents / 4;\n      const by3 = totalNumComponents / 3;\n      const step = by4 % 1 === 0 ? 4 : (by3 % 1 === 0 ? 3 : 4);\n      for (let component = 0; component < totalNumComponents; component += step) {\n        const numComponents = Math.min(step, totalNumComponents - component);\n        const offset = currentOffset;\n        currentOffset += numComponents * data.BYTES_PER_ELEMENT;\n        const { defaultForType, formats } = kTypedArrayToAttribFormat.get(Object.getPrototypeOf(data).constructor)!;\n        const normalize = (array as FullArraySpec).normalize;\n        const formatNdx = typeof normalize === 'undefined' ? defaultForType : (normalize ? 1 : 0);\n        const format = `${formats[formatNdx]}${numComponents > 1 ? `x${numComponents}` : ''}` as GPUVertexFormat;\n\n        // TODO: cleanup with generator?\n        const shaderLocation = shaderLocations.shift()!;\n        if (shaderLocations.length === 0) {\n          shaderLocations.push(shaderLocation + 1);\n        }\n        attributes.push({\n          offset,\n          format,\n          shaderLocation,\n        });\n        typedArrays.push({\n          data,\n          offset: component,\n          stride: totalNumComponents,\n        });\n      }\n      if (!interleave) {\n        bufferLayouts.push({\n          stepMode,\n          arrayStride: currentOffset,\n          attributes: attributes.slice(),\n        });\n        currentOffset = 0;\n        attributes.length = 0;\n      }\n    });\n  if (attributes.length) {\n    bufferLayouts.push({\n      stepMode,\n      arrayStride: currentOffset,\n      attributes: attributes,\n    });\n  }\n  return {\n    bufferLayouts,\n    typedArrays,\n  };\n}\n\nfunction getTypedArrayWithOffsetAndStride(ta: TypedArray | TypedArrayWithOffsetAndStride, numComponents: number) {\n  return (isTypedArray(ta)\n    ? { data: ta, offset: 0, stride: numComponents }\n    : ta) as TypedArrayWithOffsetAndStride;\n}\n\n/**\n * Given an array of `GPUVertexAttribute`s and a corresponding array\n * of TypedArrays, interleaves the contents of the typed arrays\n * into the given ArrayBuffer\n *\n * example:\n *\n * ```js\n * const attributes: GPUVertexAttribute[] = [\n *   { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *   { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *   { shaderLocation: 2, offset: 24, format: 'float32x2' },\n * ];\n * const typedArrays = [\n *   new Float32Array([1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1]),\n *   new Float32Array([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1]),\n *   new Float32Array([1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1]),\n * ];\n * const arrayStride = (3 + 3 + 2) * 4;  // pos + nrm + uv\n * const arrayBuffer = new ArrayBuffer(arrayStride * 24)\n * interleaveVertexData(attributes, typedArrays, arrayStride, arrayBuffer)\n * ```\n *\n * results in the contents of `arrayBuffer` to be the 3 TypedArrays interleaved\n *\n * See {@link Arrays} for details on the various types of arrays.\n *\n * Note: You can generate `attributes` and `typedArrays` above by calling\n * {@link createBufferLayoutsFromArrays}\n */\nexport function interleaveVertexData(\n    attributes: GPUVertexAttribute[],\n    typedArrays: (TypedArray | TypedArrayWithOffsetAndStride)[],\n    arrayStride: number,\n    arrayBuffer: ArrayBuffer,\n) {\n  const views = new Map<TypedArrayConstructor, TypedArray>();\n  const getView = (typedArray: TypedArray) => {\n    const Ctor = Object.getPrototypeOf(typedArray).constructor;\n    const view = views.get(Ctor);\n    if (view) {\n      return view;\n    }\n    const newView = new Ctor(arrayBuffer);\n    views.set(Ctor, newView);\n    return newView;\n  };\n\n  attributes.forEach((attribute, ndx) => {\n    const { offset, format } = attribute;\n    const { numComponents } = numComponentsAndTypeFromVertexFormat(format);\n    const {\n      data,\n      offset: srcOffset,\n      stride,\n    } = getTypedArrayWithOffsetAndStride(typedArrays[ndx], numComponents);\n\n    const view = getView(data);\n    for (let i = 0; i < data.length; i += stride) {\n      const ndx = i / stride;\n      const dstOffset = (offset + ndx * arrayStride) / view.BYTES_PER_ELEMENT;\n      const srcOff = i + srcOffset;\n      const s = data.subarray(srcOff, srcOff + numComponents);\n      view.set(s, dstOffset);\n    }\n  });\n}\n\n/**\n * Given arrays, create buffers, fills the buffers with data if provided, optionally\n * interleaves the data (the default).\n *\n * Example:\n *\n * ```js\n *  const {\n *    buffers,\n *    bufferLayouts,\n *    indexBuffer,\n *    indexFormat,\n *    numElements,\n *  } = createBuffersAndAttributesFromArrays(device, {\n *    position: [1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1],\n *    normal: [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1],\n *    texcoord: [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\n *    indices: [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23],\n *  });\n * ```\n *\n * Where `bufferLayouts` will be\n *\n * ```js\n * [\n *   {\n *     stepMode: 'vertex',\n *     arrayStride: 32,\n *     attributes: [\n *       { shaderLocation: 0, offset:  0, format: 'float32x3' },\n *       { shaderLocation: 1, offset: 12, format: 'float32x3' },\n *       { shaderLocation: 2, offset: 24, format: 'float32x2' },\n *     ],\n *   },\n * ]\n * ```\n *\n * * `buffers` will have one `GPUBuffer` of usage `GPUBufferUsage.VERTEX`\n * * `indexBuffer` will be `GPUBuffer` of usage `GPUBufferUsage.INDEX`\n * * `indexFormat` will be `uint32` (use a full spec or a typedarray of `Uint16Array` if you want 16bit indices)\n * * `numElements` will be 36 (this is either the number entries in the array named `indices` or if no\n *    indices are provided then it's the length of the first array divided by numComponents. See {@link Arrays})\n *\n * See {@link Arrays} for details on the various types of arrays.\n * Also see the cube and instancing examples.\n */\nexport function createBuffersAndAttributesFromArrays(device: GPUDevice, arrays: Arrays, options: ArraysOptions = {}): BuffersAndAttributes {\n  const usage = (options.usage || 0);\n\n  const {\n    bufferLayouts,\n    typedArrays,\n  } = createBufferLayoutsFromArrays(arrays, options);\n\n  const buffers = [];\n  let numElements = -1;\n  let bufferNdx = 0;\n  for (const {attributes, arrayStride} of bufferLayouts) {\n    const attribs = attributes as GPUVertexAttribute[];\n    const attrib0 = attribs[0];\n    const {numComponents} = numComponentsAndTypeFromVertexFormat(attrib0.format);\n\n    const {\n      data: data0,\n      stride,\n     } = getTypedArrayWithOffsetAndStride(typedArrays[bufferNdx], numComponents);\n\n    if (numElements < 0) {\n      numElements = data0.length / stride;\n    }\n\n    const size = arrayStride * numElements;\n    const buffer = device.createBuffer({\n      usage: usage | GPUBufferUsage.VERTEX,\n      size,\n      mappedAtCreation: true,\n    });\n\n    const arrayBuffer = buffer.getMappedRange();\n    if (attribs.length === 1 && arrayStride === data0.BYTES_PER_ELEMENT * numComponents) {\n      const view = createTypedArrayOfSameType(data0, arrayBuffer);\n      view.set(data0);\n    } else {\n      interleaveVertexData(attribs, typedArrays.slice(bufferNdx), arrayStride, arrayBuffer);\n    }\n    buffer.unmap();\n    buffers.push(buffer);\n    bufferNdx += attribs.length;\n  }\n\n  const buffersAndAttributes: BuffersAndAttributes = {\n    numElements,\n    bufferLayouts,\n    buffers,\n  };\n\n  const indicesEntry = Object.entries(arrays).find(([arrayName]) => isIndices(arrayName));\n  if (indicesEntry) {\n    const indices = makeTypedArrayFromArrayUnion(indicesEntry[1], 'indices');\n    const indexBuffer = device.createBuffer({\n      size: indices.byteLength,\n      usage: GPUBufferUsage.INDEX | usage,\n      mappedAtCreation: true,\n    });\n    const dst = createTypedArrayOfSameType(indices, indexBuffer.getMappedRange());\n    dst.set(indices);\n    indexBuffer.unmap();\n\n    buffersAndAttributes.indexBuffer = indexBuffer;\n    buffersAndAttributes.indexFormat = indices instanceof Uint16Array ? 'uint16' : 'uint32';\n    buffersAndAttributes.numElements = indices.length;\n  }\n\n  return buffersAndAttributes;\n}\n\n/**\n * Calls `passEncoder.setVertexBuffer` and optionally `passEncoder.setIndexBuffer`\n * for the buffers specified in `buffersAndAttributes`.\n *\n * This is extremely simple function. It is equivalent to\n *\n * ```js\n * buffersAndAttributes.buffers.forEach((buffer, i) => {\n *   passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n * });\n*\n * if (buffersAndAttributes.indexBuffer) {\n *   passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat!);\n * }\n * ```\n *\n * It exists solely for simple cases. If you have a complex case, call the passEncoder\n * yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n * @param firstVertexBufferIndex The first vertex buffer index. default = 0.\n */\nexport function setVertexAndIndexBuffers(\n    passEncoder: GPURenderPassEncoder,\n    buffersAndAttributes: BuffersAndAttributes,\n    firstVertexBufferIndex = 0) {\n  buffersAndAttributes.buffers.forEach((buffer, i) => {\n    passEncoder.setVertexBuffer(firstVertexBufferIndex + i, buffer);\n  });\n\n  if (buffersAndAttributes.indexBuffer) {\n    passEncoder.setIndexBuffer(buffersAndAttributes.indexBuffer, buffersAndAttributes.indexFormat!);\n  }\n}\n\n/**\n * Calls {@link setVertexAndIndexBuffers} and then calls either `draw` or `drawIndexed`\n *\n * This is an extremely simple function. See  {@link setVertexAndIndexBuffers}.\n * If you need something more complex, call pass encoder functions yourself as appropriate.\n *\n * @param passEncoder a render pass encoder\n * @param buffersAndAttributes As returned from {@link createBuffersAndAttributesFromArrays}\n */\nexport function drawArrays(passEncoder: GPURenderPassEncoder, buffersAndAttributes: BuffersAndAttributes) {\n  setVertexAndIndexBuffers(passEncoder, buffersAndAttributes);\n  if (buffersAndAttributes.indexBuffer) {\n    passEncoder.drawIndexed(buffersAndAttributes.numElements);\n  } else {\n    passEncoder.draw(buffersAndAttributes.numElements);\n  }\n}","import {\n  TypedArray,\n  TypedArrayConstructor,\n  isTypedArray,\n} from './typed-arrays.js';\nimport {\n  generateMipmap,\n  numMipLevels,\n  guessTextureBindingViewDimensionForTexture,\n} from './generate-mipmap.js';\n\nexport type CopyTextureOptions = {\n  flipY?: boolean,\n  premultipliedAlpha?: boolean,\n  colorSpace?: PredefinedColorSpace;\n  dimension?: GPUTextureDimension;\n  viewDimension?: GPUTextureViewDimension;\n  baseArrayLayer?: number;\n};\n\nexport type TextureData = {\n  data: TypedArray | number[],\n};\nexport type TextureCreationData = TextureData & {\n  width?: number,\n  height?: number,\n};\n\nexport type TextureRawDataSource = TextureCreationData | TypedArray | number[];\nexport type TextureSource = GPUCopyExternalImageSourceInfo['source'] | TextureRawDataSource;\n\nfunction isTextureData(source: TextureSource) {\n  const src = source as TextureData;\n  return isTypedArray(src.data) || Array.isArray(src.data);\n}\n\nfunction isTextureRawDataSource(source: TextureSource) {\n  return isTypedArray(source) || Array.isArray(source) || isTextureData(source);\n}\n\nfunction toTypedArray(v: TypedArray | number[], format: GPUTextureFormat): TypedArray {\n  if (isTypedArray(v)) {\n    return v as TypedArray;\n  }\n  const { Type } = getTextureFormatInfo(format);\n  return new Type(v);\n}\n\nfunction guessDimensions(width: number | undefined, height: number | undefined, numElements: number, dimension: GPUTextureViewDimension = '2d'): number[] {\n  if (numElements % 1 !== 0) {\n    throw new Error(\"can't guess dimensions\");\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (dimension === 'cube' ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width!;\n    if (height % 1) {\n      throw new Error(\"can't guess dimensions\");\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw new Error(\"can't guess dimensions\");\n    }\n  }\n  const depth = numElements / width! / height;\n  if (depth % 1) {\n    throw new Error(\"can't guess dimensions\");\n  }\n  return [width!, height, depth];\n}\n\nfunction textureViewDimensionToDimension(viewDimension: GPUTextureViewDimension | undefined) {\n  switch (viewDimension) {\n    case '1d': return '1d';\n    case '3d': return '3d';\n    default: return '2d';\n  }\n}\n\nconst kFormatToTypedArray: {[key: string]: TypedArrayConstructor} = {\n  '8snorm': Int8Array,\n  '8unorm': Uint8Array,\n  '8sint': Int8Array,\n  '8uint': Uint8Array,\n  '16snorm': Int16Array,\n  '16unorm': Uint16Array,\n  '16sint': Int16Array,\n  '16uint': Uint16Array,\n  '32snorm': Int32Array,\n  '32unorm': Uint32Array,\n  '32sint': Int32Array,\n  '32uint': Uint32Array,\n  '16float': Uint16Array,  // TODO: change to Float16Array\n  '32float': Float32Array,\n};\n\nconst kTextureFormatRE = /([a-z]+)(\\d+)([a-z]+)/;\n\nfunction getTextureFormatInfo(format: GPUTextureFormat) {\n  // this is a hack! It will only work for common formats\n  const [, channels, bits, typeName] = kTextureFormatRE.exec(format)!;\n  // TODO: if the regex fails, use table for other formats?\n  const numChannels = channels.length;\n  const bytesPerChannel = parseInt(bits) / 8;\n  const bytesPerElement = numChannels * bytesPerChannel;\n  const Type = kFormatToTypedArray[`${bits}${typeName}`];\n\n  return {\n    channels,\n    numChannels,\n    bytesPerChannel,\n    bytesPerElement,\n    Type,\n  };\n}\n\n\n/**\n * Gets the size of a mipLevel. Returns an array of 3 numbers [width, height, depthOrArrayLayers]\n */\nexport function getSizeForMipFromTexture(texture: GPUTexture, mipLevel: number): number[] {\n  return [\n    texture.width,\n    texture.height,\n    texture.depthOrArrayLayers,\n  ].map(v => Math.max(1, Math.floor(v / 2 ** mipLevel)));\n}\n\n/**\n * Uploads Data to a texture\n */\nfunction uploadDataToTexture(\n  device: GPUDevice,\n  texture: GPUTexture,\n  source: TextureRawDataSource,\n  options: { origin?: GPUOrigin3D },\n) {\n  const data = toTypedArray((source as TextureData).data || source, texture.format);\n  const mipLevel = 0;\n  const size = getSizeForMipFromTexture(texture, mipLevel);\n  const { bytesPerElement } = getTextureFormatInfo(texture.format);\n  const origin = options.origin || [0, 0, 0];\n  device.queue.writeTexture(\n    { texture, origin },\n    data,\n    { bytesPerRow: bytesPerElement * size[0], rowsPerImage: size[1] },\n    size,\n  );\n}\n/**\n * Copies a an array of \"sources\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nexport function copySourcesToTexture(\n    device: GPUDevice,\n    texture: GPUTexture,\n    sources: TextureSource[],\n    options: CopyTextureOptions = {},\n) {\n  let tempTexture: GPUTexture | undefined;\n  sources.forEach((source, layer) => {\n    const origin = [0, 0, layer + (options.baseArrayLayer || 0)];\n    if (isTextureRawDataSource(source)) {\n      uploadDataToTexture(device, texture, source as TextureRawDataSource, { origin });\n    } else {\n      const s = source as GPUCopyExternalImageSourceInfo['source'];\n      // work around limit that you can't call copyExternalImageToTexture for 3d texture.\n      // sse https://github.com/gpuweb/gpuweb/issues/4697 for if we can remove this\n      let dstTexture = texture;\n      let copyOrigin = origin;\n      if (texture.dimension === '3d') {\n        tempTexture = tempTexture ?? device.createTexture({\n          format: texture.format,\n          usage: texture.usage | GPUTextureUsage.COPY_SRC,\n          size: [texture.width, texture.height, 1],\n        });\n        dstTexture = tempTexture;\n        copyOrigin = [0, 0, 0];\n      }\n\n      const {flipY, premultipliedAlpha, colorSpace} = options;\n      device.queue.copyExternalImageToTexture(\n        { source: s, flipY, },\n        { texture: dstTexture, premultipliedAlpha, colorSpace, origin: copyOrigin },\n        getSizeFromSource(s, options),\n      );\n\n      if (tempTexture) {\n        const encoder = device.createCommandEncoder();\n        encoder.copyTextureToTexture(\n          { texture: tempTexture },\n          { texture, origin },\n          tempTexture,\n        );\n        device.queue.submit([encoder.finish()]);\n      }\n    }\n  });\n\n  if (tempTexture) {\n    tempTexture.destroy();\n  }\n\n  if (texture.mipLevelCount > 1) {\n    const viewDimension =  options.viewDimension ?? guessTextureBindingViewDimensionForTexture(\n      texture.dimension, texture.depthOrArrayLayers);\n    generateMipmap(device, texture, viewDimension);\n  }\n}\n\n\n/**\n * Copies a \"source\" (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * to a texture and then optionally generates mip levels\n */\nexport function copySourceToTexture(\n    device: GPUDevice,\n    texture: GPUTexture,\n    source: TextureSource,\n    options: CopyTextureOptions = {}) {\n  copySourcesToTexture(device, texture, [source], options);\n}\n\n/**\n * @property mips if true and mipLevelCount is not set then wll automatically generate\n *    the correct number of mip levels.\n * @property format Defaults to \"rgba8unorm\"\n * @property mipLeveLCount Defaults to 1 or the number of mips needed for a full mipmap if `mips` is true\n */\nexport type CreateTextureOptions = CopyTextureOptions & {\n  mips?: boolean,\n  usage?: GPUTextureUsageFlags,\n  format?: GPUTextureFormat,\n  mipLevelCount?: number,\n};\n\n/**\n * Gets the size from a source. This is to smooth out the fact that different\n * sources have a different way to get their size.\n */\nexport function getSizeFromSource(source: TextureSource, options: CreateTextureOptions): number[] {\n  if (source instanceof HTMLVideoElement) {\n    return [source.videoWidth, source.videoHeight, 1];\n  } else {\n    const maybeHasWidthAndHeight = source as { width: number, height: number };\n    const { width, height } = maybeHasWidthAndHeight;\n    if (width > 0 && height > 0 && !isTextureRawDataSource(source)) {\n      // this should cover Canvas, Image, ImageData, ImageBitmap, TextureCreationData\n      return [width, height, 1];\n    }\n    const format = options.format || 'rgba8unorm';\n    const { bytesPerElement, bytesPerChannel } = getTextureFormatInfo(format);\n    const data = isTypedArray(source) || Array.isArray(source)\n       ? source\n       : (source as TextureData).data;\n    const numBytes = isTypedArray(data)\n        ? (data as TypedArray).byteLength\n        : ((data as number[]).length * bytesPerChannel);\n    const numElements = numBytes / bytesPerElement;\n    return guessDimensions(width, height, numElements);\n  }\n}\n\n/**\n * Create a texture from an array of sources (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmap0,\n *        someCanvasOrVideoOrImageImageBitmap1,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n *\n * Note: If you are supporting compatibility mode you will need to pass in your\n * intended view dimension for cubemaps. Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     [\n *        someCanvasOrVideoOrImageImageBitmapPosX,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosY,\n *        someCanvasOrVideoOrImageImageBitmapNegY,\n *        someCanvasOrVideoOrImageImageBitmapPosZ,\n *        someCanvasOrVideoOrImageImageBitmapNegZ,\n *     ],\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *       viewDimension: 'cube', // <=- Required for compatibility mode\n *     }\n * );\n * ```\n */\nexport function createTextureFromSources(\n    device: GPUDevice,\n    sources: TextureSource[],\n    options: CreateTextureOptions = {}): GPUTexture {\n  // NOTE: We assume all the sizes are the same. If they are not you'll get\n  // an error.\n  const size = getSizeFromSource(sources[0], options);\n  size[2] = size[2] > 1 ? size[2] : sources.length;\n\n  const viewDimension = options.viewDimension ?? guessTextureBindingViewDimensionForTexture(\n    options.dimension, size[2]);\n  const dimension = textureViewDimensionToDimension(viewDimension);\n\n  const texture = device.createTexture({\n    dimension,\n    textureBindingViewDimension: viewDimension,\n    format: options.format || 'rgba8unorm',\n    mipLevelCount: options.mipLevelCount\n        ? options.mipLevelCount\n        : options.mips ? numMipLevels(size) : 1,\n    size,\n    usage: (options.usage ?? 0) |\n           GPUTextureUsage.TEXTURE_BINDING |\n           GPUTextureUsage.COPY_DST |\n           GPUTextureUsage.RENDER_ATTACHMENT,\n  });\n\n  copySourcesToTexture(device, texture, sources, options);\n\n  return texture;\n}\n\n/**\n * Create a texture from a source (Video, Canvas, OffscreenCanvas, ImageBitmap)\n * and optionally create mip levels. If you set `mips: true` and don't set a mipLevelCount\n * then it will automatically make the correct number of mip levels.\n *\n * Example:\n *\n * ```js\n * const texture = createTextureFromSource(\n *     device,\n *     someCanvasOrVideoOrImageImageBitmap,\n *     {\n *       usage: GPUTextureUsage.TEXTURE_BINDING |\n *              GPUTextureUsage.RENDER_ATTACHMENT |\n *              GPUTextureUsage.COPY_DST,\n *       mips: true,\n *     }\n * );\n * ```\n */\nexport function createTextureFromSource(\n    device: GPUDevice,\n    source: TextureSource,\n    options: CreateTextureOptions = {}): GPUTexture {\n  return createTextureFromSources(device, [source], options);\n}\n\nexport type CreateTextureFromBitmapOptions = CreateTextureOptions & ImageBitmapOptions;\n\n/**\n * Load an ImageBitmap\n * @param url\n * @param options\n * @returns the loaded ImageBitmap\n */\nexport async function loadImageBitmap(url: string, options: ImageBitmapOptions = {}): Promise<ImageBitmap> {\n  const res = await fetch(url);\n  const blob = await res.blob();\n  const opt: ImageBitmapOptions = {\n    ...options,\n    ...(options.colorSpaceConversion !== undefined && {colorSpaceConversion: 'none'}),\n  };\n  return await createImageBitmap(blob, opt);\n}\n\n/**\n * Load images and create a texture from them, optionally generating mip levels\n *\n * Assumes all the urls reference images of the same size.\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(\n *   device,\n *   [\n *     'https://someimage1.url',\n *     'https://someimage2.url',\n *   ],\n *   {\n *     mips: true,\n *     flipY: true,\n *   },\n * );\n * ```\n */\nexport async function createTextureFromImages(device: GPUDevice, urls: string[], options: CreateTextureFromBitmapOptions = {}): Promise<GPUTexture> {\n  // TODO: start once we've loaded one?\n  // We need at least 1 to know the size of the texture to create\n  const imgBitmaps = await Promise.all(urls.map(url => loadImageBitmap(url)));\n  return createTextureFromSources(device, imgBitmaps, options);\n}\n\n/**\n * Load an image and create a texture from it, optionally generating mip levels\n *\n * Example:\n *\n * ```js\n * const texture = await createTextureFromImage(device, 'https://someimage.url', {\n *   mips: true,\n *   flipY: true,\n * });\n * ```\n */\nexport async function createTextureFromImage(device: GPUDevice, url: string, options: CreateTextureFromBitmapOptions = {}): Promise<GPUTexture> {\n  return createTextureFromImages(device, [url], options);\n}\n","/*\n * Copyright 2023 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport { isTypedArray, TypedArray, TypedArrayConstructor } from './typed-arrays.js';\nimport { Arrays, getNumComponents, makeTypedArrayFromArrayUnion } from './attribute-utils.js';\n\n/**\n * A class to provide `push` on a typed array.\n *\n * example:\n *\n * ```js\n * const positions = new TypedArrayWrapper(new Float32Array(300), 3);\n * positions.push(1, 2, 3); // add a position\n * positions.push([4, 5, 6]);  // add a position\n * positions.push(new Float32Array(6)); // add 2 positions\n * const data = positions.typedArray;\n * ```\n */\nexport class TypedArrayWrapper<T extends TypedArray> {\n  typedArray: T;\n  cursor = 0;\n  numComponents: number;\n\n  constructor(arr: T, numComponents: number) {\n    this.typedArray = arr;\n    this.numComponents = numComponents;\n  }\n  get numElements(): number {\n    return this.typedArray.length / this.numComponents;\n  }\n  push(...data: (number | Iterable<number>)[]) {\n    for (const value of data) {\n      if (Array.isArray(value) || isTypedArray(value)) {\n        const asArray = data as number[];\n        this.typedArray.set(asArray, this.cursor);\n        this.cursor += asArray.length;\n      } else {\n        this.typedArray[this.cursor++] = value as number;\n      }\n    }\n  }\n  reset(index = 0) {\n    this.cursor = index;\n  }\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2, Float32Array);\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param numComponents number of components\n * @param numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param Type A constructor for the type. Default = `Float32Array`.\n */\nfunction createAugmentedTypedArray<T extends TypedArrayConstructor>(numComponents: number, numElements: number, Type: T) {\n  return new TypedArrayWrapper(new Type(numComponents * numElements) as InstanceType<T>, numComponents);\n}\n\n// I couldn't figure out how to make this because TypedArrayWrapper wants a type\n// but this is explicity kind of type-less.\nfunction createAugmentedTypedArrayFromExisting(numComponents: number, numElements: number, existingArray: TypedArray) {\n  const Ctor = existingArray.constructor as Float32ArrayConstructor;\n  const array: Float32Array = new Ctor(numComponents * numElements) as unknown as Float32Array;\n  return new TypedArrayWrapper(array, numComponents);\n}\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param params\n * @param params.size the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param params.xOffset the amount to offset the quad in X. Default = 0\n * @param params.yOffset the amount to offset the quad in Y. Default = 0\n * @return the created XY Quad vertices\n */\nexport function createXYQuadVertices({\n    size: inSize = 2, xOffset = 0, yOffset = 0\n  } = {}): Arrays {\n  const size = inSize * 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  } as Arrays;\n}\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param params\n * @param params.width Width of the plane. Default = 1\n * @param params.depth Depth of the plane. Default = 1\n * @param params.subdivisionsWidth Number of steps across the plane. Default = 1\n * @param params.subdivisionsDepth Number of steps down the plane. Default = 1\n * @return The created plane vertices.\n */\nexport function createPlaneVertices({\n    width = 1,\n    depth = 1,\n    subdivisionsWidth = 1,\n    subdivisionsDepth = 1,\n} = {}): Arrays {\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param params\n * @param params.radius radius of the sphere. Default = 1\n * @param params.subdivisionsAxis number of steps around the sphere. Default = 24\n * @param params.subdivisionsHeight number of vertically on the sphere. Default = 12\n * @param params.startLatitudeInRadians where to start the\n *     top of the sphere. Default = 0\n * @param params.endLatitudeInRadians Where to end the\n *     bottom of the sphere. Default = Ï€\n * @param params.startLongitudeInRadians where to start\n *     wrapping the sphere. Default = 0\n * @param params.endLongitudeInRadians where to end\n *     wrapping the sphere. Default = 2Ï€\n * @return The created sphere vertices.\n */\nexport function createSphereVertices({\n    radius = 1,\n    subdivisionsAxis = 24,\n    subdivisionsHeight = 12,\n    startLatitudeInRadians = 0,\n    endLatitudeInRadians = Math.PI,\n    startLongitudeInRadians = 0,\n    endLongitudeInRadians = Math.PI * 2,\n} = {}): Arrays {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  const latRange = endLatitudeInRadians - startLatitudeInRadians;\n  const longRange = endLongitudeInRadians - startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + startLongitudeInRadians;\n      const phi = latRange * v + startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param params\n * @param params.size width, height and depth of the cube. Default = 1\n * @return The created vertices.\n */\nexport function createCubeVertices({size = 1} = {}): Arrays {\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2 , numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(...position);\n      normals.push(...normal);\n      texcoords.push(...uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param params\n * @param params.bottomRadius Bottom radius of truncated cone. Default = 1\n * @param params.topRadius Top radius of truncated cone. Default = 0\n * @param params.height Height of truncated cone. Default = 1\n * @param params.radialSubdivisions The number of subdivisions around the\n *     truncated cone. Default = 24\n * @param params.verticalSubdivisions The number of subdivisions down the\n *     truncated cone. Default = 1\n * @param params.topCap Create top cap. Default = true.\n * @param params.bottomCap Create bottom cap. Default = true.\n * @return The created cone vertices.\n */\nexport function createTruncatedConeVertices({\n    bottomRadius = 1,\n    topRadius = 0,\n    height = 1,\n    radialSubdivisions = 24,\n    verticalSubdivisions = 1,\n    topCap = true,\n    bottomCap = true,\n} = {}): Arrays {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\n/**\n * Expands RLE data\n * @param rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param padding value to add each entry with.\n * @return the expanded rleData\n */\nfunction expandRLEData(rleData: number[], padding: number[] = []) {\n  padding = padding || [];\n  const data: number[] = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push(...padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push(...element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return The created vertices.\n */\nexport function create3DFVertices(): Arrays {\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts, Float32Array),\n    texcoord: createAugmentedTypedArray(2,  numVerts, Float32Array),\n    normal: createAugmentedTypedArray(3, numVerts, Float32Array),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return Object.fromEntries(Object.entries(arrays).map(([k, v]) => [k, v.typedArray]));\n}\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param params\n  * @param params.radius Radius of cylinder. Default = 1\n  * @param params.height Height of cylinder. Default = 1\n  * @param params.radialSubdivisions The number of subdivisions around the cylinder. Default = 24\n  * @param params.verticalSubdivisions The number of subdivisions down the cylinder. Default = 1\n  * @param params.topCap Create top cap. Default = true.\n  * @param params.bottomCap Create bottom cap. Default = true.\n  * @return The created vertices.\n  */\nexport function createCylinderVertices({\n    radius = 1,\n    height = 1,\n    radialSubdivisions = 24,\n    verticalSubdivisions = 1,\n    topCap = true,\n    bottomCap = true,\n} = {}): Arrays {\n  return createTruncatedConeVertices({\n      bottomRadius: radius,\n      topRadius: radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap,\n  });\n}\n\n/**\n * Creates vertices for a torus\n *\n * @param params\n * @param params.radius radius of center of torus circle. Default = 1\n * @param params.thickness radius of torus ring. Default = 0.24\n * @param params.radialSubdivisions The number of subdivisions around the torus. Default = 24\n * @param params.bodySubdivisions The number of subdivisions around the body torus. Default = 12\n * @param params.startAngle start angle in radians. Default = 0.\n * @param params.endAngle end angle in radians. Default = Math.PI * 2.\n * @return The created vertices.\n */\nexport function createTorusVertices({\n    radius = 1,\n    thickness = 0.24,\n    radialSubdivisions = 24,\n    bodySubdivisions = 12,\n    startAngle = 0,\n    endAngle = Math.PI * 2,\n} = {}): Arrays {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals     = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords   = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions.typedArray,\n    normal:   normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices:  indices.typedArray,\n  };\n}\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param params\n * @param params.radius Radius of the ground plane. Default = 1\n * @param params.divisions Number of triangles in the ground plane (at least 3). Default = 24\n * @param params.stacks Number of radial divisions. Default = 1\n * @param params.innerRadius Default = 0\n * @param params.stackPower Power to raise stack size to for decreasing width. Default = 1\n * @return The created vertices.\n */\nexport function createDiscVertices({\n    radius = 1,\n    divisions = 24,\n    stacks = 1,\n    innerRadius = 0,\n    stackPower = 1,\n} = {}): Arrays {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const normals   = createAugmentedTypedArray(3, numVertices, Float32Array);\n  const texcoords = createAugmentedTypedArray(2, numVertices, Float32Array);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions.typedArray,\n    normal: normals.typedArray,\n    texcoord: texcoords.typedArray,\n    indices: indices.typedArray,\n  };\n}\n\nfunction allButIndices(name: string) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the vertices by index.\n */\nexport function deindex(arrays: Arrays): Arrays {\n  const indicesP = arrays.indices;\n  const newVertices: Arrays = {};\n  const indices = makeTypedArrayFromArrayUnion(indicesP, 'indices');\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel: string) {\n    const srcBuffer = makeTypedArrayFromArrayUnion(arrays[channel], channel);\n    const numComponents = getNumComponents(srcBuffer, channel);\n    const dstBuffer = createAugmentedTypedArrayFromExisting(numComponents, numElements, srcBuffer);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer.typedArray;\n  }\n\n  Object.keys(arrays).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n// I don't want to pull in a whole math library\nconst normalize = ([x, y, z]: Float32Array) => {\n  const len = x * x + y * y + z * z;\n  return new Float32Array([x / len, y / len, z / len]);\n};\n\nconst subtract = (a: Float32Array, b: Float32Array) => {\n  const r = new Float32Array(a.length);\n  for (let i = 0; i < a.length; ++i) {\n    r[i] = a[i] - b[i];\n  }\n  return r;\n};\n\nconst cross = (a: Float32Array, b: Float32Array) => {\n  const r = new Float32Array(a.length);\n\n  r[0] = a[1] * b[2] - a[2] * b[1];\n  r[1] = a[2] * b[0] - a[0] * b[2];\n  r[2] = a[0] * b[1] - a[1] * b[0];\n\n  return r;\n};\n\n/**\n * Generate triangle normals from positions.\n * Assumes every 3 values is a position and every 3 positions come from the same triangle\n */\nexport function generateTriangleNormals(positions: Float32Array): Float32Array {\n  const normals = new Float32Array(positions.length);\n  for (let ii = 0; ii < positions.length; ii += 9) {\n    // pull out the 3 positions for this triangle\n    const p0 = positions.subarray(ii    , ii + 3);\n    const p1 = positions.subarray(ii + 3, ii + 6);\n    const p2 = positions.subarray(ii + 6, ii + 9);\n\n    const n0 = normalize(subtract(p0, p1));\n    const n1 = normalize(subtract(p0, p2));\n    const n = cross(n0, n1);\n\n    // copy them back in\n    normals.set(n, ii);\n    normals.set(n, ii + 3);\n    normals.set(n, ii + 6);\n  }\n\n  return normals;\n}\n\n"],"names":["roundUpToMultipleOf","v","multiple","isTypedArray","arr","length","buffer","ArrayBuffer","byteLength","b","i32","numElements","align","size","type","View","Int32Array","u32","Uint32Array","f32","Float32Array","f16","Uint16Array","vec2f","vec2i","vec2u","vec2h","vec3i","vec3u","vec3f","vec3h","vec4i","vec4u","vec4f","vec4h","mat2x2f","mat2x2h","mat3x2f","mat3x2h","mat4x2f","mat4x2h","mat2x3f","pad","mat2x3h","mat3x3f","mat3x3h","mat4x3f","mat4x3h","mat2x4f","mat2x4h","mat3x4f","mat3x4h","mat4x4f","mat4x4h","bool","kWGSLTypeInfo","kWGSLTypes","obj","Object","keys","setIntrinsicsToView","types","flatten","visited","Set","info","has","add","includes","makeIntrinsicTypedArrayView","typeDef","baseOffset","isArray","undefined","sizeInBytes","baseNumElements","BYTES_PER_ELEMENT","Error","isIntrinsic","fields","elementType","makeTypedArrayViews","arrayBuffer","offset","asArrayDef","asStructDef","asIntrinsicDef","getSizeOfTypeDef","makeViews","getSizeAndAlignmentOfUnsizedArrayElementOfTypeDef","effectiveNumElements","fn","i","Array","fill","map","_","views","name","entries","setStructuredView","data","view","dataLen","stride","set","asArray","forEach","newValue","ndx","asViews","key","s_views","WeakMap","getView","Ctor","viewsByCtor","get","Map","getViewsByCtor","setIntrinsicFromArrayLikeOfNumber","index","setTypedValues","isArrayLikeOfNumber","fieldDef","getAlignmentOfTypeDef","values","reduce","max","Math","unalignedSize","lastField","pop","e","constructor","t","this","attributes","isStruct","isTemplate","n","members","format","count","super","startLine","endLine","inUse","s","r","access","a","o","u","l","Uniform","Storage","Texture","Sampler","StorageTexture","c","group","binding","resourceType","h","f","locationType","location","interpolation","p","m","id","d","stage","inputs","outputs","arguments","returnType","resources","overrides","calls","vertex","fragment","compute","x","constants","aliases","structs","g","_id","line","isAstNode","astNodeType","constEvaluate","constEvaluateString","toString","search","searchBlock","y","instance","w","k","args","body","I","expression","T","condition","S","E","init","increment","A","storage","value","$","V","N","decrement","parse","L","operator","variable","assign","addAssign","subtractAssin","multiplyAssign","divideAssign","moduloAssign","andAssign","orAssign","xorAssign","shiftLeftAssign","shiftRightAssign","O","D","C","continuing","M","cases","F","elseif","else","U","q","B","extensions","z","severity","rule","R","G","W","loopId","P","X","maxFormatType","_priority","x32","Z","getMemberIndex","j","vec2b","vec3b","vec4b","Q","Y","K","H","postfix","J","ee","evalExpression","context","te","cachedReturnValue","setCachedReturnValue","isBuiltin","builtinFunctionNames","ne","se","initializer","getDataValue","re","isScalar","be","isVector","Ie","Te","scalarValue","console","error","vectorValue","ae","oe","contents","ue","le","ce","right","he","left","_getPromotedType","fe","pe","me","selectors","de","_e","ve","xe","ge","ye","typeInfo","setDataValue","we","void","floor","ke","getTypeInfo","from","push","endsWith","slice","Se","textureSize","log","getTypeName","setData","Uint8Array","toLocaleLowerCase","token","keyword","reserved","Ee","Ae","none","eof","asm","bf16","do","enum","f64","handle","i8","i16","i64","mat","premerge","regardless","typedef","u8","u16","u64","unless","using","vec","keywords","array","atomic","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","ptr","sampler","sampler_comparison","struct","texture_1d","texture_2d","texture_2d_array","texture_3d","texture_cube","texture_cube_array","texture_multisampled_2d","texture_storage_1d","texture_storage_2d","texture_storage_2d_array","texture_storage_3d","texture_depth_2d","texture_depth_2d_array","texture_depth_cube","texture_depth_cube_array","texture_depth_multisampled_2d","texture_external","vec2","vec3","vec4","bitcast","block","break","case","continue","default","diagnostic","discard","enable","fallthrough","false","for","function","if","let","const","loop","while","private","read","read_write","return","requires","switch","true","alias","uniform","var","override","workgroup","write","r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8unorm_srgb","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","bgra8unorm_srgb","rgb10a2unorm","rg11b10float","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","static_assert","tokens","decimal_float_literal","hex_float_literal","int_literal","uint_literal","ident","and","and_and","arrow","attr","forward_slash","bang","bracket_left","bracket_right","brace_left","brace_right","colon","comma","equal","equal_equal","not_equal","greater_than","greater_than_equal","shift_right","less_than","less_than_equal","shift_left","modulo","minus","minus_minus","period","plus","plus_plus","or","or_or","paren_left","paren_right","semicolon","star","tilde","underscore","xor","plus_equal","minus_equal","times_equal","division_equal","modulo_equal","and_equal","or_equal","xor_equal","shift_right_equal","shift_left_equal","simpleTokens","literalTokens","regexTokens","storage_class","access_mode","sampler_type","sampled_texture_type","multisampled_texture_type","storage_texture_type","depth_texture_type","texture_external_type","any_texture_type","texel_format","const_literal","literal_or_ident","element_count_expression","template_types","attribute_name","assignment_operators","increment_operators","$e","lexeme","isTemplateType","indexOf","isArrayType","isArrayOrTemplateType","Ve","_tokens","_start","_current","_line","_source","scanTokens","_isAtEnd","scanToken","_advance","_isWhitespace","_peekAhead","_addToken","_isAlpha","_isAlphaNumeric","_findType","_match","exec","substring","Ne","node","Le","Oe","uniforms","textures","samplers","entry","functions","_types","_functions","_isStorageTexture","updateAST","_getAliasInfo","_getAttributeNum","_isUniformVar","_isStorageVar","_isTextureVar","_isSamplerVar","_getAttribute","_findResources","_getInputs","_getOutputs","_addCalls","_markStructsInUse","getStructInfo","getOverrideInfo","_getAlias","findResource","_findResource","_markStructsFromAST","getBindGroups","_getStructOutputs","_getOutputInfo","_parseInt","_getStructInputs","_getInputInfo","_parseString","parseInt","isNaN","_updateTypeInfo","_getTypeSize","_updateStructInfo","_roundUp","_typeInfo","_textureTypes","_samplerTypes","ceil","De","clone","Ce","Me","parent","variables","currentFunctionName","getVariable","getFunction","createVariable","setVariable","getVariableValue","Fe","getVariableName","Ue","All","Any","some","Select","ArrayLength","Abs","abs","Acos","acos","Acosh","acosh","Asin","asin","Asinh","asinh","Atan","atan","Atanh","atanh","Atan2","atan2","Ceil","_clamp","min","Clamp","Cos","cos","Cosh","cosh","CountLeadingZeros","clz32","_countOneBits","CountOneBits","_countTrailingZeros","CountTrailingZeros","Cross","Degrees","PI","Determinant","Distance","sqrt","_dot","Dot","Dot4U8Packed","Dot4I8Packed","Exp","exp","Exp2","pow","ExtractBits","FaceForward","_firstLeadingBit","FirstLeadingBit","_firstTrailingBit","log2","FirstTrailingBit","Floor","Fma","Fract","Frexp","InsertBits","InverseSqrt","Ldexp","Length","Log","Log2","Max","Min","Mix","Modf","Normalize","Pow","QuantizeToF16","Radians","Reflect","Refract","ReverseBits","Round","round","Saturate","Sign","sign","Sin","sin","Sinh","sinh","_smoothstep","SmoothStep","Sqrt","Step","Tan","tan","Tanh","tanh","_getTransposeType","Transpose","Trunc","trunc","Dpdx","DpdxCoarse","DpdxFine","Dpdy","DpdyCoarse","DpdyFine","Fwidth","FwidthCoarse","FwidthFine","TextureDimensions","TextureGather","TextureGatherCompare","TextureLoad","TextureNumLayers","TextureNumLevels","TextureNumSamples","TextureSample","TextureSampleBias","TextureSampleCompare","TextureSampleCompareLevel","TextureSampleGrad","TextureSampleLevel","TextureSampleBaseClampToEdge","TextureStore","AtomicLoad","AtomicStore","AtomicAdd","AtomicSub","AtomicMax","AtomicMin","AtomicAnd","AtomicOr","AtomicXor","AtomicExchange","AtomicCompareExchangeWeak","Pack4x8snorm","Pack4x8unorm","Pack4xI8","Pack4xU8","Pack4x8Clamp","Pack4xU8Clamp","Pack2x16snorm","Pack2x16unorm","Pack2x16float","Unpack4x8snorm","Unpack4x8unorm","Unpack4xI8","Unpack4xU8","Unpack2x16snorm","Unpack2x16unorm","Unpack2x16float","StorageBarrier","TextureBarrier","WorkgroupBarrier","WorkgroupUniformLoad","SubgroupAdd","SubgroupExclusiveAdd","SubgroupInclusiveAdd","SubgroupAll","SubgroupAnd","SubgroupAny","SubgroupBallot","SubgroupBroadcast","SubgroupBroadcastFirst","SubgroupElect","SubgroupMax","SubgroupMin","SubgroupMul","SubgroupExclusiveMul","SubgroupInclusiveMul","SubgroupOr","SubgroupShuffle","SubgroupShuffleDown","SubgroupShuffleUp","SubgroupShuffleXor","SubgroupXor","QuadBroadcast","QuadSwapDiagonal","QuadSwapX","QuadSwapY","qe","Be","ze","Re","Ge","We","Pe","Xe","Ze","je","Qe","Ye","ast","reflection","builtins","execute","_setOverrides","_execStatements","dispatchWorkgroups","texture","_dispatchWorkgroup","execStatement","_breakObj","_continueObj","_let","_var","_const","_function","_if","_switch","_for","_while","_loop","_assign","_increment","_call","_evalBinaryOp","_evalLiteral","_evalVariable","_evalCall","_evalCreate","_evalConst","_evalBitcast","_evalUnaryOp","_dispatchExec","_callBuiltinFunction","_getScalarValue","_callConstructorValue","_callConstructorVec","_callConstructorMatrix","_maxFormatTypeInfo","Ke","_currentLine","_deferArrayCountEval","_currentLoop","_context","_exec","_initialize","_global_decl_or_directive","arrayType","countNode","_updateNode","_error","message","_peek","_check","_consume","_previous","_type_alias","_diagnostic","_requires_directive","_enable_directive","_attribute","_global_variable_decl","_override_variable_decl","_global_let_decl","_global_const_decl","_struct_decl","_function_decl","_type_decl","_compound_statement","_statement","_if_statement","_switch_statement","_loop_statement","_for_statement","_while_statement","_continuing_statement","_static_assert_statement","_return_statement","_variable_statement","_optional_paren_expression","_increment_decrement_statement","_func_call_statement","_assignment_statement","_for_init","_short_circuit_or_expression","_for_increment","_variable_decl","_unary_expression","_argument_expression_list","_switch_body","_case_selectors","_case_body","_shift_expression","_match_elseif","_elseif_statement","_short_circuit_and_expr","_inclusive_or_expression","_exclusive_or_expression","_and_expression","_equality_expression","_relational_expression","_additive_expression","_multiplicative_expression","_singular_expression","_primary_expression","_postfix_expression","_getStruct","_getType","_validateTypeRange","parseFloat","_paren_expression","_const_expression","_override_decl","_texture_sampler_types","He","update","getStageResources","defs","stageFlags","entryPoint","entryPointName","ep","entryPoints","filter","getEntryPointForStage","byBinding","getNamedVariables","reflect","fromEntries","typeDefinition","ResourceType","addType","addVariableType","makeStructDefinition","structInfo","getTextureSampleType","getViewDimension","getStorageTextureAccess","getSamplerType","getBindGroupLayoutEntry","resource","visibility","minBindingSize","externalTexture","multisampled","sampleType","viewDimension","storageTexture","addEntryPoints","funcInfos","assert","cond","msg","arrayInfo","asTemplateInfo","guessTextureBindingViewDimensionForTexture","dimension","depthOrArrayLayers","normalizeGPUExtent3D","width","height","normalizeGPUExtent3Dict","numMipLevels","sizes","maxSize","byDevice","generateMipmap","device","textureBindingViewDimension","perDeviceInfo","pipelineByFormatAndViewDimension","moduleByViewDimension","module","features","createShaderModule","label","code","createSampler","minFilter","magFilter","replace","createRenderPipeline","layout","targets","pipeline","encoder","createCommandEncoder","baseMipLevel","mipLevelCount","baseArrayLayer","bindGroup","createBindGroup","getBindGroupLayout","createView","renderPassDescriptor","colorAttachments","arrayLayerCount","loadOp","storeOp","pass","beginRenderPass","setPipeline","setBindGroup","draw","end","commandBuffer","finish","queue","submit","kTypedArrayToAttribFormat","Int8Array","formats","defaultForType","Int16Array","kVertexFormatPrefixToType","Type","s1","s2","flat","isIndices","makeTypedArrayFromArrayUnion","asFullSpec","kNameToNumComponents","numComponents","guessNumComponentsFromName","test","guessNumComponentsFromNameImpl","getNumComponents","arrayName","getArray","kVertexFormatRE","numComponentsAndTypeFromVertexFormat","prefix","createTypedArrayOfSameType","typedArray","getPrototypeOf","createBufferLayoutsFromArrays","arrays","options","interleave","stepMode","shaderLocations","shaderLocation","currentOffset","bufferLayouts","typedArrays","totalNumComponents","step","component","normalize","shift","arrayStride","getTypedArrayWithOffsetAndStride","ta","interleaveVertexData","attribute","srcOffset","newView","dstOffset","srcOff","subarray","setVertexAndIndexBuffers","passEncoder","buffersAndAttributes","firstVertexBufferIndex","buffers","setVertexBuffer","indexBuffer","setIndexBuffer","indexFormat","isTextureRawDataSource","source","src","isTextureData","kFormatToTypedArray","kTextureFormatRE","getTextureFormatInfo","channels","bits","typeName","numChannels","bytesPerChannel","bytesPerElement","getSizeForMipFromTexture","mipLevel","uploadDataToTexture","toTypedArray","origin","writeTexture","bytesPerRow","rowsPerImage","copySourcesToTexture","sources","tempTexture","layer","dstTexture","copyOrigin","createTexture","usage","GPUTextureUsage","COPY_SRC","flipY","premultipliedAlpha","colorSpace","copyExternalImageToTexture","getSizeFromSource","copyTextureToTexture","destroy","HTMLVideoElement","videoWidth","videoHeight","maybeHasWidthAndHeight","depth","guessDimensions","createTextureFromSources","textureViewDimensionToDimension","mips","TEXTURE_BINDING","COPY_DST","RENDER_ATTACHMENT","async","loadImageBitmap","url","res","fetch","blob","opt","colorSpaceConversion","createImageBitmap","createTextureFromImages","urls","Promise","all","TypedArrayWrapper","cursor","reset","createAugmentedTypedArray","CUBE_FACE_INDICES","createTruncatedConeVertices","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","topCap","bottomCap","extra","numVertices","positions","normals","texcoords","indices","vertsAroundEdge","slant","cosSlant","sinSlant","yy","ringRadius","ii","position","normal","texcoord","expandRLEData","rleData","padding","runLength","element","jj","allButIndices","len","subtract","cross","colors","numVerts","color","cornerVertices","faceNormals","uvCoords","faceIndices","uv","radius","divisions","stacks","innerRadius","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","theta","subdivisionsWidth","subdivisionsDepth","numVertsAcross","subdivisionsAxis","subdivisionsHeight","startLatitudeInRadians","endLatitudeInRadians","startLongitudeInRadians","endLongitudeInRadians","latRange","longRange","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","thickness","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ny","ring","ringAngle","xSin","zCos","nx","nz","nextRingIndex","nextSliceIndex","inSize","xOffset","yOffset","indicesP","newVertices","channel","srcBuffer","dstBuffer","existingArray","createAugmentedTypedArrayFromExisting","p0","p1","p2","n0","n1","byteOffset","alignment","numBytes","bufferNdx","attribs","attrib0","data0","createBuffer","GPUBufferUsage","VERTEX","mappedAtCreation","getMappedRange","unmap","indicesEntry","find","INDEX","drawIndexed","varDef","asVarDef","desc","GPUShaderStage","FRAGMENT","COMPUTE","bindGroupLayoutDescriptorsByGroupByBinding","bindingsToBindGroupEntry","descriptors","sort","WgslReflect","storages","storageTextures","externalTextures"],"mappings":"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","x_google_ignoreList":[4]}